--- include/dbus-c++/eventloop-integration.h.orig	2010-04-05 16:39:20.000000000 -0300
+++ include/dbus-c++/eventloop-integration.h	2010-04-05 16:40:00.000000000 -0300
@@ -25,7 +25,6 @@
 #ifndef __DBUSXX_EVENTLOOP_INTEGRATION_H
 #define __DBUSXX_EVENTLOOP_INTEGRATION_H
 
-#include <errno.h>
 #include "api.h"
 #include "dispatcher.h"
 #include "util.h"
@@ -66,10 +65,8 @@
 	BusDispatcher() : _running(false)
 	{
 		//pipe to create a new fd used to unlock a dispatcher at any
-    // moment (used by leave function)
-		int ret = pipe(_pipe);
-		if (ret == -1) throw Error("PipeError:errno", toString(errno).c_str());
-    
+       // moment (used by leave function)
+		pipe(_pipe);
 		_fdunlock[0] = _pipe[0];
 		_fdunlock[1] = _pipe[1];
 		
--- src/eventloop-integration.cpp.orig	2009-12-01 21:15:53.000000000 -0200
+++ src/eventloop-integration.cpp	2009-11-29 14:38:42.000000000 -0200
@@ -33,7 +33,6 @@
 #include <sys/poll.h>
 
 #include <dbus/dbus.h>
-#include <errno.h>
 
 using namespace DBus;
 
@@ -88,10 +87,7 @@
 void BusDispatcher::leave()
 {
 	_running = false;
-  
-	int ret = write(_fdunlock[1],"exit",strlen("exit"));
-	if (ret == -1) throw Error("WriteError:errno", toString(errno).c_str());
-  
+	write(_fdunlock[1],"exit",strlen("exit"));
 	close(_fdunlock[1]);
 	close(_fdunlock[0]);
 }
