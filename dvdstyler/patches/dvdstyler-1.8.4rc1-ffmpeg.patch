diff -up src/mediaenc_ffmpeg.cpp.ffmpeg src/mediaenc_ffmpeg.cpp
--- src/mediaenc_ffmpeg.cpp.ffmpeg	2011-05-20 19:01:30.322018446 -0300
+++ src/mediaenc_ffmpeg.cpp	2011-05-20 19:01:57.269289734 -0300
@@ -339,7 +339,7 @@ bool wxFfmpegMediaEncoder::writeAudioFra
     AVCodecContext* c = m_audioStm->codec;
     pkt.size= avcodec_encode_audio(c, m_audioOutbuf, AUDIO_BUF_SIZE, m_samples);
     pkt.pts= av_rescale_q(c->coded_frame->pts, c->time_base, m_audioStm->time_base);
-    pkt.flags |= PKT_FLAG_KEY;
+    pkt.flags |= AV_PKT_FLAG_KEY;
     pkt.stream_index= m_audioStm->index;
     pkt.data= m_audioOutbuf;
 
@@ -365,7 +365,7 @@ bool wxFfmpegMediaEncoder::writeVideoFra
 
         pkt.pts= av_rescale_q(c->coded_frame->pts, c->time_base, m_videoStm->time_base);
         if(c->coded_frame->key_frame)
-            pkt.flags |= PKT_FLAG_KEY;
+            pkt.flags |= AV_PKT_FLAG_KEY;
         pkt.stream_index = m_videoStm->index;
         pkt.data = m_videoOutbuf;
         pkt.size = out_size;
diff -up src/mediatrc_ffmpeg.cpp.ffmpeg src/mediatrc_ffmpeg.cpp
--- src/mediatrc_ffmpeg.cpp.ffmpeg	2011-05-20 19:02:17.783929211 -0300
+++ src/mediatrc_ffmpeg.cpp	2011-05-20 20:05:58.228485783 -0300
@@ -224,8 +224,7 @@ typedef struct AVInputFile {
 
 //#include <libavfilter/vsrc_buffer.h>
 extern "C" {
-	int av_vsrc_buffer_add_frame2(AVFilterContext *buffer_filter, AVFrame *frame, int64_t pts,
-			AVRational pixel_aspect, int width, int height, enum PixelFormat pix_fmt, const char *sws_param);
+	int av_vsrc_buffer_add_frame2(AVFilterContext *buffer_filter, AVFrame *frame, const char *sws_param);
 }
 
 //#include "cmdutils.h"
@@ -750,7 +749,7 @@ bool wxFfmpegMediaTranscoder::SetOutputF
 	/* check filename in case of an image number is expected */
 	if (oc->oformat->flags & AVFMT_NEEDNUMBER) {
 		if (!av_filename_number_test(oc->filename)) {
-			PrintError(fileName, AVERROR_NUMEXPECTED);
+			PrintError(fileName, AVERROR(EDOM));
 			return false;
 		}
 	}
@@ -784,7 +783,7 @@ bool wxFfmpegMediaTranscoder::SetOutputF
 
 void wxFfmpegMediaTranscoder::PrintError(const wxString& msg, int err) {
 	switch (err) {
-	case AVERROR_NUMEXPECTED:
+	case AVERROR(EDOM):
 		wxLogError(wxT("%s: Incorrect image filename syntax.\n"
 				"Use '%%d' to specify the image number:\n"
 				"  for img1.jpg, img2.jpg, ..., use 'img%%d.jpg';\n"
@@ -793,7 +792,7 @@ void wxFfmpegMediaTranscoder::PrintError
 	case AVERROR_INVALIDDATA:
 		wxLogError(wxT("%s: Error while parsing header"), msg.c_str());
 		break;
-	case AVERROR_NOFMT:
+	case AVERROR(EILSEQ):
 		wxLogError(wxT("%s: Unknown format"), msg.c_str());
 		break;
 	case AVERROR(EIO):
@@ -821,7 +820,7 @@ void choose_pixel_fmt(AVStream *st, AVCo
 		}
 		if(*p == -1
 		   && !(   st->codec->codec_id==CODEC_ID_MJPEG
-				&& st->codec->strict_std_compliance <= FF_COMPLIANCE_INOFFICIAL
+				&& st->codec->strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL
 				&& (   st->codec->pix_fmt == PIX_FMT_YUV420P
 					|| st->codec->pix_fmt == PIX_FMT_YUV422P)))
 			st->codec->pix_fmt = codec->pix_fmts[0];
@@ -2171,9 +2170,7 @@ bool wxFfmpegMediaTranscoder::OutputPack
                     else                                  sar = ist->st->codec->sample_aspect_ratio;
                     // add it to be filtered
                     av_vsrc_buffer_add_frame2(ost->input_video_filter, &picture,
-                                             ist->pts,
-                                             sar, ist->st->codec->width, ist->st->codec->height,
-                                             ist->st->codec->pix_fmt, "0:0");
+                                             "0:0");
                 }
             }
         }
@@ -2231,8 +2228,6 @@ bool wxFfmpegMediaTranscoder::OutputPack
 								return false;
 							break;
 						case AVMEDIA_TYPE_VIDEO:
-                            if (ost->picref->video)
-                                ost->st->codec->sample_aspect_ratio = ost->picref->video->pixel_aspect;
 							if (!DoVideoOut(os, ost, ist, &picture, &frame_size, bit_buffer_size, bit_buffer))
 								return false;
 //							if (vstats_filename && frame_size)
@@ -2619,7 +2614,7 @@ need_realloc:
 			pkt.size= ret;
 			if(enc->coded_frame && enc->coded_frame->pts != (int64_t) AV_NOPTS_VALUE)
 				pkt.pts= av_rescale_q(enc->coded_frame->pts, enc->time_base, ost->st->time_base);
-			pkt.flags |= PKT_FLAG_KEY;
+			pkt.flags |= AV_PKT_FLAG_KEY;
 			if (!WriteFrame(s, &pkt, ost->st->codec, ost->bitstream_filters))
 				return false;
 			
