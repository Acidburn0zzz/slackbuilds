#!/bin/sh
#-- cjkunifonts for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ cjkunifonts.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.freedesktop.org/wiki/Software/CJKUnifonts

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=cjkunifonts
PNAME1=ttf-arphic-uming
PNAME2=ttf-arphic-ukai
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-0.2.20080216.1}
if [ -x /usr/bin/gs ] ; then
  GSVER=${GSVER:-$(gs -v |head -n1 | awk '{print $3}')}
else
  GSVER=${GSVER:-8.63}
fi
ARCH=noarch
BUILD=${BUILD:-1}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/fonts/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Set GSDIR
if [ -d /usr/share/ghostscript/conf.d ] ;then
  SB_GSDIR=${SB_GSDIR=usr/share/ghostscript/conf.d}
else
  SB_GSDIR=${SB_GSDIR=usr/share/ghostscript/${GSVER}/Resource/CMap}
fi

DATE=$(LC_ALL=C date +%d-%b-%Y)

TTFDIR=usr/share/fonts/TTF/${NAME}

SRCDIR=${NAME}-${VERSION}
SRCDIR1=${PNAME1}-${VERSION}
SRCDIR2=${PNAME2}-${VERSION}
SRCARCHIVE1=${PNAME1}_${VERSION}.orig.tar.gz
SRCARCHIVE2=${PNAME2}_${VERSION}.orig.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL1="http://ftp.debian.org/debian/pool/main/t/ttf-arphic-uming/${SRCARCHIVE1}"
DL_URL2="http://ftp.debian.org/debian/pool/main/t/ttf-arphic-ukai/${SRCARCHIVE2}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE1}; then
  test -r ${CWD}/${SRCARCHIVE1} || wget ${DL_OPTS} ${DL_URL1} || exit 1
fi
if ! test -r ${SRCARCHIVE2}; then
  test -r ${CWD}/${SRCARCHIVE2} || wget ${DL_OPTS} ${DL_URL2} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/fonts

cd ${TMP}
rm -rf ${SRCDIR}
mkdir -p ${SRCDIR}/${SRCDIR1} ${SRCDIR}/${SRCDIR2}
tar -xzvf ${CWD}/${SRCARCHIVE1} -C ${SRCDIR}/${SRCDIR1} || exit 1
tar -xzvf ${CWD}/${SRCARCHIVE2} -C ${SRCDIR}/${SRCDIR2} || exit 1
cd ${SRCDIR} || exit 1

chmod -R u+w,go+r-w,a-s .

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1
( cd ${SRCDIR1} || exit 1
  zcat ${CWD}/${NAME}-0.2.20080216.1-2.patch.gz | patch -p1 -E --backup --verbose || exit 1
) || exit 1

mkdir -p ${PKG}/${TTFDIR}

# ttfs
install -m 0644 */*.ttc ${PKG}/${TTFDIR}/ || exit 1

ln -sf uming.ttc ${PKG}/${TTFDIR}/zysong.ttc || exit 1
ln -sf uming.ttc ${PKG}/${TTFDIR}/bsmi00lp.ttc || exit 1

# fontconfig config files
mkdir -p ${PKG}/etc/fonts/conf.{d,avail}
for conf in $(ls ${SRCDIR1}/*-ttf-arphic-uming*.conf)
do
  install -m 0644 ${conf} ${PKG}/etc/fonts/conf.avail/ || exit 1
  if [ ${conf} != ${SRCDIR1}/25-ttf-arphic-uming-bitmaps.conf ]
  then
    ( cd ${PKG}/etc/fonts/conf.avail/
      ln -s ../conf.avail/$(basename ${conf}) ${PKG}/etc/fonts/conf.d/
    ) || exit 1
  fi
done
for conf in  $(ls ${SRCDIR2}/*-ttf-arphic-ukai*.conf)
do
  install -m 0644 ${conf} ${PKG}/etc/fonts/conf.avail/ || exit 1
   ( cd ${PKG}/etc/fonts/conf.avail/
     ln -s ../conf.avail/$(basename ${conf}) ${PKG}/etc/fonts/conf.d/ || exit 1
   ) || exit 1
done

mkdir -p ${PKG}/${SB_GSDIR}
zcat ${CWD}/CIDFnmap.zh_CN.gz > ${PKG}/${SB_GSDIR}/CIDFnmap.zh_CN || exit 1
zcat ${CWD}/CIDFnmap.zh_TW.gz > ${PKG}/${SB_GSDIR}/CIDFnmap.zh_TW || exit 1
zcat ${CWD}/FAPIcidfmap.zh_CN.gz > ${PKG}/${SB_GSDIR}/FAPIcidfmap.zh_CN || exit 1
zcat ${CWD}/FAPIcidfmap.zh_TW.gz > ${PKG}/${SB_GSDIR}/FAPIcidfmap.zh_TW || exit 1
zcat ${CWD}/cidfmap.zh_CN.gz > ${PKG}/${SB_GSDIR}/cidfmap.zh_CN || exit 1
zcat ${CWD}/cidfmap.zh_TW.gz > ${PKG}/${SB_GSDIR}/cidfmap.zh_TW || exit 1

touch ${PKG}/${TTFDIR}/fonts.cache-1
touch ${PKG}/${TTFDIR}/fonts.scale
touch ${PKG}/${TTFDIR}/fonts.dir

# Add a documentation directory:
mkdir -p ${DOCDIR}/${PNAME1} ${DOCDIR}/${PNAME2}
cp -a \
  ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
for dir in ${PNAME1} ${PNAME2} ; do
  cp -a \
    ${dir}*/{license,CONTRIBUTERS,FONTLOG,KNOWN_ISSUES,NEWS,README,TODO} \
    ${DOCDIR}/${dir}/
done
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
#!/bin/sh
# Update the X font indexes:
if [ -x /usr/bin/mkfontdir -o -x /usr/X11R6/bin/mkfontdir ]; then
  ( cd ${TTFDIR}
    mkfontscale .
    mkfontdir .
  )
fi
if [ -x /usr/bin/fc-cache ]; then
  /usr/bin/fc-cache -f
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 zcat ${CWD}/${NAME}-*.patch.gz ${CWD}/*map.*.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
