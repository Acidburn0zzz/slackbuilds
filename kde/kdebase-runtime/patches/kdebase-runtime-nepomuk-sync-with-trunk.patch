diff -Naur kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.FileWatch.xml kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.FileWatch.xml
--- kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.FileWatch.xml	1970-01-01 01:00:00.000000000 +0100
+++ kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.FileWatch.xml	2010-03-29 10:35:15.000000000 +0200
@@ -0,0 +1,9 @@
+<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
+          "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
+<node>
+  <interface name="org.kde.nepomuk.FileWatch">
+    <method name="watchFolder">
+      <arg name="path" type="s" direction="in"/>
+    </method>
+  </interface>
+</node>
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.RemovableStorage.xml kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.RemovableStorage.xml
--- kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.RemovableStorage.xml	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.RemovableStorage.xml	2010-03-29 10:35:15.000000000 +0200
@@ -6,5 +6,8 @@
       <arg type="s" direction="out"/>
       <arg name="url" type="s" direction="in"/>
     </method>
+    <method name="currentlyMountedAndIndexed">
+      <arg type="as" direction="out"/>
+    </method>
   </interface>
 </node>
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.Strigi.xml kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.Strigi.xml
--- kdebase-runtime-4.4.2-old//nepomuk/interfaces/org.kde.nepomuk.Strigi.xml	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/interfaces/org.kde.nepomuk.Strigi.xml	2010-03-29 10:35:15.000000000 +0200
@@ -11,6 +11,9 @@
     <method name="currentFolder">
       <arg type="s" direction="out" />
     </method>
+    <method name="currentFile">
+      <arg type="s" direction="out" />
+    </method>
     <method name="suspend" />
     <method name="resume" />
     <method name="updateFolder">
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kcm/kcm_nepomuk.desktop kdebase-runtime-4.4.2//nepomuk/kcm/kcm_nepomuk.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/kcm/kcm_nepomuk.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kcm/kcm_nepomuk.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -77,7 +77,7 @@
 Name[ta]=மேல்மேசை தேடல்
 Name[te]=డెస్‍క్ టాప్ శోధన
 Name[tg]=Ҷустуҷӯи мизи корӣ
-Name[th]=การค้นหาบนพื้นที่ทำงาน
+Name[th]=ค้นหาผ่านพื้นที่ทำงาน
 Name[tr]=Masaüstü Araması
 Name[uk]=Стільничний пошук
 Name[wa]=Cweraedje sol sicribanne
@@ -153,7 +153,7 @@
 Comment[ta]=Nepomuk/Strigi Server Configuration
 Comment[te]=Nepomuk/Strigi సేవిక ఆకృతీకరణ
 Comment[tg]=Танзимоти хидматгоҳи Nepomuk/Strigi
-Comment[th]=ปรับแต่งเซิร์ฟเวอร์ Nepomuk/Strigi
+Comment[th]=ปรับแต่งบริการ Nepomuk/Strigi
 Comment[tr]=Nepomuk/Strigi Sunucu Yapılandırması
 Comment[uk]=Налаштування сервера Nepomuk/Strigi
 Comment[uz]=Nepomuk/Strigi serverini moslash
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kcm/nepomukconfigwidget.ui kdebase-runtime-4.4.2//nepomuk/kcm/nepomukconfigwidget.ui
--- kdebase-runtime-4.4.2-old//nepomuk/kcm/nepomukconfigwidget.ui	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kcm/nepomukconfigwidget.ui	2010-03-29 10:35:15.000000000 +0200
@@ -158,7 +158,7 @@
              <string>Index the files on removable media like USB sticks when they are mounted</string>
             </property>
             <property name="text">
-             <string>Index Files on Removable Media</string>
+             <string>Index files on removable media</string>
             </property>
            </widget>
           </item>
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kioslaves/nepomuk/kio_nepomuk.cpp kdebase-runtime-4.4.2//nepomuk/kioslaves/nepomuk/kio_nepomuk.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/kioslaves/nepomuk/kio_nepomuk.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kioslaves/nepomuk/kio_nepomuk.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -402,8 +402,24 @@
     //
     KIO::UDSEntry uds;
 
+    // we handle files on removable media which are not mounted
+    // as a special case
+    bool isFileOnRemovableMedium = isRemovableMediaFile( res );
+
     // The display name can be anything
-    uds.insert( KIO::UDSEntry::UDS_DISPLAY_NAME, res.genericLabel() );
+    QString displayName;
+    if ( isFileOnRemovableMedium ) {
+        displayName = i18nc( "%1 is a filename of a file on a removable device, "
+                             "%2 is the name of the removable medium which often is something like "
+                             "'X GiB Removable Media.",
+                             "%1 (on unmounted medium <resource>%2</resource>)",
+                             res.genericLabel(),
+                             getFileSystemLabelForRemovableMediaFileUrl( res ) );
+    }
+    else {
+        displayName = res.genericLabel();
+    }
+    uds.insert( KIO::UDSEntry::UDS_DISPLAY_NAME, displayName );
 
     // UDS_NAME needs to be unique but can be ugly
     uds.insert( KIO::UDSEntry::UDS_NAME, resourceUriToUdsName( res.resourceUri() ) );
@@ -418,7 +434,7 @@
         uds.insert( KIO::UDSEntry::UDS_MIME_TYPE, mimeTypes.first() );
     }
     else */
-    if ( isRemovableMediaFile( res ) ) {
+    if ( isFileOnRemovableMedium ) {
         KMimeType::Ptr mt = KMimeType::findByUrl( res.property( Vocabulary::NIE::url() ).toUrl(),
                                                   0,
                                                   false, /* no local file as it is not accessible at the moment */
@@ -565,7 +581,7 @@
     }
     else if ( isRemovableMediaFile( res ) ) {
         const KUrl removableMediaUrl = res.property( Nepomuk::Vocabulary::NIE::url() ).toUrl();
-        newURL = convertRemovableMediaFileUrl( res.property( Nepomuk::Vocabulary::NIE::url() ).toUrl(), m_currentOperation == Get );
+        newURL = convertRemovableMediaFileUrl( removableMediaUrl, m_currentOperation == Get );
         if ( !newURL.isValid() && m_currentOperation == Get ) {
             // error handling in get()
             return true;
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.cpp kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -30,7 +30,7 @@
 namespace {
     inline bool isNepomukSearchUrl( const KUrl& url )
     {
-        static const char* s_nepProName = "nepomuksearch";
+        static const char s_nepProName[] = "nepomuksearch";
         return url.protocol() == QLatin1String( s_nepProName );
     }
 }
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.desktop kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kdedmodule/nepomuksearchmodule.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -19,13 +19,10 @@
 Name[hi]=नेपोमक खोज मोड्यूल
 Name[hr]=Nepomukov modul za pretraživanje
 Name[id]=Modul Pencarian Nepomuk
-Name[is]=Nepomuk leitareining
 Name[it]=Modulo di ricerca di Nepomuk
 Name[ja]=Nepomuk 検索モジュール
 Name[kk]=Nepomuk іздеу модулі
 Name[km]=ម៉ូឌុល​ស្វែងរក​របស់ Nepomuk
-Name[lt]=Nepomuk paieškos modulis
-Name[lv]=Nepomuk meklēšanas modulis
 Name[mk]=Модул на Непомук за пребарување
 Name[nb]=Nepomuk søkemodul
 Name[nds]=Nepomuk-Söökmoduul
@@ -43,6 +40,7 @@
 Name[sr@latin]=Pretraživački modul Nepomuka
 Name[sv]=Nepomuk-sökmodul
 Name[tg]=Хидматҳои Nepomuk
+Name[th]=มอดูลค้นหาของบริการ Neomuk
 Name[uk]=Модуль пошуку Nepomuk
 Name[x-test]=xxNepomuk Search Modulexx
 Name[zh_CN]=Nepomuk 搜索模块
@@ -78,6 +76,7 @@
 Comment[sr@ijekavianlatin]=Pomoćni modul za K‑U/I koji obezbeđuje automatsko ažuriranje spiskova Nepomukove pretrage.
 Comment[sr@latin]=Pomoćni modul za K‑U/I koji obezbeđuje automatsko ažuriranje spiskova Nepomukove pretrage.
 Comment[sv]=Hjälpmodul för I/O-slavar för att försäkra att automatisk uppdatering görs av Nepomuk söklistningar.
+Comment[th]=มอดูลช่วยสำหรับ KIO เพื่อให้แน่ใจว่าจะมีการปรับปรุงการทำรายการของ nepomuksearch
 Comment[uk]=Допоміжний модуль KIO для забезпечення автоматичного оновлення списків nepomuksearch.
 Comment[x-test]=xxHelper module for KIO to ensure automatic updates of nepomuksearch listings.xx
 Comment[zh_CN]=KIO 用于自动更新 Nepomuk 搜索列表的助手模块。
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kio_nepomuksearch.cpp kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kio_nepomuksearch.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/kioslaves/search/kio_nepomuksearch.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/kioslaves/search/kio_nepomuksearch.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -69,7 +69,6 @@
      * Empty if the path only contains the query.
      */
     QString fileNameFromUrl( const KUrl& url ) {
-        QString fn;
         if ( url.hasQueryItem( QLatin1String( "sparql" ) ) ||
              url.hasQueryItem( QLatin1String( "query" ) ) ||
              url.directory() != QLatin1String( "/" ) ) {
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/server/nepomukserver.cpp kdebase-runtime-4.4.2//nepomuk/server/nepomukserver.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/server/nepomukserver.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/server/nepomukserver.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -94,8 +94,6 @@
 
             // now nepomuk is enabled
             m_enabled = true;
-            KConfig cnf( "kdeglobals" );
-            cnf.group( "KFileDialog Settings" ).writeEntry( "file module", "smartfilemodule" );
         }
         else {
             // stop all running services
@@ -110,10 +108,6 @@
 
             // nepomuk is disabled
             m_enabled = false;
-            
-            
-            KConfig cnf( "kdeglobals" );
-            cnf.group( "KFileDialog Settings" ).writeEntry( "file module", "kfilemodule" );
         }
     }
 }
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/server/nepomukserver.desktop kdebase-runtime-4.4.2//nepomuk/server/nepomukserver.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/server/nepomukserver.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/server/nepomukserver.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -73,7 +73,7 @@
 Name[ta]=Nepomuk Server
 Name[te]=Nepomuk సేవిక
 Name[tg]=Хидматгоҳи Nepomuk
-Name[th]=เซิร์ฟเวอร์ Nepomuk
+Name[th]=บริการ Nepomuk
 Name[tr]=Nepomuk Sunucu
 Name[uk]=Сервер Nepomuk
 Name[uz]=Nepomuk serveri
@@ -114,7 +114,7 @@
 Comment[is]=Nepomuk miðlarinn heldur utanum geymsluþjónustur og Strigi stýringu
 Comment[it]=Il server Nepomuk fornisce servizi di memorizzazione e controllo di Strigi
 Comment[ja]=ストレージサービスを提供し Strigi を制御する Nepomuk サーバ
-Comment[kk]=Сақтау қызметі және strigi бақлауын атқаратын Nepomuk сервері
+Comment[kk]=Сақтау қызметі және strigi бақылауын атқаратын Nepomuk сервері
 Comment[km]=ម៉ាស៊ីន​បម្រើ Nepomuk ផ្ដល់​សេវា​ផ្ទុក និង​ការត្រួតពិនិត្យ strigi
 Comment[kn]=ಸ್ಟ್ರಿಗಿ ನಿಯಂತ್ರಣ ಮತ್ತು ಸಂಗ್ರಹ ಸೇವೆಗಳನ್ನು ಒದಗಿಸುವ ನೆಪೋಮುಕ್ ಪರಿಚಾರಕ (ಸರ್ವರ್)
 Comment[ko]=저장소 서비스를 제공하는 Nepomuk 서버와 Strigi 제어
@@ -147,7 +147,7 @@
 Comment[ta]=The Nepomuk Server providing Storage services and strigi controlling
 Comment[te]=Nepomuk సేవిక నిల్వ సేవలను మరియు strigi నింయత్రణను అందిస్తుంది
 Comment[tg]=Сервер Nepomuk предоставляет службы хранения данных и управление Strigi
-Comment[th]=เซิร์ฟเวอร์ Nepomuk จะให้บริการจัดเก็บและการควบคุม strigi
+Comment[th]=บริการ Nepomuk จะให้บริการจัดเก็บข้อมูลและทำการควบคุม strigi
 Comment[tr]=Nepomuk Sunucusu Depolama servislerini ve Strigi uygulamasının kontrolünü sağlar
 Comment[uk]=Сервер Nepomuk надає служби збереження і керування strigi
 Comment[wa]=Li sierveu Nepomuk ki dene des siervices di wårdaedje et des contrôles po strigi
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/CMakeLists.txt kdebase-runtime-4.4.2//nepomuk/services/filewatch/CMakeLists.txt
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/CMakeLists.txt	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/CMakeLists.txt	2010-03-29 10:35:15.000000000 +0200
@@ -16,8 +16,19 @@
   nepomukfilewatch.cpp
   metadatamover.cpp
   updaterequest.cpp
+  ../strigi/priority.cpp
   )
 
+qt4_add_dbus_interface(SRCS ../../interfaces/org.kde.nepomuk.Strigi.xml strigiserviceinterface)
+
+if(CMAKE_SYSTEM_NAME MATCHES "Linux")
+  set(SRCS
+    ${SRCS}
+    kinotify.cpp
+)
+add_definitions(-DBUILD_KINOTIFY)
+endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
+
 soprano_add_ontology(SRCS
   ${SHAREDDESKTOPONTOLOGIES_ROOT_DIR}/nie/nie.trig
   "NIE"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/kinotify.cpp kdebase-runtime-4.4.2//nepomuk/services/filewatch/kinotify.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/kinotify.cpp	1970-01-01 01:00:00.000000000 +0100
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/kinotify.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -0,0 +1,392 @@
+/* This file is part of the KDE libraries
+   Copyright (C) 2007-2010 Sebastian Trueg <trueg@kde.org>
+
+   This library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Library General Public
+   License as published by the Free Software Foundation; either
+   version 2 of the License, or (at your option) any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public License
+   along with this library; see the file COPYING.LIB.  If not, write to
+   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.
+*/
+
+#include "kinotify.h"
+
+#include <QtCore/QSocketNotifier>
+#include <QtCore/QHash>
+#include <QtCore/QDirIterator>
+#include <QtCore/QFile>
+#include <QtCore/QQueue>
+
+#include <kdebug.h>
+
+#include <sys/inotify.h>
+#include <sys/utsname.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+#include <dirent.h>
+
+
+namespace {
+    const int EVENT_STRUCT_SIZE = sizeof( struct inotify_event );
+
+    // we need one event to fit into the buffer, the problem is that the name
+    // is a variable length array
+    const int EVENT_BUFFER_SIZE = EVENT_STRUCT_SIZE + 1024*16;
+
+    QByteArray normalizePath( const QByteArray& path ) {
+        QByteArray p( path );
+        if ( p.endsWith( '/' ) )
+            p.truncate( p.length()-1 );
+        return p;
+    }
+}
+
+class KInotify::Private
+{
+public:
+    Private( KInotify* parent )
+        : m_inotifyFd( -1 ),
+          m_notifier( 0 ),
+          q( parent) {
+    }
+
+    ~Private() {
+        close();
+    }
+
+    QHash<int, QString> cookies;
+    QHash<int, QByteArray> pathHash;
+
+    /// queue of paths to install watches for
+    QQueue<QByteArray> pathsToWatch;
+
+    unsigned char eventBuffer[EVENT_BUFFER_SIZE];
+
+    // FIXME: only stored from the last addWatch call
+    WatchEvents mode;
+    WatchFlags flags;
+
+    int inotify() {
+        if ( m_inotifyFd < 0 ) {
+            open();
+        }
+        return m_inotifyFd;
+    }
+
+    void close() {
+        kDebug();
+        delete m_notifier;
+        m_notifier = 0;
+
+        ::close( m_inotifyFd );
+        m_inotifyFd = -1;
+    }
+
+    bool addWatch( const QByteArray& path ) {
+        // we always need the unmount event to maintain our path hash
+        const int mask = mode|flags|EventUnmount;
+
+        int wd = inotify_add_watch( inotify(), path.data(), mask );
+        if ( wd > 0 ) {
+//            kDebug() << "Successfully added watch for" << path << pathHash.count();
+            pathHash.insert( wd, normalizePath( path ) );
+            return true;
+        }
+        else {
+            kDebug() << "Failed to create watch for" << path;
+            static bool userLimitReachedSignaled = false;
+            if ( !userLimitReachedSignaled && errno == ENOSPC ) {
+                kDebug() << "User limit reached. Please raise the inotify user watch limit.";
+                userLimitReachedSignaled = true;
+                emit q->watchUserLimitReached();
+            }
+            return false;
+        }
+    }
+
+    bool addWatchesRecursively( const QByteArray& path )
+    {
+        if ( !addWatch( path ) )
+            return false;
+
+        int len = offsetof(struct dirent, d_name) +
+                  pathconf(path.data(), _PC_NAME_MAX) + 1;
+        struct dirent* entry = ( struct dirent* )new char[len];
+
+        DIR* dir = opendir( path.data() );
+        if ( dir ) {
+            struct dirent *result = 0;
+            while ( !readdir_r( dir, entry, &result ) ) {
+
+                if ( !result ) {
+                    // end of folder
+                    break;
+                }
+
+                if ( ( entry->d_type == DT_UNKNOWN ||
+                       entry->d_type == DT_DIR ) &&
+                     qstrcmp( entry->d_name, "." ) &&
+                     qstrcmp( entry->d_name, ".." ) ) {
+                    bool isDir = true;
+                    QByteArray subDir = path + '/' + QByteArray::fromRawData( entry->d_name, qstrlen( entry->d_name ) );
+                    if ( entry->d_type == DT_UNKNOWN ) {
+                        struct stat buf;
+                        lstat( subDir.data(), &buf );
+                        isDir = S_ISDIR( buf.st_mode );
+                    }
+
+                    if ( isDir ) {
+                        pathsToWatch.enqueue( subDir );
+                    }
+                }
+            }
+
+            closedir( dir );
+            delete [] entry;
+
+            return true;
+        }
+        else {
+            kDebug() << "Could not open dir" << path;
+            return false;
+        }
+    }
+
+    void removeWatch( int wd ) {
+        pathHash.remove( wd );
+        inotify_rm_watch( inotify(), wd );
+    }
+
+    void _k_addWatches() {
+        // add the next batch of paths
+        for ( int i = 0; i < 100; ++i ) {
+            if ( pathsToWatch.isEmpty() ||
+                 !addWatchesRecursively( pathsToWatch.dequeue() ) ) {
+                return;
+            }
+        }
+
+        // asyncroneously add the next batch
+        if ( !pathsToWatch.isEmpty() ) {
+            QMetaObject::invokeMethod( q, "_k_addWatches", Qt::QueuedConnection );
+        }
+    }
+
+private:
+    void open() {
+        kDebug();
+        m_inotifyFd = inotify_init();
+        delete m_notifier;
+        if ( m_inotifyFd > 0 ) {
+            fcntl( m_inotifyFd, F_SETFD, FD_CLOEXEC );
+            kDebug() << "Successfully opened connection to inotify:" << m_inotifyFd;
+            m_notifier = new QSocketNotifier( m_inotifyFd, QSocketNotifier::Read );
+            connect( m_notifier, SIGNAL( activated( int ) ), q, SLOT( slotEvent( int ) ) );
+        }
+    }
+
+    int m_inotifyFd;
+    QSocketNotifier* m_notifier;
+
+    KInotify* q;
+};
+
+
+KInotify::KInotify( QObject* parent )
+    : QObject( parent ),
+      d( new Private( this ) )
+{
+}
+
+
+KInotify::~KInotify()
+{
+    delete d;
+}
+
+
+bool KInotify::available() const
+{
+    if( d->inotify() > 0 ) {
+        // trueg: Copied from KDirWatch.
+        struct utsname uts;
+        int major, minor, patch;
+        if ( uname(&uts) < 0 ) {
+            return false; // *shrug*
+        }
+        else if ( sscanf( uts.release, "%d.%d.%d", &major, &minor, &patch) != 3 ) {
+            return false; // *shrug*
+        }
+        else if( major * 1000000 + minor * 1000 + patch < 2006014 ) { // <2.6.14
+            kDebug(7001) << "Can't use INotify, Linux kernel too old";
+            return false;
+        }
+
+        return true;
+    }
+    else {
+        return false;
+    }
+}
+
+
+bool KInotify::watchingPath( const QString& path ) const
+{
+    QByteArray p( normalizePath( QFile::encodeName( path ) ) );
+    QHash<int, QByteArray>::const_iterator end = d->pathHash.constEnd();
+    for ( QHash<int, QByteArray>::const_iterator it = d->pathHash.constBegin();
+          it != end; ++it ) {
+        if ( it.value() == p )
+            return true;
+    }
+    return false;
+}
+
+
+bool KInotify::addWatch( const QString& path, WatchEvents mode, WatchFlags flags )
+{
+    kDebug() << path;
+
+    d->mode = mode;
+    d->flags = flags;
+    d->pathsToWatch.append( QFile::encodeName( path ) );
+    d->_k_addWatches();
+    return true;
+}
+
+
+// TODO: do this more efficiently
+bool KInotify::removeWatch( const QString& path )
+{
+    QByteArray encodedPath = QFile::encodeName( path );
+    QHash<int, QByteArray>::iterator it = d->pathHash.begin();
+    while ( it != d->pathHash.end() ) {
+        if ( it.value().startsWith( encodedPath ) ) {
+            inotify_rm_watch( d->inotify(), it.key() );
+            it = d->pathHash.erase( it );
+        }
+        else {
+            ++it;
+        }
+    }
+    return true;
+}
+
+
+void KInotify::slotEvent( int socket )
+{
+    // read at least one event
+    int len = read( socket, d->eventBuffer, EVENT_BUFFER_SIZE );
+    int i = 0;
+    while ( i < len && len-i >= EVENT_STRUCT_SIZE  ) {
+        struct inotify_event* event = ( struct inotify_event* )&d->eventBuffer[i];
+
+        QByteArray encodedPath = QByteArray::fromRawData( event->name, event->len );
+
+        kDebug() << encodedPath;
+
+        if ( encodedPath[0] != '/' ) {
+            encodedPath = d->pathHash.value( event->wd ) + '/' + encodedPath;
+        }
+
+        QString path = QFile::decodeName( encodedPath );
+
+        kDebug() << path;
+
+
+        // now signal the event
+        if ( event->mask & EventAccess) {
+            kDebug() << path << "EventAccess";
+            emit accessed( path );
+        }
+        if ( event->mask & EventAttributeChange ) {
+            kDebug() << path << "EventAttributeChange";
+            emit attributeChanged( path );
+        }
+        if ( event->mask & EventCloseWrite ) {
+            kDebug() << path << "EventCloseWrite";
+            emit closedWrite( path );
+        }
+        if ( event->mask & EventCloseRead ) {
+            kDebug() << path << "EventCloseRead";
+            emit closedRead( path );
+        }
+        if ( event->mask & EventCreate ) {
+            kDebug() << path << "EventCreate";
+            if ( event->mask & IN_ISDIR ) {
+                // FIXME: store the mode and flags somewhere
+                addWatch( encodedPath, d->mode, d->flags );
+            }
+            emit created( path );
+        }
+        if ( event->mask & EventDelete ) {
+            kDebug() << path << "EventDelete";
+            d->removeWatch( event->wd );
+            emit deleted( path );
+        }
+        if ( event->mask & EventDeleteSelf ) {
+            kDebug() << path << "EventDeleteSelf";
+            d->removeWatch( event->wd );
+            emit deleted( path );
+        }
+        if ( event->mask & EventModify ) {
+            kDebug() << path << "EventModify";
+            emit modified( path );
+        }
+        if ( event->mask & EventMoveSelf ) {
+            kDebug() << path << "EventMoveSelf";
+        }
+        if ( event->mask & EventMoveFrom ) {
+            kDebug() << path << "EventMoveFrom";
+            d->cookies[event->cookie] = path;
+        }
+        if ( event->mask & EventMoveTo ) {
+            // check if we have a cookie for this one
+            if ( d->cookies.contains( event->cookie ) ) {
+                QString oldPath = d->cookies[event->cookie];
+                d->cookies.remove( event->cookie );
+                kDebug() << oldPath << "EventMoveTo" << path;
+                emit moved( oldPath, path );
+            }
+            else {
+                kDebug() << "No cookie for move information of" << path;
+            }
+        }
+        if ( event->mask & EventOpen ) {
+            kDebug() << path << "EventOpen";
+            emit opened( path );
+        }
+        if ( event->mask & EventUnmount ) {
+            kDebug() << path << "EventUnmount. removing from path hash";
+            d->removeWatch( event->wd );
+            emit unmounted( path );
+        }
+        if ( event->mask & EventQueueOverflow ) {
+            // This should not happen since we grab all events as soon as they arrive
+            kDebug() << path << "EventQueueOverflow";
+//            emit queueOverflow();
+        }
+        if ( event->mask & EventIgnored ) {
+            kDebug() << path << "EventIgnored";
+        }
+
+        i += EVENT_STRUCT_SIZE + event->len;
+    }
+
+    if ( len < 0 ) {
+        kDebug() << "Failed to read event.";
+    }
+}
+
+#include "kinotify.moc"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/kinotify.h kdebase-runtime-4.4.2//nepomuk/services/filewatch/kinotify.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/kinotify.h	1970-01-01 01:00:00.000000000 +0100
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/kinotify.h	2010-03-29 10:35:15.000000000 +0200
@@ -0,0 +1,176 @@
+/* This file is part of the KDE libraries
+   Copyright (C) 2007-2010 Sebastian Trueg <trueg@kde.org>
+
+   This library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Library General Public
+   License as published by the Free Software Foundation; either
+   version 2 of the License, or (at your option) any later version.
+
+   This library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public License
+   along with this library; see the file COPYING.LIB.  If not, write to
+   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.
+*/
+
+#ifndef _KINOTIFY_H_
+#define _KINOTIFY_H_
+
+#include <QtCore/QObject>
+#include <QtCore/QFlags>
+
+/**
+ * A simple wrapper around inotify which only allows
+ * to add folders recursively.
+ */
+class KInotify : public QObject
+{
+    Q_OBJECT
+
+public:
+    KInotify( QObject* parent );
+    ~KInotify();
+
+    /**
+     * Inotify events that can occur. Use with addWatch
+     * to define the events that should be watched.
+     *
+     * These flags correspond to the native Linux inotify flags.
+     */
+    enum WatchEvent {
+        EventAccess = 0x00000001, /**< File was accessed (read, compare inotify's IN_ACCESS) */
+        EventAttributeChange = 0x00000004, /**< Metadata changed (permissions, timestamps, extended attributes, etc., compare inotify's IN_ATTRIB) */
+        EventCloseWrite = 0x00000008, /**< File opened for writing was closed (compare inotify's IN_CLOSE_WRITE) */
+        EventCloseRead = 0x00000010, /**< File not opened for writing was closed (compare inotify's IN_CLOSE_NOWRITE) */
+        EventCreate = 0x00000100, /** File/directory created in watched directory (compare inotify's IN_CREATE) */
+        EventDelete = 0x00000200, /**< File/directory deleted from watched directory (compare inotify's IN_DELETE) */
+        EventDeleteSelf = 0x00000400, /**< Watched file/directory was itself deleted (compare inotify's IN_DELETE_SELF) */
+        EventModify = 0x00000002, /**< File was modified (compare inotify's IN_MODIFY) */
+        EventMoveSelf = 0x00000800, /**< Watched file/directory was itself moved (compare inotify's IN_MOVE_SELF) */
+        EventMoveFrom = 0x00000040, /**< File moved out of watched directory (compare inotify's IN_MOVED_FROM) */
+        EventMoveTo = 0x00000080, /**< File moved into watched directory (compare inotify's IN_MOVED_TO) */
+        EventOpen = 0x00000020, /**< File was opened (compare inotify's IN_OPEN) */
+        EventUnmount = 0x00002000, /**< Backing fs was unmounted (compare inotify's IN_UNMOUNT) */
+        EventQueueOverflow = 0x00004000, /**< Event queued overflowed (compare inotify's IN_Q_OVERFLOW) */
+        EventIgnored = 0x00008000, /**< File was ignored (compare inotify's IN_IGNORED) */
+        EventMove = ( EventMoveFrom|EventMoveTo),
+        EventAll = ( EventAccess|
+                     EventAttributeChange|
+                     EventCloseWrite|
+                     EventCloseRead|
+                     EventCreate|
+                     EventDelete|
+                     EventDeleteSelf|
+                     EventModify|
+                     EventMoveSelf|
+                     EventMoveFrom|
+                     EventMoveTo|
+                     EventOpen )
+    };
+    Q_DECLARE_FLAGS(WatchEvents, WatchEvent)
+
+    /**
+     * Watch flags
+     *
+     * These flags correspond to the native Linux inotify flags.
+     */
+    enum WatchFlag {
+        FlagOnlyDir = 0x01000000, /**< Only watch the path if it is a directory (IN_ONLYDIR) */
+        FlagDoNotFollow = 0x02000000, /**< Don't follow a sym link (IN_DONT_FOLLOW) */
+        FlagOneShot = 0x80000000 /**< Only send event once (IN_ONESHOT) */
+    };
+    Q_DECLARE_FLAGS(WatchFlags, WatchFlag)
+
+    /**
+     * \return \p true if inotify is available and usable.
+     */
+    bool available() const;
+
+    bool watchingPath( const QString& path ) const;
+
+public Q_SLOTS:
+    bool addWatch( const QString& path, WatchEvents modes, WatchFlags flags = WatchFlags() );
+    bool removeWatch( const QString& path );
+
+Q_SIGNALS:
+    /**
+     * Emitted if a file is accessed (KInotify::EventAccess)
+     */
+    void accessed( const QString& file );
+
+    /**
+     * Emitted if file attributes are changed (KInotify::EventAttributeChange)
+     */
+    void attributeChanged( const QString& file );
+
+    /**
+     * Emitted if FIXME (KInotify::EventCloseWrite)
+     */
+    void closedWrite( const QString& file );
+
+    /**
+     * Emitted if FIXME (KInotify::EventCloseRead)
+     */
+    void closedRead( const QString& file );
+
+    /**
+     * Emitted if a new file has been created in one of the watched
+     * folders (KInotify::EventCreate)
+     */
+    void created( const QString& file );
+
+    /**
+     * Emitted if a watched file or folder has been deleted.
+     * This includes files in watched foldes (KInotify::EventDelete and KInotify::EventDeleteSelf)
+     */
+    void deleted( const QString& file );
+
+    /**
+     * Emitted if a watched file is modified (KInotify::EventModify)
+     */
+    void modified( const QString& file );
+
+    /**
+     * Emitted if a file or folder has been moved or renamed.
+     *
+     * \warning The moved signal will only be emitted if both the source and target folder
+     * are being watched.
+     */
+    void moved( const QString& oldName, const QString& newName );
+
+    /**
+     * Emitted if a file is opened (KInotify::EventOpen)
+     */
+    void opened( const QString& file );
+
+    /**
+     * Emitted if a watched path has been unmounted (KInotify::EventUnmount)
+     */
+    void unmounted( const QString& file );
+
+    /**
+     * Emitted if during updating the internal watch structures (recursive watches)
+     * the inotify user watch limit was reached.
+     *
+     * This means that not all requested paths can be watched until the user watch
+     * limit is increased.
+     *
+     * This signal will only be emitted once.
+     */
+    void watchUserLimitReached();
+
+private Q_SLOTS:
+    void slotEvent( int );
+
+private:
+    class Private;
+    Private* const d;
+
+    Q_PRIVATE_SLOT( d, void _k_addWatches() )
+};
+
+#endif
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/metadatamover.cpp kdebase-runtime-4.4.2//nepomuk/services/filewatch/metadatamover.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/metadatamover.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/metadatamover.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -1,5 +1,5 @@
 /* This file is part of the KDE Project
-   Copyright (c) 2009 Sebastian Trueg <trueg@kde.org>
+   Copyright (c) 2009-2010 Sebastian Trueg <trueg@kde.org>
 
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
@@ -39,6 +39,7 @@
 #include <Nepomuk/Query/Query>
 #include <Nepomuk/Query/ComparisonTerm>
 #include <Nepomuk/Query/ResourceTerm>
+#include <Nepomuk/Query/LiteralTerm>
 
 #include <KDebug>
 
@@ -70,6 +71,7 @@
 
 void Nepomuk::MetadataMover::moveFileMetadata( const KUrl& from, const KUrl& to )
 {
+    kDebug() << from << to;
     m_queueMutex.lock();
     UpdateRequest req( from, to );
     if ( !m_updateQueue.contains( req ) &&
@@ -82,18 +84,13 @@
 
 void Nepomuk::MetadataMover::removeFileMetadata( const KUrl& file )
 {
-    m_queueMutex.lock();
-    UpdateRequest req( file );
-    if ( !m_updateQueue.contains( req ) &&
-         !m_recentlyFinishedRequests.contains( req ) )
-        m_updateQueue.enqueue( req );
-    m_queueMutex.unlock();
-    m_queueWaiter.wakeAll();
+    removeFileMetadata( KUrl::List() << file );
 }
 
 
 void Nepomuk::MetadataMover::removeFileMetadata( const KUrl::List& files )
 {
+    kDebug() << files;
     m_queueMutex.lock();
     foreach( const KUrl& file, files ) {
         UpdateRequest req( file );
@@ -189,7 +186,7 @@
 }
 
 
-void Nepomuk::MetadataMover::updateMetadata( const KUrl& from, const KUrl& to )
+void Nepomuk::MetadataMover::updateMetadata( const KUrl& from, const KUrl& to, bool includeChildren )
 {
     kDebug() << from << "->" << to;
 
@@ -226,19 +223,38 @@
         if ( newParent.exists() ) {
             newResource.setProperty( Nepomuk::Vocabulary::NIE::isPartOf(), newParent );
         }
+    }
 
+    if ( includeChildren && QFileInfo( to.toLocalFile() ).isDir() ) {
         //
         // Recursively update children
+        // We cannot use the nie:isPartOf relation since only children could have metadata. Thus, we do a regex
+        // match on all files and folders below the URL we got.
         //
-        Query::Query query( Query::ComparisonTerm( Nepomuk::Vocabulary::NIE::isPartOf(), Query::ResourceTerm( newResource ) ) );
-        query.addRequestProperty( Query::Query::RequestProperty( Nepomuk::Vocabulary::NIE::url() ) );
-        Soprano::QueryResultIterator it = m_model->executeQuery( query.toSparqlQuery(), Soprano::Query::QueryLanguageSparql );
+        QString query = QString::fromLatin1( "select distinct ?r ?url where { "
+                                             "?r %1 ?url . "
+                                             "FILTER(REGEX(STR(?url),'^%2')) . "
+                                             "}" )
+                        .arg( Soprano::Node::resourceToN3( Nepomuk::Vocabulary::NIE::url() ),
+                              from.url() );
+        kDebug() << query;
+        Soprano::QueryResultIterator it = m_model->executeQuery( query, Soprano::Query::QueryLanguageSparql );
         while ( it.next() ) {
-            QUrl uri = it[0].uri();
-            KUrl url = it[1].uri();
-            KUrl newUrl( to );
-            newUrl.addPath( url.fileName() );
-            updateMetadata( url, newUrl );
+
+            // the resource URI of the resource to update
+            const QUrl uri = it[0].uri();
+
+            // the old URL of the resource to update
+            const KUrl url = it[1].uri();
+
+            // now construct the new URL
+            const QString oldBasePath = from.path( KUrl::AddTrailingSlash );
+            const QString newBasePath = to.path( KUrl::AddTrailingSlash );
+            QString oldRelativePath = url.path().mid( oldBasePath.length() );
+            KUrl newUrl( newBasePath + oldRelativePath );
+
+            // finally update the metadata (excluding children since we already handle them all here)
+            updateMetadata( url, newUrl, false );
         }
     }
 }
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/metadatamover.h kdebase-runtime-4.4.2//nepomuk/services/filewatch/metadatamover.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/metadatamover.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/metadatamover.h	2010-03-29 10:35:15.000000000 +0200
@@ -68,7 +68,7 @@
          * If old pre-KDE 4.4 file:/ resource URIs are used these are
          * updated to the new nepomuk:/res/<UUID> scheme
          */
-        void updateMetadata( const KUrl& from, const KUrl& to );
+        void updateMetadata( const KUrl& from, const KUrl& to, bool includeChildren = true );
 
         /**
          * Convert old pre-KDE 4.4 style file:/ resource URIs to the
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/nepomukfilewatch.cpp kdebase-runtime-4.4.2//nepomuk/services/filewatch/nepomukfilewatch.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/nepomukfilewatch.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/nepomukfilewatch.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -1,5 +1,5 @@
 /* This file is part of the KDE Project
-   Copyright (c) 2007-2008 Sebastian Trueg <trueg@kde.org>
+   Copyright (c) 2007-2010 Sebastian Trueg <trueg@kde.org>
 
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
@@ -18,6 +18,12 @@
 
 #include "nepomukfilewatch.h"
 #include "metadatamover.h"
+#include "strigiserviceinterface.h"
+#include "../strigi/priority.h"
+
+#ifdef BUILD_KINOTIFY
+#include "kinotify.h"
+#endif
 
 #include <QtCore/QDir>
 #include <QtDBus/QDBusConnection>
@@ -27,18 +33,6 @@
 #include <KPluginFactory>
 
 
-// Restrictions and TODO:
-// ----------------------
-//
-// * KIO slaves that do change the local file system may emit stuff like
-//   file:///foo/bar -> xyz://foobar while the file actually ends up in
-//   the local file system again. This is not handled here. It is maybe
-//   necessary to use KFileItem::mostLocalUrl to determine local paths
-//   before deciding to call updateMetaDataForResource.
-//
-// * Only operations done through KIO are caught
-//
-
 using namespace Soprano;
 
 
@@ -52,11 +46,38 @@
     m_metadataMover = new MetadataMover( mainModel(), this );
     m_metadataMover->start();
 
-    // monitor KIO for changes
-    QDBusConnection::sessionBus().connect( QString(), QString(), "org.kde.KDirNotify", "FileMoved",
-                                           this, SIGNAL( slotFileMoved( const QString&, const QString& ) ) );
-    QDBusConnection::sessionBus().connect( QString(), QString(), "org.kde.KDirNotify", "FilesRemoved",
-                                           this, SIGNAL( slotFilesDeleted( const QStringList& ) ) );
+#ifdef BUILD_KINOTIFY
+    // listing all folders in watchFolder below will be IO-intensive. Do not grab it all
+    if ( !lowerIOPriority() )
+        kDebug() << "Failed to lower io priority.";
+
+    // monitor the file system for changes (restricted by the inotify limit)
+    m_dirWatch = new KInotify( this );
+
+    // FIXME: force to only use maxUserWatches-500 or something or always leave 500 free watches
+
+    connect( m_dirWatch, SIGNAL( moved( const QString&, const QString& ) ),
+             this, SLOT( slotFileMoved( const QString&, const QString& ) ) );
+    connect( m_dirWatch, SIGNAL( deleted( const QString& ) ),
+             this, SLOT( slotFileDeleted( const QString& ) ) );
+    connect( m_dirWatch, SIGNAL( created( const QString& ) ),
+             this, SLOT( slotFileCreated( const QString& ) ) );
+    connect( m_dirWatch, SIGNAL( watchUserLimitReached() ),
+             this, SLOT( slotInotifyWatchUserLimitReached() ) );
+
+    // recursively watch the whole home dir
+
+    // FIXME: we cannot simply watch the folders that contain annotated files since moving
+    // one of these files out of the watched "area" would mean we "lose" it, i.e. we have no
+    // information about where it is moved.
+    // On the other hand only using the homedir means a lot of restrictions.
+    // One dummy solution would be a hybrid: watch the whole home dir plus all folders that
+    // contain annotated files outside of the home dir and hope for the best
+
+    watchFolder( QDir::homePath() );
+#else
+    connectToKDirWatch();
+#endif
 }
 
 
@@ -67,9 +88,15 @@
 }
 
 
-void Nepomuk::FileWatch::moveFileMetadata( const QString& from, const QString& to )
+void Nepomuk::FileWatch::watchFolder( const QString& path )
 {
-    slotFileMoved( from, to );
+    kDebug() << path;
+#ifdef BUILD_KINOTIFY
+    if ( m_dirWatch && !m_dirWatch->watchingPath( path ) )
+        m_dirWatch->addWatch( path,
+                              KInotify::WatchEvents( KInotify::EventMove|KInotify::EventDelete|KInotify::EventDeleteSelf|KInotify::EventCreate ),
+                              KInotify::WatchFlags() );
+#endif
 }
 
 
@@ -102,4 +129,34 @@
     slotFilesDeleted( QStringList( urlString ) );
 }
 
+
+void Nepomuk::FileWatch::slotFileCreated( const QString& path )
+{
+    // tell Strigi service (if running)
+    org::kde::nepomuk::Strigi strigi( "org.kde.nepomuk.services.nepomukstrigiservice", "/nepomukstrigiservice", QDBusConnection::sessionBus() );
+    if ( strigi.isValid() )
+        strigi.updateFolder( path, false /* no forced update */ );
+}
+
+
+void Nepomuk::FileWatch::connectToKDirWatch()
+{
+    // monitor KIO for changes
+    QDBusConnection::sessionBus().connect( QString(), QString(), "org.kde.KDirNotify", "FileMoved",
+                                           this, SIGNAL( slotFileMoved( const QString&, const QString& ) ) );
+    QDBusConnection::sessionBus().connect( QString(), QString(), "org.kde.KDirNotify", "FilesRemoved",
+                                           this, SIGNAL( slotFilesDeleted( const QStringList& ) ) );
+}
+
+
+#ifdef BUILD_KINOTIFY
+void Nepomuk::FileWatch::slotInotifyWatchUserLimitReached()
+{
+    // we do it the brutal way for now hoping with new kernels and defaults this will never happen
+    delete m_dirWatch;
+    m_dirWatch = 0;
+    connectToKDirWatch();
+}
+#endif
+
 #include "nepomukfilewatch.moc"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/nepomukfilewatch.h kdebase-runtime-4.4.2//nepomuk/services/filewatch/nepomukfilewatch.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/filewatch/nepomukfilewatch.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/filewatch/nepomukfilewatch.h	2010-03-29 10:35:15.000000000 +0200
@@ -1,5 +1,5 @@
 /* This file is part of the KDE Project
-   Copyright (c) 2007-2008 Sebastian Trueg <trueg@kde.org>
+   Copyright (c) 2007-2010 Sebastian Trueg <trueg@kde.org>
 
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
@@ -31,9 +31,7 @@
     }
 }
 
-namespace KInotify {
-    class DirWatch;
-}
+class KInotify;
 
 class KUrl;
 
@@ -51,18 +49,23 @@
         ~FileWatch();
 
     public Q_SLOTS:
-        Q_SCRIPTABLE void moveFileMetadata( const QString& from, const QString& to );
+        Q_SCRIPTABLE void watchFolder( const QString& path );
 
     private Q_SLOTS:
         void slotFileMoved( const QString& from, const QString& to );
         void slotFileDeleted( const QString& path );
         void slotFilesDeleted( const QStringList& path );
+        void slotFileCreated( const QString& );
+        void connectToKDirWatch();
+#ifdef BUILD_KINOTIFY
+        void slotInotifyWatchUserLimitReached();
+#endif
 
     private:
         MetadataMover* m_metadataMover;
 
-#ifndef Q_WS_WIN
-        KInotify::DirWatch* m_dirWatch;
+#ifdef BUILD_KINOTIFY
+        KInotify* m_dirWatch;
 #endif
     };
 }
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/queryservice/nepomukqueryservice.desktop kdebase-runtime-4.4.2//nepomuk/services/queryservice/nepomukqueryservice.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/services/queryservice/nepomukqueryservice.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/queryservice/nepomukqueryservice.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -134,7 +134,7 @@
 Comment[sv]=Nepomuks frågetjänst tillhandahåller ett gränssnitt för bestående frågekataloger
 Comment[ta]=The Nepomuk Query Service provides an interface for persistent query folders
 Comment[te]=నెపోమక్ క్వరీ సేవ అనునది ఎప్పుడూవుండే క్వరీ ఫోల్డర్సుకు ఇంటర్ఫేస్‌ను అందిస్తుంది
-Comment[th]=Nepomuk Query Service เป็นส่วนติดต่อสำหรับโฟลเดอร์แสดงข้อมูลถาวร
+Comment[th]=บริการสืบค้น Nepomuk เป็นส่วนติดต่อสำหรับโฟลเดอร์สืบค้นข้อมูลถาวร
 Comment[tr]=Nepomuk Sorgulama Servisi kalıcı sorgu dizinleri için bir arayüz sağlar
 Comment[uk]=Служба запитів Nepomuk надає інтерфейс для постійних тек запитів
 Comment[wa]=Li siervice di cweraedje di Nepomuk dene èn eterface po des ridants d' cweraedje wårdés
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/CMakeLists.txt kdebase-runtime-4.4.2//nepomuk/services/removablestorage/CMakeLists.txt
--- kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/CMakeLists.txt	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/removablestorage/CMakeLists.txt	2010-03-29 10:35:15.000000000 +0200
@@ -16,6 +16,7 @@
 soprano_add_ontology(SRCS ${SHAREDDESKTOPONTOLOGIES_ROOT_DIR}/nie/nie.trig "NIE" "Nepomuk::Vocabulary" "trig")
 
 qt4_add_dbus_interface(SRCS ../../interfaces/org.kde.nepomuk.Strigi.xml strigiserviceinterface)
+qt4_add_dbus_interface(SRCS ../../interfaces/org.kde.nepomuk.FileWatch.xml filewatchserviceinterface)
 
 kde4_add_plugin(nepomukremovablestorageservice ${SRCS})
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/nepomukremovablestorageservice.desktop kdebase-runtime-4.4.2//nepomuk/services/removablestorage/nepomukremovablestorageservice.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/nepomukremovablestorageservice.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/removablestorage/nepomukremovablestorageservice.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -28,7 +28,6 @@
 Name[km]=សេវា​ផ្ទុក​ចល័រ​របស់ Nepomuk
 Name[kn]=ನೆಪೋಮುಕ್ ತೆಗೆದು ಹಾಕಬಹುದಾದ ಶೇಖರಣಾ ಸೇವೆ
 Name[ko]=Nepomuk 이동식 저장소 서비스
-Name[lt]=Nepomuk atjungiamų kaupiklių tarnyba
 Name[lv]=Nepomuk noņemamo glabāšanas ierīču serviss
 Name[mk]=Сервис на Непомук за подвижни медиуми
 Name[ml]=നെപ്പോമുക്ക്  സൂക്ഷിപ്പു് സേവനം
@@ -49,6 +48,7 @@
 Name[sr@latin]=Nepomukov servis uklonjivih skladišta
 Name[sv]=Nepomuk-tjänst för flyttbara medier
 Name[tg]=Основная служба хранения данных Nepomuk
+Name[th]=บริการเก็บข้อมูล Nepomuk บนสื่อถอด/เสียบได้
 Name[uk]=Служба зберігання на портативних пристроях Nepomuk
 Name[x-test]=xxNepomuk Removable Storage Servicexx
 Name[zh_CN]=Nepomuk 可移动存储服务
@@ -93,6 +93,7 @@
 Comment[sr@ijekavianlatin]=Nepomukov servis uklonjivih skladišta daje pristup Nepomukovim metapodacima na uklonjivim skladišnim uređajima.
 Comment[sr@latin]=Nepomukov servis uklonjivih skladišta daje pristup Nepomukovim metapodacima na uklonjivim skladišnim uređajima.
 Comment[sv]=Nepomuks tjänst för flyttbara medier, vilken ger tillgång till Nepomuk metadata för flyttbara lagringsenheter.
+Comment[th]=บริการเก็บข้อมูล Nepomuk บนสื่อถอด/เสียบได้ ให้บริการในการเข้าใช้งานข้อมูลต่าง ๆ ของ Nepomuk บนอุปกรณ์ต่าง ๆ ที่เป็นประเภทถอด/เสียบได้
 Comment[uk]=Служба зберігання на портативних носіях Nepomuk надає вам доступ до метаданих Nepomuk, що зберігаються на портативних носіях.
 Comment[x-test]=xxThe Nepomuk removable storage service, providing access to Nepomuk metadata on removable storage devices.xx
 Comment[zh_CN]=Nepomuk 可移动存储服务，提供了对可移动存储设备上的 Nepomuk 元数据访问功能。
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/removablestorageservice.cpp kdebase-runtime-4.4.2//nepomuk/services/removablestorage/removablestorageservice.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/removablestorageservice.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/removablestorage/removablestorageservice.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -20,6 +20,7 @@
 #include "nfo.h"
 #include "nie.h"
 #include "strigiserviceinterface.h"
+#include "filewatchserviceinterface.h"
 
 #include <QtDBus/QDBusConnection>
 #include <QtCore/QUuid>
@@ -172,6 +173,26 @@
 }
 
 
+QStringList Nepomuk::RemovableStorageService::currentlyMountedAndIndexed()
+{
+    if( KConfig( "nepomukstrigirc" ).group( "General" ).readEntry( "index newly mounted", false ) ) {
+        QStringList paths;
+        for ( QHash<QString, Entry>::ConstIterator it = m_metadataCache.constBegin();
+              it != m_metadataCache.constEnd(); ++it ) {
+            const Entry& entry = it.value();
+            const Solid::StorageAccess* storage = entry.m_device.as<Solid::StorageAccess>();
+            if ( storage && storage->isAccessible() ) {
+                paths << storage->filePath();
+            }
+        }
+        return paths;
+    }
+    else {
+        return QStringList();
+    }
+}
+
+
 void Nepomuk::RemovableStorageService::initCacheEntries()
 {
     QList<Solid::Device> devices
@@ -248,14 +269,25 @@
         //
         entry.m_lastMountPath = entry.m_device.as<Solid::StorageAccess>()->filePath();
 
-        //
-        // tell Strigi to update the newly mounted device
-        //
-        if( KConfig( "nepomukstrigirc" ).group( "General" ).readEntry( "index newly mounted", false ) ) {
-            org::kde::nepomuk::Strigi interface( "org.kde.nepomuk.services.nepomukstrigiservice",
-                                                 "/nepomukstrigiservice",
-                                                 QDBusConnection::sessionBus() );
-            interface.indexFolder( entry.m_lastMountPath, false );
+        if ( entry.hasLastMountPath() ) {
+            //
+            // tell the filewatch service that it should monitor the new medium
+            //
+            org::kde::nepomuk::FileWatch( "org.kde.nepomuk.services.nepomukfilewatch",
+                                          "/nepomukfilewatch",
+                                          QDBusConnection::sessionBus() )
+                .watchFolder( entry.m_lastMountPath );
+
+
+            //
+            // tell Strigi to update the newly mounted device
+            //
+            if( KConfig( "nepomukstrigirc" ).group( "General" ).readEntry( "index newly mounted", false ) ) {
+                org::kde::nepomuk::Strigi( "org.kde.nepomuk.services.nepomukstrigiservice",
+                                           "/nepomukstrigiservice",
+                                           QDBusConnection::sessionBus() )
+                    .indexFolder( entry.m_lastMountPath, false );
+            }
         }
 
         //
@@ -284,7 +316,7 @@
             }
         }
     }
-    else {
+    else if ( entry.hasLastMountPath() ) {
         //
         // The first thing we need to do is to inform nepomuk:/ kio slave instances that something has changed
         // so any caches will be cleared. Otherwise KDirModel and friends might try to access the old media URLs
@@ -367,6 +399,13 @@
     return path;
 }
 
+
+bool Nepomuk::RemovableStorageService::Entry::hasLastMountPath() const
+{
+    return( !m_lastMountPath.isEmpty() &&
+            m_lastMountPath != QLatin1String( "/" ) );
+}
+
 NEPOMUK_EXPORT_SERVICE( Nepomuk::RemovableStorageService, "nepomukremovablestorageservice")
 
 #include "removablestorageservice.moc"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/removablestorageservice.h kdebase-runtime-4.4.2//nepomuk/services/removablestorage/removablestorageservice.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/removablestorage/removablestorageservice.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/removablestorage/removablestorageservice.h	2010-03-29 10:35:15.000000000 +0200
@@ -65,6 +65,8 @@
          */
         Q_SCRIPTABLE QString resourceUriFromLocalFileUrl( const QString& url );
 
+        Q_SCRIPTABLE QStringList currentlyMountedAndIndexed();
+
     private Q_SLOTS:
         void slotSolidDeviceAdded( const QString& udi );
         void slotSolidDeviceRemoved( const QString& udi );
@@ -89,6 +91,7 @@
 
             KUrl constructRelativeUrl( const QString& path ) const;
             QString constructLocalPath( const KUrl& filexUrl ) const;
+            bool hasLastMountPath() const;
 
             Solid::Device m_device;
             QString m_lastMountPath;
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukcore.cpp kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukcore.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukcore.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukcore.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -28,7 +28,7 @@
 
 #include <Soprano/BackendSetting>
 
-static const char* s_repositoryName = "main";
+static const char s_repositoryName[] = "main";
 
 Nepomuk::Core::Core( QObject* parent )
     : Soprano::Server::ServerCore( parent ),
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukstorage.desktop kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukstorage.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukstorage.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukstorage.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -141,7 +141,7 @@
 Comment[ta]=The Core Nepomuk data storage service
 Comment[te]=ఆధార Nepomuk డాటా నిల్వ సేవ
 Comment[tg]=Основная служба хранения данных Nepomuk
-Comment[th]=บริการจัดเก็บข้อมูล Core Nepomik
+Comment[th]=บริการจัดเก็บข้อมูลระดับแกนของ Nepomik
 Comment[tr]=Nepomuk Ana veri depolama servisi
 Comment[uk]=Ядро служби збереження даних Nepomuk
 Comment[wa]=Li siervice core di wårdaedje di dnêyes Nepomuk
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukstorage.notifyrc kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukstorage.notifyrc
--- kdebase-runtime-4.4.2-old//nepomuk/services/storage/nepomukstorage.notifyrc	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/storage/nepomukstorage.notifyrc	2010-03-29 10:35:15.000000000 +0200
@@ -1,150 +1,40 @@
 [Global]
 IconName=nepomuk
-Name=Nepomuk Data Storage
-Name[ar]=مخزن بيانات  نبومك
-Name[be@latin]=Schovišča dla źviestak „Nepomuk”
-Name[bg]=Хранилище Nepomuk
-Name[bn_IN]=Nepomuk ডাটা সংরক্ষণব্যবস্থা
-Name[ca]=Emmagatzematge de dades del Nepomuk
-Name[ca@valencia]=Emmagatzematge de dades del Nepomuk
-Name[cs]=Datové úložiště Nepomuku
-Name[csb]=Trzëmanié pòdôwków Nepomuka
-Name[da]=Nepomuk datalagring
-Name[de]=Nepomuk-Datendienst
-Name[el]=Αποθήκη δεδομένων Nepomuk
-Name[en_GB]=Nepomuk Data Storage
-Name[eo]=Nepomuk enmemorigo de datumoj
-Name[es]=Almacenamiento de datos Nepomuk
-Name[et]=Nepomuki andmesalvesti
-Name[eu]=Nepomuken datu biltegiratzea
-Name[fi]=Nepomuk-tietovarasto
-Name[fr]=Stockage de données de Nepomuk
-Name[fy]=Nepomuk Gegevens opslach
-Name[ga]=Stóráil Sonraí Nepomuk
-Name[gl]=Almacén de datos de Nepomuk
-Name[gu]=નેપોમુક માહિતી સંગ્રહ
-Name[he]=שירותי אחסון של Nepomuk
-Name[hi]=नेपोमक डाटा भंडार
-Name[hne]=नेपोमक डाटा भंडार
-Name[hr]=Nepomuk Pohrana Podataka
-Name[hsb]=Nepomuk składowanje datow
-Name[hu]=Nepomuk adattároló
-Name[id]=Penyimpanan Data Nepomuk
-Name[is]=Nepomuk gagnageymsla
-Name[it]=Memorizzazione di dati di Nepomuk
-Name[ja]=Nepomuk データストレージ
-Name[kk]=Nepomuk деректерді сақтау
-Name[km]=ឧបករណ៍​ផ្ទុក​ទិន្នន័យ Nepomuk
-Name[kn]=ನೆಪೋಮುಕ್ ದತ್ತ ಸಂಗ್ರಹ
-Name[ko]=Nepomuk 데이터 저장소
-Name[ku]=Nepomuk Hîser Kirina Dane yan
-Name[lt]=Nepomuk duomenų saugojimas
-Name[lv]=Nepomuk datu glabātuve
-Name[mai]=Nepomuk डाटा भंडारण
-Name[mk]=Складирање на податоци во Непомук
-Name[ml]=നെപ്പോമുക്ക് ഡേറ്റാ സംഭരണം
-Name[mr]=Nepomuk माहिती संचयन
-Name[nb]=Nepomuk datalagring
-Name[nds]=Nepomuk-Datenaflaag
-Name[nl]=Nepomuk-gegevensopslag
-Name[nn]=Nepomuk datalagring
-Name[or]=Nepomuk ତଥ୍ୟ ଭଣ୍ଡାର
-Name[pa]=ਨਿਪੋਮੁਕ ਡਾਟਾ ਸਟੋਰੇਜ਼
-Name[pl]=Przechowywanie danych Nepomuka
-Name[pt]=Armazenamento de Dados do Nepomuk
-Name[pt_BR]=Armazenamento de Dados do Nepomuk
-Name[ro]=Stocare date Nepomuk
-Name[ru]=Хранилище Nepomuk
-Name[si]=Nepomuk දත්ත ගබඩාව
-Name[sk]=Dátové úložisko Nepomuku
-Name[sl]=Hramba podatkov za Nepomuk
-Name[sr]=Непомуково складиште
-Name[sr@ijekavian]=Непомуково складиште
-Name[sr@ijekavianlatin]=Nepomukovo skladište
-Name[sr@latin]=Nepomukovo skladište
-Name[sv]=Nepomuk-datalagring
-Name[ta]=Nepomuk Data Storage
-Name[te]=Nepomuk డాటా నిల్వ
-Name[tg]=Захирагоҳи Nepomuk
-Name[th]=ที่จัดเก็บข้อมูลของ Nepomuk
-Name[tr]=Nepomuk Veri Depolama
-Name[uk]=Збереження даних Nepomuk
-Name[wa]=Wårdaedje di dnêyes Nepomuk
-Name[x-test]=xxNepomuk Data Storagexx
-Name[zh_CN]=Nepomuk 数据存储
-Name[zh_TW]=Nepomuk 資料儲存
-Comment=The Nepomuk Storage Service
-Comment[ar]=خدمة التخزين لنبومك
-Comment[be@latin]=Słužba zachoŭvańnia źviestak „Nepomuk”
-Comment[bg]=Услуга за съхранение Nepomuk
-Comment[bn_IN]=Nepomuk Storage পরিসেবা
-Comment[ca]=Servei d'emmagatzematge del Nepomuk
-Comment[ca@valencia]=Servei d'emmagatzematge del Nepomuk
-Comment[cs]=Služba úložiště Nepomuku
-Comment[csb]=Ùsłëznota Storage Nepomuka
-Comment[da]=Nepomuk lagringstjeneste
-Comment[de]=Nepomuk-Ablagedienst
-Comment[el]=Υπηρεσία αποθήκης του Nepomuk
-Comment[en_GB]=The Nepomuk Storage Service
-Comment[eo]=Servo de Nepomuk-enmemorigo
-Comment[es]=Servicio Nepomuk de almacenamiento
-Comment[et]=Nepomuki salvestiteenus
-Comment[eu]=Nepomuken biltegiratzeko zerbitzua
-Comment[fi]=Nepomuk-tallennuspalvelu
-Comment[fr]=Service de stockage de Nepomuk
-Comment[fy]=De Nepomuk opslachtsjinst
-Comment[ga]=Seirbhís Stórála Nepomuk
-Comment[gl]=O servizo almacenaxe de Nepomuk
-Comment[gu]=નેપોમુક સંગ્રહ સેવા
-Comment[he]=שירותי האחסון המידע של Nepomuk
-Comment[hi]=नेपोमक भंडार सेवा
-Comment[hne]=नेपोमक भंडार सेवा
-Comment[hr]=Nepomuk Usluga Pohrane
-Comment[hsb]=Nepomuk Storage Service
-Comment[hu]=Nepomuk-tároló
-Comment[id]=Layanan Penyimpanan Nepomuk
-Comment[is]=Nepomuk gagnageymslumiðlari
-Comment[it]=Il servizio di memorizzazione di Nepomuk
-Comment[ja]=Nepomuk ストレージサービス
-Comment[kk]=Nepomuk сақтау қызметі
-Comment[km]=សេវា​ផ្ទុក​របស់ Nepomuk
-Comment[kn]=ನೆಪೋಮುಕ್ ಶೇಖರಣೆ ಹಾಗು ಸೇವೆ
-Comment[ko]=Nepomuk 저장소 서비스
-Comment[ku]=Nepomuk Servîsa Hîser Kirinê 
-Comment[lt]=Nepomuk saugojimo tarnyba
-Comment[lv]=Nepomuk glabāšanas serviss
-Comment[mai]=Nepomuk भंडारण सेवा
-Comment[mk]=Сервис за складирање на Непомук
-Comment[ml]=നെപ്പോമുക്ക് സൂക്ഷിപ്പു് സേവനം
-Comment[mr]=Nepomuk संचयन सेवा
-Comment[nb]=Nepomuk lagringstjeneste
-Comment[nds]=De Nepomuk-Wohrdeenst
-Comment[nl]=De Nepomuk-opslagdienst
-Comment[nn]=Lagringstenesta i Nepomuk
-Comment[or]=Nepomuk ଭଣ୍ଡାର ସର୍ଭିସ
-Comment[pa]=ਨਿਪੋਮੁਕ ਸਟੋਰੇਜ਼ ਸਰਵਿਸ
-Comment[pl]=Usługa przechowywania danych Nepomuka
-Comment[pt]=O Serviço de Armazenamento do Nepomuk
-Comment[pt_BR]=O serviço de armazenamento do Nepomuk
-Comment[ro]=Serviciul de stocare Nepomuk
-Comment[ru]=Служба хранилища Nepomuk
-Comment[si]=Nepomuk ගබඩා සේවාව
-Comment[sk]=Služba úložiska Nepomuku
-Comment[sl]=Nepomukova shranjevalna storitev
-Comment[sr]=Непомуков сервис складиштења
-Comment[sr@ijekavian]=Непомуков сервис складиштења
-Comment[sr@ijekavianlatin]=Nepomukov servis skladištenja
-Comment[sr@latin]=Nepomukov servis skladištenja
-Comment[sv]=Nepomuk-lagringstjänst
-Comment[ta]=The Nepomuk Storage Service
-Comment[tg]=Основная служба хранения данных Nepomuk
-Comment[th]=บริการเก็บข้อมูล Nepomuk
-Comment[tr]=Nepomuk Depolama Servisi
-Comment[uk]=Служба зберігання Nepomuk
-Comment[wa]=Li siervice di wårdaedje Nepomuk
-Comment[x-test]=xxThe Nepomuk Storage Servicexx
-Comment[zh_CN]=Nepomuk 存储服务
-Comment[zh_TW]=Nepomuk 儲存服務
+Name=Semantic Data Storage
+Name[de]=Semantische Datenspeicherung
+Name[el]=Αποθήκη σημασιολογικών δεδομένων
+Name[en_GB]=Semantic Data Storage
+Name[es]=Almacenamiento de datos semánticos
+Name[et]=Semantiline andmesalvesti
+Name[hr]=Semantička pohrana podataka
+Name[kk]=Семантикалық деректерді сақтау
+Name[km]=ការ​ផ្ទុក​ទិន្នន័យ​ស៊ីមែនទិក
+Name[nb]=Semantisk datalagring
+Name[nl]=Semantische gegevensopslag
+Name[pt]=Armazenamento de Dados Semânticos
+Name[pt_BR]=Armazenamento de dados semântico
+Name[sv]=Semantisk datalagring
+Name[th]=ที่จัดเก็บข้อมูลของระบบค้นหา
+Name[uk]=Сховище семантичних даних
+Name[x-test]=xxSemantic Data Storagexx
+Comment=Semantic Desktop
+Comment[de]=Semantischer Desktop
+Comment[el]=Σημασιολογική επιφάνεια εργασίας
+Comment[en_GB]=Semantic Desktop
+Comment[es]=Escritorio semántico
+Comment[et]=Semantiline töölaud
+Comment[hr]=Semantička radna površina
+Comment[kk]=Сементикалық үстелі
+Comment[km]=ផ្ទៃតុ​ស៊ីមែនទិក
+Comment[nb]=Semantisk skrivebord
+Comment[nds]=Schriefdischbeslöteln
+Comment[nl]=Semantisch bureaublad
+Comment[pt]=Ambiente de Trabalho Semântico
+Comment[pt_BR]=Área de trabalho semântica
+Comment[sv]=Semantiskt skrivbord
+Comment[th]=ระบบค้นหาผ่านพื้นที่ทำงาน
+Comment[uk]=Семантична стільниця
+Comment[x-test]=xxSemantic Desktopxx
 
 [Event/failedToStart]
 Name=Failed to start Nepomuk
@@ -194,6 +84,7 @@
 Name[sr@ijekavianlatin]=Neuspjelo pokretanje Nepomuka
 Name[sr@latin]=Neuspelo pokretanje Nepomuka
 Name[sv]=Misslyckades starta Nepomuk
+Name[th]=ล้มเหลวในการเริ่มบริการ Nepomuk
 Name[uk]=Не вдалося запустити Nepomuk
 Name[x-test]=xxFailed to start Nepomukxx
 Name[zh_CN]=启动 Nepomuk 失败
@@ -240,6 +131,7 @@
 Comment[sr@ijekavianlatin]=Sistem semantičke površi Nepomuk ne može da se pokrene
 Comment[sr@latin]=Sistem semantičke površi Nepomuk ne može da se pokrene
 Comment[sv]=Det semantiska skrivbordssystemet Nepomuk kunde inte startas
+Comment[th]=ไม่สามารถเริ่มการทำงานของ Nepomuk - ระบบค้นหาของพื้นที่ทำงาน ได้
 Comment[uk]=Не вдалося запустити систему семантичної стільниці Nepomuk
 Comment[x-test]=xxThe Nepomuk Semantic Desktop system could not be startedxx
 Comment[zh_CN]=无法启动 Nepomuk 语义桌面系统
@@ -311,7 +203,7 @@
 Name[ta]=Converting Nepomuk data
 Name[te]=నెపోమక్ దత్తాంశమును మార్పిడిచేయుట
 Name[tg]=Служба Nepomuk Data Storage
-Name[th]=กำลังแปลงข้อมูลของ Nepomuk
+Name[th]=ทำการแปลงข้อมูลของ Nepomuk
 Name[tr]=Nepomuk verileri dönüştürülüyor
 Name[uk]=Перетворення даних Nepomuk
 Name[wa]=Dji coviersêye les dinêyes Nepomuk
@@ -380,7 +272,7 @@
 Comment[sv]=All Nepomuks data konverteras till ett nytt lagringsgränssnitt
 Comment[ta]=All Nepomuk data is converted to a new storage backend
 Comment[te]=నెపోమక్ యొక్క మొత్తం డాటా కొత్త నిల్వ బ్యాకెండ్‌కు మార్పడి చేయబడింది
-Comment[th]=ข้อมูลทั้งหมดของ Nepomuk ถูกแปลงไปเป็นระบบสำรองใหม่
+Comment[th]=ข้อมูลทั้งหมดของ Nepomuk ได้ถูกแปลงไปยังแบ็คเอนด์ตัวใหม่แล้ว
 Comment[tr]=Tüm Nepomuk verileri yeni depolama arka ucuna dönüştürüldü
 Comment[uk]=Всі дані Nepomuk перетворено для нового сервера зберігання
 Comment[wa]=Totes les dnêyes di Nepomuk sont coviersêyes dins on novea programe fondmint di wårdaedje
@@ -523,7 +415,7 @@
 Comment[sv]=Misslyckades konvertera Nepomuks data till ett nytt gränssnitt
 Comment[ta]=Converting Nepomuk data to a new backend failed
 Comment[te]=నెపోమక్ దత్తాంశ క్షేత్రమును కొత్త బ్యాకెండ్‌కు మార్పిడి చేయుటలో వైఫల్యం
-Comment[th]=การแปลงข้อมูลของ Nepomuk ไปยังระบบสำรองใหม่ล้มเหลว
+Comment[th]=การแปลงข้อมูลของ Nepomuk ไปยังแบ็คเอนด์ตัวใหม่ล้มเหลว
 Comment[tr]=Nepomuk verileri yeni arka uca dönüştürülemedi
 Comment[uk]=Спроба перетворення даних Nepomuk для нового сервера зазнала невдачі
 Comment[wa]=Li coviersaedje des dinêyes Nepomuk viè on novea programe fondmint a fwait berwete
@@ -597,7 +489,7 @@
 Name[ta]=Converting Nepomuk data done
 Name[te]=నెపోమక్ దత్తాంశం మార్పిడి అయినది
 Name[tg]=Nepomuk Data Migration Level 1
-Name[th]=การแปลงข้อมูลของ Nepomuk เสร็จสิ้น
+Name[th]=การแปลงข้อมูลของ Nepomuk เสร็จสิ้นแล้ว
 Name[tr]=Nepomuk verileri dönüştürüldü
 Name[uk]=Перетворення даних Nepomuk завершено
 Name[wa]=Li coviersaedje des dinêyes Nepomukest fwait
@@ -665,7 +557,7 @@
 Comment[sv]=Konverterade Nepomuks data till ett nytt gränssnitt med lyckat resultat
 Comment[ta]=Successfully converted Nepomuk data to new backend
 Comment[te]=నెపోమక్ దత్తాంశం కొత్త బ్యాకెండ్‌కు సమర్ధవంతంగా మార్పిడి జరిగింది
-Comment[th]=การแปลงข้อมูลของ Nepomuk ไปยังระบบสำรองใหม่เสร็จสิ้น
+Comment[th]=การแปลงข้อมูลของ Nepomuk ไปยังแบ็คเอนด์ตัวใหม่เสร็จสิ้นแล้ว
 Comment[tr]=Nepomuk verileri yeni arka uca başarılı bir şekilde dönüştürüldü
 Comment[uk]=Дані Nepomuk успішно перетворено для нового сервера
 Comment[wa]=Dj' a coviersé les dinêyes Nepomuk viè on novea programe fondmint comifåt
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/CMakeLists.txt kdebase-runtime-4.4.2//nepomuk/services/strigi/CMakeLists.txt
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/CMakeLists.txt	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/CMakeLists.txt	2010-03-29 10:35:15.000000000 +0200
@@ -33,7 +33,6 @@
   eventmonitor.cpp
   systray.cpp
   statuswidget.cpp
-  filesystemwatcher.cpp
   useractivitymonitor.cpp
   )
 
@@ -48,6 +47,9 @@
   "Nepomuk::Vocabulary"
   "trig")
 
+qt4_add_dbus_interface(strigiservice_SRCS ../../interfaces/org.kde.nepomuk.RemovableStorage.xml removablestorageserviceinterface)
+qt4_add_dbus_interface(strigiservice_SRCS ../../interfaces/org.kde.nepomuk.FileWatch.xml filewatchserviceinterface)
+
 kde4_add_ui_files(strigiservice_SRCS
   statuswidget.ui)
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/eventmonitor.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/eventmonitor.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/eventmonitor.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/eventmonitor.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -45,15 +45,9 @@
       m_indexScheduler( scheduler ),
       m_pauseState( NotPaused )
 {
-    // FileSystemWatcher does not catch changes to files, only new and removed files
-    // thus, we also do periodic updates of the whole index every two hours
-    connect( &m_periodicUpdateTimer, SIGNAL( timeout() ),
-             m_indexScheduler, SLOT( updateAll() ) );
-    m_periodicUpdateTimer.setInterval( 2*60*60*1000 );
-
     // monitor the powermanagement to not drain the battery
-    //connect( Solid::PowerManagement::notifier(), SIGNAL( appShouldConserveResourcesChanged( bool ) ),
-    //         this, SLOT( slotPowerManagementStatusChanged( bool ) ) );
+    connect( Solid::PowerManagement::notifier(), SIGNAL( appShouldConserveResourcesChanged( bool ) ),
+             this, SLOT( slotPowerManagementStatusChanged( bool ) ) );
 
     // setup the avail disk usage monitor
     connect( &m_availSpaceTimer, SIGNAL( timeout() ),
@@ -77,11 +71,8 @@
                  this, SLOT( slotIndexingStopped() ),
                  Qt::QueuedConnection );
     }
-    else {
-        m_periodicUpdateTimer.start();
-    }
 
-    //slotPowerManagementStatusChanged( Solid::PowerManagement::appShouldConserveResources() );
+    slotPowerManagementStatusChanged( Solid::PowerManagement::appShouldConserveResources() );
 }
 
 
@@ -144,13 +135,11 @@
     if ( !m_indexScheduler->isSuspended() ) {
         kDebug() << "initial indexing took" << m_initialIndexTime.elapsed();
         sendEvent( "initialIndexingFinished",
-                   i18nc( "@info %1 is a duration formatted using KLocale::formatDuration",
+                   i18nc( "@info %1 is a duration formatted using KLocale::prettyFormatDuration",
                           "Initial indexing of files for fast searching finished in %1",
-                          KGlobal::locale()->formatDuration( m_initialIndexTime.elapsed() ) ),
+                          KGlobal::locale()->prettyFormatDuration( m_initialIndexTime.elapsed() ) ),
                    "nepomuk" );
         m_indexScheduler->disconnect( this );
-
-        m_periodicUpdateTimer.start();
     }
 }
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/eventmonitor.h kdebase-runtime-4.4.2//nepomuk/services/strigi/eventmonitor.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/eventmonitor.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/eventmonitor.h	2010-03-29 10:35:15.000000000 +0200
@@ -57,8 +57,6 @@
         QTimer m_availSpaceTimer;
 
         QTime m_initialIndexTime;
-
-        QTimer m_periodicUpdateTimer;
     };
 }
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/filesystemwatcher.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/filesystemwatcher.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/filesystemwatcher.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/filesystemwatcher.cpp	1970-01-01 01:00:00.000000000 +0100
@@ -1,338 +0,0 @@
-/* This file is part of the KDE Project
-   Copyright (c) 2008 Sebastian Trueg <trueg@kde.org>
-
-   This library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Library General Public
-   License version 2 as published by the Free Software Foundation.
-
-   This library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Library General Public License for more details.
-
-   You should have received a copy of the GNU Library General Public License
-   along with this library; see the file COPYING.LIB.  If not, write to
-   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.
-*/
-
-#include "filesystemwatcher.h"
-
-#include <QtCore/QTimer>
-#include <QtCore/QHash>
-#include <QtCore/QDateTime>
-#include <QtCore/QStringList>
-#include <QtCore/QDirIterator>
-#include <QtCore/QFileInfo>
-#include <QtCore/QThread>
-#include <QtCore/QWaitCondition>
-#include <QtCore/QMutex>
-#include <QtCore/QMutexLocker>
-#include <QtCore/QMetaType>
-
-#include <KDebug>
-
-Q_DECLARE_METATYPE( FileSystemWatcher::Status )
-
-namespace {
-    // small class to keep mem usage low
-    class FolderEntry
-    {
-    public:
-        FolderEntry() {
-        }
-
-        FolderEntry( int m )
-            : mTime( m ) {
-        }
-
-        uint mTime;
-        QHash<QString, FolderEntry> children;
-    };
-}
-
-class FileSystemWatcher::Private : public QThread
-{
-public:
-    Private( FileSystemWatcher* parent )
-        : recursive( true ),
-          interval( 10*60 ),
-          status( FileSystemWatcher::Idle ),
-          m_suspended( false ),
-          q( parent ) {
-    }
-
-    QStringList folders;
-    QHash<QString, FolderEntry> cache;
-    bool recursive;
-    int interval;
-
-    FileSystemWatcher::Status status;
-
-    void start( const QDateTime& startTime );
-    void stop();
-    void suspend( bool );
-    void run();
-
-    void buildFolderCache( uint mTime );
-    void checkFolders();
-
-private:
-    void updateChildrenCache( const QString& parentPath, FolderEntry& parentEntry, bool signalNewEntries );
-    void checkFolder( const QString& path, FolderEntry& folder );
-
-    // waits if suspended, returns false if stopped
-    bool continueChecking();
-
-    QDateTime m_startTime;
-    QWaitCondition m_updateWaiter;
-    QMutex m_statusMutex;
-    QWaitCondition m_statusWaiter;
-    bool m_stopped;
-    bool m_suspended;
-
-    FileSystemWatcher* q;
-};
-
-
-void FileSystemWatcher::Private::start( const QDateTime& startTime )
-{
-    m_stopped = false;
-    m_startTime = startTime;
-    QThread::start();
-}
-
-
-void FileSystemWatcher::Private::stop()
-{
-    QMutexLocker lock( &m_statusMutex );
-    m_stopped = true;
-    m_updateWaiter.wakeAll();
-    m_statusWaiter.wakeAll();
-}
-
-
-void FileSystemWatcher::Private::suspend( bool suspend )
-{
-    if ( suspend != m_suspended ) {
-        kDebug() << suspend;
-        QMutexLocker lock( &m_statusMutex );
-        m_suspended = suspend;
-        if ( !suspend )
-            m_statusWaiter.wakeAll();
-    }
-}
-
-
-bool FileSystemWatcher::Private::continueChecking()
-{
-    QMutexLocker lock( &m_statusMutex );
-    if ( m_suspended && !m_stopped ) {
-        kDebug() << "waiting";
-        m_statusWaiter.wait( &m_statusMutex );
-    }
-    return !m_stopped;
-}
-
-
-void FileSystemWatcher::Private::run()
-{
-    buildFolderCache( m_startTime.toTime_t() );
-
-    while ( 1 ) {
-        // wait for the next update or stop
-        QMutex mutex;
-        mutex.lock();
-        if ( m_updateWaiter.wait( &mutex, interval*1000 ) ) {
-            // canceled
-            return;
-        }
-
-        kDebug() << "woke up";
-
-        // check if we have been stopped
-        if ( !continueChecking() )
-            return;
-
-        // check all folders
-        status = Checking;
-        emit q->statusChanged( Checking );
-        checkFolders();
-        status = Idle;
-        emit q->statusChanged( Idle );
-
-        // check if we have been stopped
-        if ( !continueChecking() )
-            return;
-    }
-}
-
-
-void FileSystemWatcher::Private::buildFolderCache( uint mTime )
-{
-    cache.clear();
-
-    foreach( QString folder, folders ) { // krazy:exclude=foreach
-        if ( folder.endsWith( '/' ) )
-            folder.truncate( folder.length()-1 );
-        FolderEntry entry( mTime );
-        if ( recursive ) {
-            updateChildrenCache( folder, entry, false );
-        }
-        cache.insert( folder, entry );
-    }
-}
-
-
-void FileSystemWatcher::Private::updateChildrenCache( const QString& parentPath, FolderEntry& parentEntry, bool signalNewEntries )
-{
-    QDirIterator dirIt( parentPath, QDir::NoDotAndDotDot|QDir::Readable|QDir::Dirs|QDir::NoSymLinks );
-    while ( dirIt.hasNext() ) {
-        dirIt.next();
-        if ( !parentEntry.children.contains( dirIt.fileName() ) ) {
-            FolderEntry entry( parentEntry.mTime );
-            parentEntry.children.insert( dirIt.fileName(), entry );
-            if ( signalNewEntries ) {
-                emit q->dirty( dirIt.filePath() );
-            }
-        }
-
-        // check if we have been stopped
-        if ( !continueChecking() )
-            return;
-    }
-
-    for( QHash<QString, FolderEntry>::iterator it = parentEntry.children.begin();
-         it != parentEntry.children.end(); ++it ) {
-        // check if we have been stopped
-        if ( !continueChecking() )
-            return;
-        updateChildrenCache( parentPath + '/' + it.key(), it.value(), signalNewEntries );
-    }
-}
-
-
-void FileSystemWatcher::Private::checkFolders()
-{
-    kDebug();
-    for( QHash<QString, FolderEntry>::iterator it = cache.begin();
-         it != cache.end(); ++it ) {
-        checkFolder( it.key(), it.value() );
-    }
-}
-
-
-void FileSystemWatcher::Private::checkFolder( const QString& path, FolderEntry& entry )
-{
-    QFileInfo info( path );
-    if ( info.exists() ) {
-        // check if anything changed in the folder
-        bool dirty = false;
-        if ( info.lastModified().toTime_t() > entry.mTime ) {
-            entry.mTime = info.lastModified().toTime_t();
-            emit q->dirty( path );
-            dirty = true;
-        }
-
-        // check if any subfolder changed
-        for( QHash<QString, FolderEntry>::iterator it = entry.children.begin();
-             it != entry.children.end(); ++it ) {
-            checkFolder( path + '/' + it.key(), it.value() );
-
-            // wait in case we are suspended
-            if ( !continueChecking() )
-                return;
-        }
-
-        // update in case folders have been created
-        if ( dirty ) {
-            updateChildrenCache( path, entry, true );
-        }
-    }
-    // else -> FIXME: do we need to signal this or is it handled by the parent folder
-}
-
-
-FileSystemWatcher::FileSystemWatcher( QObject* parent )
-    : QObject( parent ),
-      d( new Private( this ) )
-{
-    qRegisterMetaType<FileSystemWatcher::Status>();
-}
-
-
-FileSystemWatcher::~FileSystemWatcher()
-{
-    stop();
-    delete d;
-}
-
-
-void FileSystemWatcher::start( const QDateTime& startTime )
-{
-    stop();
-    d->start( startTime );
-}
-
-
-void FileSystemWatcher::stop()
-{
-    d->stop();
-    d->wait();
-}
-
-
-void FileSystemWatcher::suspend()
-{
-    d->suspend( true );
-}
-
-
-void FileSystemWatcher::resume()
-{
-    d->suspend( false );
-}
-
-
-QStringList FileSystemWatcher::folders() const
-{
-    return d->folders;
-}
-
-
-bool FileSystemWatcher::watchRecursively() const
-{
-    return d->recursive;
-}
-
-
-int FileSystemWatcher::interval() const
-{
-    return d->interval;
-}
-
-
-FileSystemWatcher::Status FileSystemWatcher::status() const
-{
-    return d->status;
-}
-
-
-void FileSystemWatcher::setFolders( const QStringList& folders )
-{
-    d->folders = folders;
-}
-
-
-void FileSystemWatcher::setWatchRecursively( bool r )
-{
-    d->recursive = r;
-}
-
-
-void FileSystemWatcher::setInterval( int seconds )
-{
-    d->interval = seconds;
-}
-
-#include "filesystemwatcher.moc"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/filesystemwatcher.h kdebase-runtime-4.4.2//nepomuk/services/strigi/filesystemwatcher.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/filesystemwatcher.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/filesystemwatcher.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,90 +0,0 @@
-/* This file is part of the KDE Project
-   Copyright (c) 2008 Sebastian Trueg <trueg@kde.org>
-
-   This library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Library General Public
-   License version 2 as published by the Free Software Foundation.
-
-   This library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Library General Public License for more details.
-
-   You should have received a copy of the GNU Library General Public License
-   along with this library; see the file COPYING.LIB.  If not, write to
-   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.
-*/
-
-#ifndef _FILE_SYSTEM_WATCHER_H_
-#define _FILE_SYSTEM_WATCHER_H_
-
-#include <QtCore/QObject>
-#include <QtCore/QDateTime>
-
-
-/**
- * Watches a file system by periodically checking the
- * folder modification date.
- */
-class FileSystemWatcher : public QObject
-{
-    Q_OBJECT
-
-public:
-    FileSystemWatcher( QObject* parent = 0 );
-    ~FileSystemWatcher();
-
-    QStringList folders() const;
-    bool watchRecursively() const;
-    int interval() const;
-
-    enum Status {
-        Checking,
-        Idle
-    };
-
-    Status status() const;
-
-public Q_SLOTS:
-    void setFolders( const QStringList& folders );
-
-    /**
-     * Enabled by default.
-     */
-    void setWatchRecursively( bool );
-
-    void setInterval( int seconds );
-
-    /**
-     * Actually start checking the folders. Once the FileSystemWatcher
-     * is started it will check the configured folders every \p interval()
-     * seconds.
-     *
-     * Be aware that changing the settings on a started FileSystemWatcher
-     * will have no effect until it is restarted.
-     */
-    void start( const QDateTime& startTime = QDateTime::currentDateTime() );
-
-    void stop();
-
-    void suspend();
-    void resume();
-
-Q_SIGNALS:
-    /**
-     * Emitted if a folder is dirty, i.e. its contents
-     * changed.
-     */
-    void dirty( const QString& folder );
-
-    void statusChanged( FileSystemWatcher::Status status );
-
-private:
-    class Private;
-    Private* const d;
-
-    Q_PRIVATE_SLOT( d, void checkFolders() )
-};
-
-#endif
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/nepomukstrigiservice.desktop kdebase-runtime-4.4.2//nepomuk/services/strigi/nepomukstrigiservice.desktop
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/nepomukstrigiservice.desktop	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/nepomukstrigiservice.desktop	2010-03-29 10:35:15.000000000 +0200
@@ -140,7 +140,7 @@
 Comment[sv]=Nepomuk-tjänst som styr Strigi-demonen, dvs. indexerar filer på skrivbordet
 Comment[ta]=Nepomuk Service which controls the strigidaemon, i.e. indexes files on the desktop
 Comment[te]=Nepomuk సేవ strigidaemon ను నియత్రిస్తుంది, అంటే. డెస్‍క్‌టాప్ పైన దస్త్రములను క్రమపరుస్తుంది
-Comment[th]=บริการของ Nepomuk สำหรับสำหรับควบคุมดีมอน strigidaemon ที่ทำหน้าที่ เช่น สร้างดัชนีแฟ้มสำหรับพื้นที่ทำงาน เป็นต้น
+Comment[th]=บริการของ Nepomuk สำหรับสำหรับควบคุมดีมอน strigidaemon ที่ทำหน้าที่ เช่น สร้างดัชนีแฟ้มต่าง ๆ บนพื้นที่ทำงาน เป็นต้น
 Comment[tr]=Strigidaemon uygulamasını yöneten Nepomuk servisi, masaüstünüzdeki dosyaları indeksleyen bir uygulama
 Comment[uk]=Служба Nepomuk, яка контролює фонову службу strigi, тобто, індексує файли на стільниці
 Comment[wa]=Siervice Nepomuk ki controle li démon strigi, ki fwait ls indecses des fitchîs sol sicribanne
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/nepomukstrigiservice.notifyrc kdebase-runtime-4.4.2//nepomuk/services/strigi/nepomukstrigiservice.notifyrc
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/nepomukstrigiservice.notifyrc	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/nepomukstrigiservice.notifyrc	2010-03-29 10:35:15.000000000 +0200
@@ -1,58 +1,23 @@
 [Global]
 IconName=nepomuk
-Comment=Search service file indexer
-Comment[ca]=L'indexador de fitxers del servei de cerca
-Comment[ca@valencia]=L'indexador de fitxers del servei de cerca
-Comment[csb]=Indeksownik serwisu szëkbë lopków
-Comment[da]=Filindeksering til søgetjeneste
-Comment[de]=Suchdienst-Dateiindexer
-Comment[el]=Υπηρεσία ευρετηρίου αρχείων
-Comment[en_GB]=Search service file indexer
-Comment[eo]=Indeksado de dosieroj por la ŝerĉ-servo
-Comment[es]=Indexador de archivos del servicio de búsqueda
-Comment[et]=Otsinguteenuse failide indekseerija
-Comment[eu]=Bilaketa zerbitzuaren fitxategi indexatzailea
-Comment[fi]=Etsintäpalvelu tiedostoindeksoija
-Comment[fr]=Service d'indexation de fichier pour les recherches
-Comment[fy]=Syk tsjinst triem yndeksering
-Comment[gl]=Indexador de ficheiros do servizo de procura
-Comment[he]=מאנדקס קובץ שירות חיפוש
-Comment[hr]=Usluga pretrage – indekser datoteka
-Comment[id]=Layanan pencarian pengindeksan berkas
-Comment[is]=Strigi skráayfirlitsgerð
-Comment[it]=Indicizzatore di file del servizio di ricerca
-Comment[ja]=検索サービスのファイルインデクサ
-Comment[kk]=Іздеу қызметінің файл индекстегіш
-Comment[km]=កម្មវិធី​ដាក់​លិបិក្រម​ឯកសារ​សេវា​ស្វែងរក
-Comment[kn]=ಹುಡುಕು ಸೇವೆ ಕಡತ ಸೂಚಿ (ಇಂಡೆಕ್ಸರ್)
-Comment[ko]=검색 서비스 파일 인덱서
-Comment[lt]=Paieškos tarnybos failų indeksuoklis
-Comment[lv]=Meklēšanas servisa failu indeksētājs
-Comment[mk]=Индексирач на датотеки за сервисот за пребарување
-Comment[ml]=തെരച്ചില്‍ സേവന ഫയല്‍ സ്വാംശീകരണം
-Comment[nb]=Filindeksering for søketjeneste
-Comment[nds]=Söökdeenst-Dateiindizeren
-Comment[nl]=Zoekservice bestandenindexering
-Comment[nn]=Filindeksering for søkjeteneste
-Comment[pa]=ਨਿਪੋਮੁਕ ਸਰਵਿਸ ਫਾਇਲ ਇੰਡੈਕਸਰ
-Comment[pl]=Usługa indeksowania plików dla wyszukiwania
-Comment[pt]=Indexação de ficheiros do serviço de pesquisa
-Comment[pt_BR]=Indexador de arquivos do serviço de pesquisa
-Comment[ro]=Indexator de fișiere pentru serviciul de căutare
-Comment[si]=ගොනු සූචිකාරක සේවාව සොයන්න
-Comment[sk]=Indexovanie súborov pre vyhľadávaciu službu
-Comment[sl]=Indeksirnik datotek za storitev iskanja
-Comment[sr]=Индексар фајлова претраживачког сервиса
-Comment[sr@ijekavian]=Индексар фајлова претраживачког сервиса
-Comment[sr@ijekavianlatin]=Indeksar fajlova pretraživačkog servisa
-Comment[sr@latin]=Indeksar fajlova pretraživačkog servisa
-Comment[sv]=Söktjänst filindexering
-Comment[tg]=Настройка сервера Nepomuk/Strigi
-Comment[tr]=Arama servisi dosya indeksleyici
-Comment[uk]=Індексування файлів служби пошуку
-Comment[x-test]=xxSearch service file indexerxx
-Comment[zh_CN]=搜索服务文件索引器
-Comment[zh_TW]=搜尋服務檔案索引
+Comment=Desktop Search
+Comment[de]=Desktopsuche
+Comment[el]=Αναζήτηση επιφάνειας εργασίας
+Comment[en_GB]=Desktop Search
+Comment[es]=Búsqueda de escritorio
+Comment[et]=Töölauaotsing
+Comment[hr]=Pretraživanje računala
+Comment[kk]=Іздеу
+Comment[km]=ស្វែងរក​ផ្ទៃតុ
+Comment[nb]=Skrivebordssøk
+Comment[nds]=Schriefdischsöök
+Comment[nl]=Bureaublad-zoekopdracht
+Comment[pt]=Pesquisa no Ambiente de Trabalho
+Comment[pt_BR]=Pesquisa na área de trabalho
+Comment[sv]=Skrivbordssökning
+Comment[th]=ค้นหาผ่านพื้นที่ทำงาน
+Comment[uk]=Стільничний пошук
+Comment[x-test]=xxDesktop Searchxx
 
 [Event/initialIndexingStarted]
 Name=Initial Indexing started
@@ -121,7 +86,7 @@
 Name[ta]=Initial Indexing started
 Name[te]=ప్రాధమిక విషయవర్గీకరణ ప్రారంభమైంది
 Name[tg]=знак пунктуации, открывающая кавычка
-Name[th]=เริ่มการเตรียมการทำดัชนี
+Name[th]=เริ่มเตรียมการทำดัชนี
 Name[tr]=Temel İndeksleme başladı
 Name[uk]=Запущено початкове індексування
 Name[wa]=Li prumî indecsaedje a cmincî
@@ -162,7 +127,6 @@
 Comment[nds]=Dat Indizeren vun lokaal Dateien för gau Söken hett anfungen
 Comment[nl]=Indexering van lokale bestanden voor snelle zoekopdrachten is gestart.
 Comment[nn]=Starta førsteindekseringa av lokale filer for snøgge søk.
-Comment[pa]=ਤੇਜ਼ ਡੈਸਕਟਾਪ ਖੋਜ ਲਈ ਲੋਕਲ ਫਾਇਲਾਂ ਵਾਸਤੇ ਇੰਡੈਕਸ ਬਣਾਉਣਾ ਸ਼ੁਰੂ ਕੀਤਾ
 Comment[pl]=Nastąpiło rozpoczęcie indeksowania plików lokalnych w celu przyspieszenia wyszukiwania.
 Comment[pt]=A indexação dos ficheiros para pesquisas mais rápidas começou agora.
 Comment[pt_BR]=A indexação dos arquivos para pesquisas rápidas foi iniciada.
@@ -174,6 +138,7 @@
 Comment[sr@ijekavianlatin]=Započeto je indeksiranje lokalnih fajlova radi brze pretrage.
 Comment[sr@latin]=Započeto je indeksiranje lokalnih fajlova radi brze pretrage.
 Comment[sv]=Indexering av lokala filer för snabb sökning har startat.
+Comment[th]=การทำดัชนีของแฟ้มต่าง ๆ ภายในระบบเพื่อการค้นหาที่รวดเร็วได้เริ่มแล้ว
 Comment[tr]=Hızlı arama için yerel dosyaların indekslenme işlemi başlatıldı.
 Comment[uk]=Розпочато індексування локальних файлів для пришвидшення пошуку.
 Comment[x-test]=xxIndexing of local files for fast searches has started.xx
@@ -288,7 +253,6 @@
 Comment[nds]=Dat eerste Indizeren vun lokaal Dateien för gau Schriefdisch-Söken is afslaten.
 Comment[nl]=De eerste indexering van lokale bestanden voor snelle desktop-zoekopdrachten is gereed.
 Comment[nn]=Starta førsteindekseringa av lokale filer for snøgge søk.
-Comment[pa]=ਤੇਜ਼ ਡੈਸਕਟਾਪ ਖੋਜ ਲਈ ਲੋਕਲ ਫਾਇਲਾਂ ਵਾਸਤੇ ਇੰਡੈਕਸ ਬਣਾਉਣਾ ਪੂਰਾ ਹੋਇਆ।
 Comment[pl]=Nastąpiło zakończenie wstępnego indeksowania plików lokalnych w celu przyspieszenia wyszukiwania.
 Comment[pt]=A primeira indexação dos ficheiros para pesquisas mais rápidas terminou.
 Comment[pt_BR]=A indexação inicial de arquivos locais para pesquisas rápidas foi concluída.
@@ -300,6 +264,7 @@
 Comment[sr@ijekavianlatin]=Završeno je početno indeksiranje lokalnih fajlova radi brze pretrage površi.
 Comment[sr@latin]=Završeno je početno indeksiranje lokalnih fajlova radi brze pretrage površi.
 Comment[sv]=Den inledande indexeringen av lokala filer för snabb skrivbordssökning är klar.
+Comment[th]=การทำดัชนีของแฟ้มภายในระบบเพื่อการค้นหาที่รวดเร็วเสร็จสมบูรณ์แล้ว
 Comment[tr]=Hızlı masaüstü araması için yerel dosyaların temel indeksleme işlemi tamamlandı.
 Comment[uk]=Початкове індексування локальних файлів для пришвидшення стільничного пошуку завершено.
 Comment[x-test]=xxThe initial indexing of local files for fast desktop searches has completed.xx
@@ -374,7 +339,7 @@
 Name[ta]=Indexing suspended
 Name[te]=విషయవర్దీకరణ సంస్పెండ్ చేయబడింది
 Name[tg]=Indexing suspended
-Name[th]=การทำดัชนี้ถูกหยุดค้างไว้ชั่วคราว
+Name[th]=การทำดัชนีถูกหยุดพักไว้ชั่วคราว
 Name[tr]=İndeksleme beklemeye alındı
 Name[uk]=Пауза індексування
 Name[x-test]=xxIndexing suspendedxx
@@ -414,7 +379,6 @@
 Comment[nds]=De Söökdeenst hett dat Indizeren vun Dateien utsett.
 Comment[nl]=Bestandenindexering is onderbroken door de zoekservice.
 Comment[nn]=Filindekseringa med vart stoppa av søkjetenesta.
-Comment[pa]=ਖੋਜ ਸਰਵਿਸ ਨੇ ਫਾਇਲ ਇੰਡੈਕਸ ਨੂੰ ਸਸਪੈਂਡ ਕੀਤਾ
 Comment[pl]=Indeksowanie plików zostało zawieszone przez usługę wyszukiwania.
 Comment[pt]=A indexação de ficheiros foi suspensa pelo serviço de pesquisa.
 Comment[pt_BR]=A indexação de arquivos foi suspensa pelo serviço de pesquisa.
@@ -426,6 +390,7 @@
 Comment[sr@ijekavianlatin]=Servis pretrage je suspendovao indeksiranje fajlova.
 Comment[sr@latin]=Servis pretrage je suspendovao indeksiranje fajlova.
 Comment[sv]=Filindexering har tillfälligt stoppats av söktjänsten.
+Comment[th]=การทำดัชนีถูกหยุดพักชั่วคราวจากบริการค้นหา
 Comment[tr]=Dosya indeksleyici arama servisi tarafından durduruldu.
 Comment[uk]=Індексування файлів було призупинено службою пошуку.
 Comment[x-test]=xxFile indexing has been suspended by the search service.xx
@@ -500,7 +465,7 @@
 Name[ta]=Indexing resumed
 Name[te]=విషయవర్గీకరణ తిరిగికొనసాగించబడింది
 Name[tg]=Indexing resumed
-Name[th]=การทำดัชนีถูกกลับมาทำงานต่อ
+Name[th]=การทำดัชนีกลับมาทำงานต่อแล้ว
 Name[tr]=İndeksleme çalışmaya devam ettirildi
 Name[uk]=Продовження індексування
 Name[x-test]=xxIndexing resumedxx
@@ -540,7 +505,6 @@
 Comment[nds]=De Söökdeenst maakt mit dat Indizeren vun Dateien wieder.
 Comment[nl]=Bestandenindexering is hervat door de zoekservice.
 Comment[nn]=Filindekseringa vart starta opp att av søkjetenesta.
-Comment[pa]=ਖੋਜ ਸਰਵਿਸ ਵਲੋਂ ਫਾਇਲ ਇੰਡੈਕਸ ਮੁੜ-ਚਲਾਇਆ ਗਿਆ
 Comment[pl]=Wznowiono indeksowanie plików.
 Comment[pt]=A indexação de ficheiros foi retomada pelo serviço de pesquisa.
 Comment[pt_BR]=A indexação de arquivos foi retomada pelo serviço de pesquisa.
@@ -552,6 +516,7 @@
 Comment[sr@ijekavianlatin]=Servis pretrage je nastavio indeksiranje fajlova.
 Comment[sr@latin]=Servis pretrage je nastavio indeksiranje fajlova.
 Comment[sv]=Filindexering har återupptagits av söktjänsten.
+Comment[th]=การทำดัชนีแฟ้มได้ดำเนินการต่อแล้วโดยบริการค้นหา
 Comment[tr]=Dosya indeksleyici arama servisi tarafından devam ettirildi.
 Comment[uk]=Індексування файлів було поновлено службою пошуку.
 Comment[x-test]=xxFile indexing has been resumed by the search service.xx
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/statuswidget.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/statuswidget.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/statuswidget.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/statuswidget.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -1,5 +1,5 @@
 /* This file is part of the KDE Project
-   Copyright (c) 2008 Sebastian Trueg <trueg@kde.org>
+   Copyright (c) 2008-2010 Sebastian Trueg <trueg@kde.org>
 
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiservice.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiservice.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiservice.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiservice.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -24,8 +24,8 @@
 #include "systray.h"
 #include "strigiserviceconfig.h"
 #include "statuswidget.h"
-#include "filesystemwatcher.h"
 #include "useractivitymonitor.h"
+#include "filewatchserviceinterface.h"
 
 #include <KDebug>
 #include <KDirNotify>
@@ -42,10 +42,6 @@
     : Service( parent, true ),
       m_indexManager( 0 )
 {
-    // only so ResourceManager won't open yet another connection to the nepomuk server
-    ResourceManager::instance()->setOverrideMainModel( mainModel() );
-
-
     // lower process priority - we do not want to spoil KDE usage
     // ==============================================================
     if ( !lowerPriority() )
@@ -64,18 +60,6 @@
         // monitor all kinds of events
         ( void )new EventMonitor( m_indexScheduler, this );
 
-        // monitor the file system
-        m_fsWatcher = new FileSystemWatcher( this );
-        m_fsWatcher->setWatchRecursively( true );
-        connect( m_fsWatcher, SIGNAL( dirty( QString ) ),
-                 this, SLOT( slotDirDirty( QString ) ) );
-
-        // monitor all KDE-ish changes for quick updates
-        connect( new org::kde::KDirNotify( QString(), QString(), QDBusConnection::sessionBus(), this ),
-                 SIGNAL( FilesAdded( QString ) ),
-                 this, SLOT( slotDirDirty( const QString& ) ) );
-
-
         // update the watches if the config changes
         connect( StrigiServiceConfig::self(), SIGNAL( configChanged() ),
                  this, SLOT( updateWatches() ) );
@@ -98,22 +82,13 @@
                  this, SIGNAL( statusStringChanged() ) );
         connect( m_indexScheduler, SIGNAL( indexingSuspended(bool) ),
                  this, SIGNAL( statusStringChanged() ) );
-        connect( m_fsWatcher, SIGNAL( statusChanged(FileSystemWatcher::Status) ),
-                 this, SIGNAL( statusStringChanged() ) );
 
         // setup the indexer to index at snail speed for the first two minutes
         // this is done for KDE startup - to not slow that down too much
         m_indexScheduler->setIndexingSpeed( IndexScheduler::SnailPace );
-        QTimer::singleShot( 2*60*1000, m_indexScheduler, SLOT( setReducedIndexingSpeed() ) );
-
-        // slow down on user activity (start also only after 2 minutes)
-        UserActivityMonitor* userActivityMonitor = new UserActivityMonitor( this );
-        connect( userActivityMonitor, SIGNAL( userActive( bool ) ),
-                 m_indexScheduler, SLOT( setReducedIndexingSpeed( bool ) ) );
-        QTimer::singleShot( 2*60*1000, userActivityMonitor, SLOT( start() ) );
 
-        // start watching the index folders
-        QTimer::singleShot( 2*60*1000, this, SLOT( updateWatches() ) );
+        // delayed init for the rest which uses IO and CPU
+        QTimer::singleShot( 2*60*1000, this, SLOT( finishInitialization() ) );
 
         // start the actual indexing
         m_indexScheduler->start();
@@ -139,22 +114,28 @@
 }
 
 
-void Nepomuk::StrigiService::updateWatches()
+void Nepomuk::StrigiService::finishInitialization()
 {
-    // the hard way since the KDirWatch API is too simple
-    QStringList folders = StrigiServiceConfig::self()->includeFolders();
-    if ( folders != m_fsWatcher->folders() ) {
-        m_fsWatcher->setFolders( StrigiServiceConfig::self()->includeFolders() );
-        m_fsWatcher->setInterval( 2*60 ); // check every 2 minutes
-        m_fsWatcher->start();
-    }
+    // slow down on user activity (start also only after 2 minutes)
+    UserActivityMonitor* userActivityMonitor = new UserActivityMonitor( this );
+    connect( userActivityMonitor, SIGNAL( userActive( bool ) ),
+             m_indexScheduler, SLOT( setReducedIndexingSpeed( bool ) ) );
+    userActivityMonitor->start();
+
+    // full speed until the user is active
+    m_indexScheduler->setIndexingSpeed( IndexScheduler::FullSpeed );
+
+    updateWatches();
 }
 
 
-void Nepomuk::StrigiService::slotDirDirty( const QString& path )
+void Nepomuk::StrigiService::updateWatches()
 {
-    if ( StrigiServiceConfig::self()->shouldFolderBeIndexed( path ) ) {
-        m_indexScheduler->updateDir( path );
+    org::kde::nepomuk::FileWatch filewatch( "org.kde.nepomuk.services.nepomukfilewatch",
+                                            "/nepomukfilewatch",
+                                            QDBusConnection::sessionBus() );
+    foreach( const QString& folder, StrigiServiceConfig::self()->includeFolders() ) {
+        filewatch.watchFolder( folder );
     }
 }
 
@@ -165,20 +146,24 @@
     bool suspended = m_indexScheduler->isSuspended();
     QString folder = m_indexScheduler->currentFolder();
 
-    if ( suspended )
+    if ( suspended ) {
         return i18nc( "@info:status", "File indexer is suspended" );
-    else if ( indexing )
-        return i18nc( "@info:status", "Strigi is currently indexing files in folder %1", folder );
-    else if ( m_fsWatcher->status() == FileSystemWatcher::Checking )
-        return i18nc( "@info:status", "Checking file system for new files" );
-    else
+    }
+    else if ( indexing ) {
+        if ( folder.isEmpty() )
+            return i18nc( "@info:status", "Strigi is currently indexing files" );
+        else
+            return i18nc( "@info:status", "Strigi is currently indexing files in folder %1", folder );
+    }
+    else {
         return i18nc( "@info:status", "File indexer is idle" );
+    }
 }
 
 
 bool Nepomuk::StrigiService::isIdle() const
 {
-    return ( !m_indexScheduler->isIndexing() && m_fsWatcher->status() == FileSystemWatcher::Idle );
+    return ( !m_indexScheduler->isIndexing() );
 }
 
 
@@ -186,11 +171,9 @@
 {
     if ( suspend ) {
         m_indexScheduler->suspend();
-        m_fsWatcher->suspend();
     }
     else {
         m_indexScheduler->resume();
-        m_fsWatcher->resume();
     }
 }
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiservice.h kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiservice.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiservice.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiservice.h	2010-03-29 10:35:15.000000000 +0200
@@ -26,7 +26,6 @@
 namespace Strigi {
     class IndexManager;
 }
-class FileSystemWatcher;
 
 namespace Nepomuk {
 
@@ -58,16 +57,14 @@
         bool isSuspended() const;
 
     private Q_SLOTS:
+        void finishInitialization();
         void updateWatches();
-        void slotDirDirty( const QString& );
 
     private:
         void updateStrigiConfig();
 
         Strigi::IndexManager* m_indexManager;
         IndexScheduler* m_indexScheduler;
-
-        FileSystemWatcher* m_fsWatcher;
     };
 }
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceadaptor.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceadaptor.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceadaptor.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceadaptor.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -72,6 +72,12 @@
 }
 
 
+QString Nepomuk::StrigiServiceAdaptor::currentFile()
+{
+    return m_service->indexScheduler()->currentFile();
+}
+
+
 void Nepomuk::StrigiServiceAdaptor::resume()
 {
     // handle method call org.kde.nepomuk.Strigi.resume
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceadaptor.h kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceadaptor.h
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceadaptor.h	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceadaptor.h	2010-03-29 10:35:15.000000000 +0200
@@ -43,6 +43,9 @@
                     "    <method name=\"currentFolder\">\n"
                     "      <arg direction=\"out\" type=\"s\"/>\n"
                     "    </method>\n"
+                    "    <method name=\"currentFile\">\n"
+                    "      <arg direction=\"out\" type=\"s\"/>\n"
+                    "    </method>\n"
                     "    <method name=\"suspend\"/>\n"
                     "    <method name=\"resume\"/>\n"
                     "    <method name=\"updateFolder\">\n"
@@ -86,6 +89,7 @@
         bool isIndexing();
         bool isSuspended();
         QString currentFolder();
+        QString currentFile();
         void resume();
         void suspend();
 
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceconfig.cpp kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceconfig.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/services/strigi/strigiserviceconfig.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/services/strigi/strigiserviceconfig.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -17,6 +17,7 @@
 */
 
 #include "strigiserviceconfig.h"
+#include "removablestorageserviceinterface.h"
 #include "strigiservicedefaults.h"
 
 #include <QtCore/QStringList>
@@ -240,6 +241,11 @@
 void Nepomuk::StrigiServiceConfig::buildFolderCache()
 {
     QStringList includeFoldersPlain = m_config.group( "General" ).readPathEntry( "folders", QStringList() << QDir::homePath() );
+    org::kde::nepomuk::RemovableStorage removableStorageService( "org.kde.nepomuk.services.removablestorageservice",
+                                                                 "/removablestorageservice",
+                                                                 QDBusConnection::sessionBus() );
+    if ( removableStorageService.isValid() )
+        includeFoldersPlain << removableStorageService.currentlyMountedAndIndexed();
     QStringList excludeFoldersPlain = m_config.group( "General" ).readPathEntry( "exclude folders", QStringList() );;
 
     m_folderCache.clear();
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/strigibackend/CMakeLists.txt kdebase-runtime-4.4.2//nepomuk/strigibackend/CMakeLists.txt
--- kdebase-runtime-4.4.2-old//nepomuk/strigibackend/CMakeLists.txt	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/strigibackend/CMakeLists.txt	2010-03-29 10:35:15.000000000 +0200
@@ -15,6 +15,11 @@
 )
 
 soprano_add_ontology(strigi_nepomuk_indexer_SRCS
+  ${SHAREDDESKTOPONTOLOGIES_ROOT_DIR}/nepomuk/nrl.trig
+  "NRL"
+  "Nepomuk::Vocabulary"
+  "trig")
+soprano_add_ontology(strigi_nepomuk_indexer_SRCS
   ${SHAREDDESKTOPONTOLOGIES_ROOT_DIR}/nie/nfo.trig
   "NFO"
   "Nepomuk::Vocabulary"
diff -Naur kdebase-runtime-4.4.2-old//nepomuk/strigibackend/nepomukindexwriter.cpp kdebase-runtime-4.4.2//nepomuk/strigibackend/nepomukindexwriter.cpp
--- kdebase-runtime-4.4.2-old//nepomuk/strigibackend/nepomukindexwriter.cpp	2010-03-29 10:34:53.000000000 +0200
+++ kdebase-runtime-4.4.2//nepomuk/strigibackend/nepomukindexwriter.cpp	2010-03-29 10:35:15.000000000 +0200
@@ -1,5 +1,5 @@
 /*
-  Copyright (C) 2007-2009 Sebastian Trueg <trueg@kde.org>
+  Copyright (C) 2007-2010 Sebastian Trueg <trueg@kde.org>
 
   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License as
@@ -21,6 +21,7 @@
 #include "util.h"
 #include "nfo.h"
 #include "nie.h"
+#include "nrl.h"
 
 #include <Soprano/Soprano>
 #include <Soprano/Vocabulary/RDF>
@@ -127,11 +128,14 @@
     class FileMetaData
     {
     public:
-        FileMetaData( const KUrl& url );
+        FileMetaData( const Strigi::AnalysisResult* idx );
 
         /// stores basic data including the nie:url and the nrl:GraphMetadata in \p model
         void storeBasicData( Soprano::Model* model );
 
+        /// map a blank node to a resource
+        QUrl mapNode( const std::string& s );
+
         /// The resource URI
         QUrl resourceUri;
 
@@ -147,8 +151,12 @@
         /// a buffer for all plain-text content generated by strigi
         std::string content;
 
+    private:
+        /// The Strigi result
+        const Strigi::AnalysisResult* m_analysisResult;
+
         /// mapping from blank nodes used in addTriplet to our urns
-        QMap<std::string, QUrl> blankNodeMap;
+        QMap<std::string, QUrl> m_blankNodeMap;
     };
 
     class RegisteredFieldData
@@ -170,10 +178,12 @@
         bool isRdfType;
     };
 
-    FileMetaData::FileMetaData( const KUrl& url )
-        : fileUrl( url ),
-          fileInfo( url.toLocalFile() )
+    FileMetaData::FileMetaData( const Strigi::AnalysisResult* idx )
+        : m_analysisResult( idx )
     {
+        fileUrl = createFileUrl( idx );
+        fileInfo = fileUrl.toLocalFile();
+
         // determine the resource URI by using Nepomuk::Resource's power
         // this will automatically find previous uses of the file in question
         // with backwards compatibility
@@ -183,6 +193,27 @@
         context = Nepomuk::ResourceManager::instance()->generateUniqueUri( "ctx" );
     }
 
+    QUrl FileMetaData::mapNode( const std::string& s )
+    {
+        if ( s[0] == ':' ) {
+            if( m_blankNodeMap.contains( s ) ) {
+                return m_blankNodeMap[s];
+            }
+            else {
+                QUrl urn = Nepomuk::ResourceManager::instance()->generateUniqueUri( QString() );
+                m_blankNodeMap.insert( s, urn );
+                return urn;
+            }
+        }
+        // special case to properly handle nie:isPartOf relations created for containers
+        else if ( s == m_analysisResult->path() ) {
+            return resourceUri;
+        }
+        else {
+            return QUrl::fromEncoded( s.c_str() );
+        }
+    }
+
     void FileMetaData::storeBasicData( Soprano::Model* model )
     {
         model->addStatement( resourceUri, Nepomuk::Vocabulary::NIE::url(), fileUrl, context );
@@ -206,7 +237,7 @@
         QUrl metaDataContext = Nepomuk::ResourceManager::instance()->generateUniqueUri( "ctx" );
         model->addStatement( context,
                              Vocabulary::RDF::type(),
-                             Vocabulary::NRL::InstanceBase(),
+                             Nepomuk::Vocabulary::NRL::DiscardableInstanceBase(),
                              metaDataContext );
         model->addStatement( context,
                              Vocabulary::NAO::created(),
@@ -218,10 +249,10 @@
                              metaDataContext );
         model->addStatement( metaDataContext,
                              Vocabulary::RDF::type(),
-                             Vocabulary::NRL::GraphMetadata(),
+                             Nepomuk::Vocabulary::NRL::GraphMetadata(),
                              metaDataContext );
         model->addStatement( metaDataContext,
-                             Vocabulary::NRL::coreGraphMetadataFor(),
+                             Nepomuk::Vocabulary::NRL::coreGraphMetadataFor(),
                              context,
                              metaDataContext );
     }
@@ -272,22 +303,6 @@
         }
     }
 
-    QUrl mapNode( FileMetaData* fmd, const std::string& s ) {
-        if ( s[0] == ':' ) {
-            if( fmd->blankNodeMap.contains( s ) ) {
-                return fmd->blankNodeMap[s];
-            }
-            else {
-                QUrl urn = Nepomuk::ResourceManager::instance()->generateUniqueUri( QString() );
-                fmd->blankNodeMap.insert( s, urn );
-                return urn;
-            }
-        }
-        else {
-            return QUrl::fromEncoded( s.c_str() );
-        }
-    }
-
     Soprano::Model* repository;
 
     //
@@ -355,7 +370,7 @@
     }
 
     // create the file data used during the analysis
-    FileMetaData* data = new FileMetaData( createFileUrl( idx ) );
+    FileMetaData* data = new FileMetaData( idx );
 
     // remove previously indexed data
     removeIndexedData( data->resourceUri, data->fileUrl );
@@ -449,7 +464,7 @@
             if ( value[0] == ':' ) {
                 Nepomuk::Types::Property property( rfd->property );
                 if ( property.range().isValid() ) {
-                    statement.setObject( d->mapNode( md, value ) );
+                    statement.setObject( md->mapNode( value ) );
                 }
             }
         }
@@ -545,11 +560,11 @@
 
     FileMetaData* md = fileDataForResult( d->currentResultStack.top() );
 
-    QUrl subject = d->mapNode( md, s );
-    Nepomuk::Types::Property property( d->mapNode( md, p ) );
+    QUrl subject = md->mapNode( s );
+    Nepomuk::Types::Property property( md->mapNode( p ) );
     Soprano::Node object;
     if ( property.range().isValid() )
-        object = d->mapNode( md, o );
+        object = md->mapNode( o );
     else
         object = Soprano::LiteralValue::fromString( QString::fromUtf8( o.c_str() ), property.literalRangeType().dataTypeUri() );
 
