From fae4a67a16b9907708c940c1ea72ec1a0eaf7bb9 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <cguthrie@mandriva.org>
Date: Wed, 12 May 2010 10:03:59 +0100
Subject: [PATCH 103/105] pulse: Some signal emission protection and some debug tweaks.

This commit ensures that the objectDescriptionChanged signal is only emitted
when PA is active. If we try to connect, succeed, but the backend ultimately
cannot support PA, we fail.

At present the GST backend operates a 'hit and hope' policy
with regards to the pulsesink. This needs to be tightened up.

Also added is extra debug info when the support is enabled
and a new debug method which is not called anywhere but can
be useful when debugging code.

CCBUG: 59052
---
 phonon/pulsesupport.cpp |   20 ++++++++++++++++++--
 phonon/pulsesupport.h   |    1 +
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/phonon/pulsesupport.cpp b/phonon/pulsesupport.cpp
index e85abd5..769d7e1 100644
--- a/phonon/pulsesupport.cpp
+++ b/phonon/pulsesupport.cpp
@@ -666,6 +666,19 @@ void PulseSupport::shutdown()
     }
 }
 
+void PulseSupport::debug()
+{
+#ifdef HAVE_PULSEAUDIO
+    logMessage(QString("Have we been initialised yet? %1").arg(s_instance ? "Yes" : "No"));
+    if (s_instance) {
+        logMessage(QString("Connected to PulseAudio? %1").arg(s_pulseActive ? "Yes" : "No"));
+        logMessage(QString("PulseAudio support 'Active'? %1").arg(s_instance->isActive() ? "Yes" : "No"));
+    }
+#else
+    logMessage("PulseAudio support not available.");
+#endif
+}
+
 PulseSupport::PulseSupport()
  : QObject(), mEnabled(false)
 {
@@ -780,7 +793,6 @@ void PulseSupport::connectToDaemon()
 bool PulseSupport::isActive()
 {
 #ifdef HAVE_PULSEAUDIO
-    //logMessage(QString("Enabled Breakdown: mEnabled: %1, s_pulseActive %2").arg(mEnabled).arg(s_pulseActive));
     return mEnabled && s_pulseActive;
 #else
     return false;
@@ -790,6 +802,9 @@ bool PulseSupport::isActive()
 void PulseSupport::enable(bool enabled)
 {
     mEnabled = enabled;
+#ifdef HAVE_PULSEAUDIO
+    logMessage(QString("Enabled Breakdown: mEnabled: %1, s_pulseActive %2").arg(mEnabled ? "Yes" : "No" ).arg(s_pulseActive ? "Yes" : "No"));
+#endif
 }
 
 QList<int> PulseSupport::objectDescriptionIndexes(ObjectDescriptionType type) const
@@ -997,7 +1012,8 @@ PulseStream *PulseSupport::registerCaptureStream(QString streamUuid, Category ca
 
 void PulseSupport::emitObjectDescriptionChanged(ObjectDescriptionType type)
 {
-    emit objectDescriptionChanged(type);
+    if (mEnabled)
+        emit objectDescriptionChanged(type);
 }
 
 bool PulseSupport::setOutputName(QString streamUuid, QString name) {
diff --git a/phonon/pulsesupport.h b/phonon/pulsesupport.h
index dc08330..d78ac64 100644
--- a/phonon/pulsesupport.h
+++ b/phonon/pulsesupport.h
@@ -66,6 +66,7 @@ namespace Phonon
             //    or phonon supports capture properly... which ever comes first.
             void clearStreamCache(QString streamUuid);
 
+            static void debug();
         public slots:
             void connectToDaemon();
 
-- 
1.7.1

