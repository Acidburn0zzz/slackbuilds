Patch to fix kio_imap4 crashes on Fedora 14:

==4767== Source and destination overlap in memcpy(0x4d25b18, 0x4d25b1a, 33)
==4767==    at 0x4A073BA: memcpy (mc_replace_strmem.c:602)
==4767==    by 0xB10A9AF: IMAP4Protocol::myRead(void*, long) (string3.h:52)
==4767==    by 0xB10AAE4: IMAP4Protocol::parseRead(QByteArray&, long, long) (imap4.cpp:680)
==4767==    by 0xB125535: imapParser::parseLiteral(parseString&, bool, bool) (imapparser.cpp:1897)
==4767==    by 0xB12D798: imapParser::parseBody(parseString&) (imapparser.cpp:1382)
==4767==    by 0xB12E1D1: imapParser::parseFetch(unsigned long, parseString&) (imapparser.cpp:1490)
==4767==    by 0xB12EF84: imapParser::parseUntagged(parseString&) (imapparser.cpp:495)
==4767==    by 0xB12F4FD: imapParser::parseLoop() (imapparser.cpp:1743)
==4767==    by 0xB11DFD7: IMAP4Protocol::get(KUrl const&) (imap4.cpp:338)
==4767==    by 0x3D60D928A4: KIO::SlaveBase::dispatch(int, QByteArray const&) (in /usr/lib64/libkio.so.5.5.0)
==4767==    by 0xB108843: IMAP4Protocol::dispatch(int, QByteArray const&) (imap4.cpp:1828)
==4767==    by 0x3D60D8CBC2: KIO::SlaveBase::dispatchLoop() (in /usr/lib64/libkio.so.5.5.0)


diff -u -r -p kdepimlibs-4.5.5/kioslave/imap4/imap4.cpp kdepimlibs.fixed/kioslave/imap4/imap4.cpp
--- kdepimlibs-4.5.5/kioslave/imap4/imap4.cpp	2009-10-26 10:14:11.000000000 +0100
+++ kdepimlibs.fixed/kioslave/imap4/imap4.cpp	2011-01-20 16:37:23.000000000 +0100
@@ -2577,7 +2577,7 @@ ssize_t IMAP4Protocol::myRead(void *data
     ssize_t copyLen = (len < readBufferLen) ? len : readBufferLen;
     memcpy(data, readBuffer, copyLen);
     readBufferLen -= copyLen;
-    if (readBufferLen) memcpy(readBuffer, &readBuffer[copyLen], readBufferLen);
+    if (readBufferLen) memmove(readBuffer, &readBuffer[copyLen], readBufferLen);
     return copyLen;
   }
   if (!isConnected()) return 0;
