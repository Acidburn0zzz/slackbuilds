commit c6f4e24eba420f0b956e4bcbb7def35481fb60f9
Author: Andrea Iacovitti <aiacovitti@libero.it>
Date:   Mon Apr 14 07:37:34 2014 +0200

    Do not install the same font face from different sources, stop at the
    first one that successfully loads into application font db.
    This also limit the number of page re-layout.

diff --git a/khtml/css/css_webfont.cpp b/khtml/css/css_webfont.cpp
index 1949efc..2b3cf31 100644
--- a/khtml/css/css_webfont.cpp
+++ b/khtml/css/css_webfont.cpp
@@ -86,8 +86,13 @@ bool CSSFontFaceSource::isValid() const
 
 void CSSFontFaceSource::notifyFinished(khtml::CachedObject */*finishedObj*/)
 {
+    if (m_face->installed()) {
+        // kWarning() << "Font already added from other src";
+        return;
+    }
+
     WTF::Vector<DOMString> names = m_face->familyNames();
-    unsigned size = names.size();
+    const unsigned size = names.size();
 
     m_id = QFontDatabase::addApplicationFontFromData( m_font->font() );
 
@@ -95,6 +100,9 @@ void CSSFontFaceSource::notifyFinished(khtml::CachedObject */*finishedObj*/)
         kDebug(6080) << "WARNING: downloaded web font" << (size?names[0].string():QString()) << "was rejected by the font subsystem.";
         return;
     }
+
+    m_face->setInstalled();
+
     QString nativeName = QFontDatabase::applicationFontFamilies( m_id )[0];
     for (unsigned i = 0; i < size; i++) {
         if (names[i].string() != nativeName) {
@@ -102,6 +110,7 @@ void CSSFontFaceSource::notifyFinished(khtml::CachedObject */*finishedObj*/)
         }
         khtml::Font::invalidateCachedFontFamily( names[i].string() );
     }
+
     if (m_face && m_refed) {
         m_face->fontLoaded(this);
     }
@@ -222,7 +231,6 @@ SimpleFontData* CSSFontFaceSource::getFontData(const FontDef& fontDescription, b
 CSSFontFace::~CSSFontFace()
 {
     deleteAllValues(m_sources);
-
 }
 
 bool CSSFontFace::isLoaded() const
@@ -247,6 +255,16 @@ bool CSSFontFace::isValid() const
     return false;
 }
 
+void CSSFontFace::setInstalled()
+{
+    m_installed = true;
+}
+
+bool CSSFontFace::installed() const
+{
+    return m_installed;
+}
+
 void CSSFontFace::refLoaders()
 {
     if (m_refed)
@@ -493,7 +511,7 @@ void CSSFontSelector::addFontFaceRule(const CSSFontFaceRuleImpl* fontFaceRule)
     // Each item in the src property's list is a single CSSFontFaceSource. Put them all into a CSSFontFace.
     CSSFontFace* fontFace = 0;
 
-    int srcLength = srcList->length();
+    const int srcLength = srcList->length();
 
     bool foundLocal = false;
 
diff --git a/khtml/css/css_webfont.h b/khtml/css/css_webfont.h
index ed1547a..7a3b389 100644
--- a/khtml/css/css_webfont.h
+++ b/khtml/css/css_webfont.h
@@ -157,7 +157,7 @@ private:
 class CSSFontFace : public khtml::Shared<CSSFontFace> {
 public:
     CSSFontFace(FontTraitsMask traitsMask, CSSFontSelector* fs)
-        : m_traitsMask(traitsMask), m_fontSelector(fs), m_refed(false)
+        : m_traitsMask(traitsMask), m_fontSelector(fs), m_refed(false), m_installed(false)
     {
     }
     ~CSSFontFace();
@@ -176,6 +176,9 @@ public:
     bool isLoaded() const;
     bool isValid() const;
 
+    void setInstalled();
+    bool installed() const;
+
     void addSource(CSSFontFaceSource*);
 
     void fontLoaded(CSSFontFaceSource*);
@@ -211,6 +214,7 @@ private:
     WTF::Vector<CSSFontFaceSource*> m_sources;
     CSSFontSelector* m_fontSelector;
     bool m_refed;
+    bool m_installed; // Successfully added into application font db
 };
 
 class CSSFontSelector : public khtml::Shared<CSSFontSelector> {
