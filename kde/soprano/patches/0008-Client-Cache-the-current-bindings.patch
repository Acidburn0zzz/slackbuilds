From f4b1d9413c415871bae256ebb1bc9dee891eee70 Mon Sep 17 00:00:00 2001
From: Vishesh Handa <me@vhanda.in>
Date: Mon, 27 Aug 2012 15:45:37 +0530
Subject: [PATCH 08/10] Client: Cache the current bindings

Cache the current bindings when running the next() in a local variable.
This way we avoid asking for it during each operator[] and current.

Results in a MASSIVE performance boost - 6 secs vs 1 sec on a large
query which had a lot of bindings.

REVIEW: 106231
---
 client/clientqueryresultiteratorbackend.cpp | 15 ++++++++-------
 client/clientqueryresultiteratorbackend.h   |  1 +
 2 files changed, 9 insertions(+), 7 deletions(-)

diff --git a/client/clientqueryresultiteratorbackend.cpp b/client/clientqueryresultiteratorbackend.cpp
index babbdcc..f3c9fda 100644
--- a/client/clientqueryresultiteratorbackend.cpp
+++ b/client/clientqueryresultiteratorbackend.cpp
@@ -45,6 +45,13 @@ bool Soprano::Client::ClientQueryResultIteratorBackend::next()
     if ( m_model ) {
         bool r = m_model->client()->iteratorNext( m_iteratorId );
         setError( m_model->client()->lastError() );
+        if( r ) {
+            m_currentBinding = m_model->client()->queryIteratorCurrent( m_iteratorId );
+            setError( m_model->client()->lastError() );
+        }
+        else {
+            m_currentBinding = Soprano::BindingSet();
+        }
         return r;
     }
     else {
@@ -57,9 +64,7 @@ bool Soprano::Client::ClientQueryResultIteratorBackend::next()
 Soprano::BindingSet Soprano::Client::ClientQueryResultIteratorBackend::current() const
 {
     if ( m_model ) {
-        BindingSet s = m_model->client()->queryIteratorCurrent( m_iteratorId );
-        setError( m_model->client()->lastError() );
-        return s;
+        return m_currentBinding;
     }
     else {
         setError( "Connection to server closed." );
@@ -96,28 +101,24 @@ Soprano::Statement Soprano::Client::ClientQueryResultIteratorBackend::currentSta
 
 Soprano::Node Soprano::Client::ClientQueryResultIteratorBackend::binding( const QString &name ) const
 {
-    // FIXME: use an extra method for performance
     return current()[name];
 }
 
 
 Soprano::Node Soprano::Client::ClientQueryResultIteratorBackend::binding( int offset ) const
 {
-    // FIXME: use an extra method for performance
     return current()[offset];
 }
 
 
 int Soprano::Client::ClientQueryResultIteratorBackend::bindingCount() const
 {
-    // FIXME: use an extra method for performance
     return current().count();
 }
 
 
 QStringList Soprano::Client::ClientQueryResultIteratorBackend::bindingNames() const
 {
-    // FIXME: use an extra method for performance
     return current().bindingNames();
 }
 
diff --git a/client/clientqueryresultiteratorbackend.h b/client/clientqueryresultiteratorbackend.h
index 2d10756..7e96f3b 100644
--- a/client/clientqueryresultiteratorbackend.h
+++ b/client/clientqueryresultiteratorbackend.h
@@ -55,6 +55,7 @@ namespace Soprano
 
         private:
             int m_iteratorId;
+            BindingSet m_currentBinding;
             QPointer<ClientModel> m_model;
         };
     }
-- 
1.8.0.2

