From 439ae852647ca56f961eefcad6354c7c319eaeb0 Mon Sep 17 00:00:00 2001
From: David Faure <faure@kde.org>
Date: Fri, 6 Jul 2012 20:56:28 +0200
Subject: [PATCH 04/10] Check return values from write calls.

Cherry-picked from adf37c2
Cherry-picked from 9dc864d
---
 client/clientconnection.cpp | 202 ++++++++++++++++++++++++++++++++------------
 client/socketstream.cpp     |  14 ++-
 2 files changed, 152 insertions(+), 64 deletions(-)

diff --git a/client/clientconnection.cpp b/client/clientconnection.cpp
index 74da78c..febd008 100644
--- a/client/clientconnection.cpp
+++ b/client/clientconnection.cpp
@@ -68,6 +68,7 @@ Soprano::Socket *Soprano::Client::ClientConnection::getSocket()
 
 int Soprano::Client::ClientConnection::createModel( const QString& name, const QList<BackendSetting>& settings )
 {
+    Q_UNUSED( settings );
     //qDebug() << this << QTime::currentTime().toString( "hh:mm:ss.zzz" ) << QThread::currentThreadId() << "(ClientConnection::createModel)";
 
     Socket* socket = getSocket();
@@ -75,9 +76,12 @@ int Soprano::Client::ClientConnection::createModel( const QString& name, const Q
         return 0;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_CREATE_MODEL );
-    stream.writeString( name );
-    Q_UNUSED( settings );
+    if (!stream.writeUnsignedInt16(COMMAND_CREATE_MODEL) ||
+        !stream.writeString(name)) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -107,8 +111,12 @@ void Soprano::Client::ClientConnection::removeModel( const QString& name )
         return;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_REMOVE_MODEL );
-    stream.writeString( name );
+    if (!stream.writeUnsignedInt16(COMMAND_REMOVE_MODEL) ||
+        !stream.writeString(name)) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -135,7 +143,11 @@ Soprano::BackendFeatures Soprano::Client::ClientConnection::supportedFeatures()
         return BackendFeatureNone;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_SUPPORTED_FEATURES );
+    if (!stream.writeUnsignedInt16(COMMAND_SUPPORTED_FEATURES)) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -165,9 +177,13 @@ Soprano::Error::ErrorCode Soprano::Client::ClientConnection::addStatement( int m
         return Error::convertErrorCode( lastError().code() );
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_ADD_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( statement );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_ADD_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement(statement)) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Error::ErrorUnknown;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -196,8 +212,12 @@ int Soprano::Client::ClientConnection::listContexts( int modelId )
         return 0;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_LIST_CONTEXTS );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_LIST_CONTEXTS ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -226,11 +246,15 @@ int Soprano::Client::ClientConnection::executeQuery( int modelId, const QString
         return 0;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_QUERY );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeString( query );
-    stream.writeUnsignedInt16( ( quint16 )type );
-    stream.writeString( userQueryLanguage );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_QUERY ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeString( query ) ||
+        !stream.writeUnsignedInt16( ( quint16 )type ) ||
+        !stream.writeString( userQueryLanguage ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -259,9 +283,13 @@ int Soprano::Client::ClientConnection::listStatements( int modelId, const Statem
         return 0;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_LIST_STATEMENTS );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( partial );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_LIST_STATEMENTS ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement( partial ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -290,9 +318,13 @@ Soprano::Error::ErrorCode Soprano::Client::ClientConnection::removeAllStatements
         return Error::convertErrorCode( lastError().code() );
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_REMOVE_ALL_STATEMENTS );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( statement );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_REMOVE_ALL_STATEMENTS ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement( statement ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Error::ErrorUnknown;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -321,9 +353,13 @@ Soprano::Error::ErrorCode Soprano::Client::ClientConnection::removeStatement( in
         return Error::convertErrorCode( lastError().code() );
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_REMOVE_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( statement );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_REMOVE_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement( statement ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Error::ErrorUnknown;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -352,8 +388,12 @@ int Soprano::Client::ClientConnection::statementCount( int modelId )
         return -1;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_STATEMENT_COUNT );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_STATEMENT_COUNT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return -1;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -382,9 +422,13 @@ bool Soprano::Client::ClientConnection::containsStatement( int modelId, const St
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_CONTAINS_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( statement );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_CONTAINS_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement( statement ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -413,9 +457,13 @@ bool Soprano::Client::ClientConnection::containsAnyStatement( int modelId, const
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_CONTAINS_ANY_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
-    stream.writeStatement( statement );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_CONTAINS_ANY_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ||
+        !stream.writeStatement( statement ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -444,8 +492,12 @@ bool Soprano::Client::ClientConnection::isEmpty( int modelId )
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_IS_EMPTY );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_IS_EMPTY ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId )) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -474,8 +526,12 @@ Soprano::Node Soprano::Client::ClientConnection::createBlankNode( int modelId )
         return Node();
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_MODEL_CREATE_BLANK_NODE );
-    stream.writeUnsignedInt32( ( quint32 )modelId );
+    if (!stream.writeUnsignedInt16( COMMAND_MODEL_CREATE_BLANK_NODE ) ||
+        !stream.writeUnsignedInt32( ( quint32 )modelId ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Node();
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -504,8 +560,12 @@ bool Soprano::Client::ClientConnection::iteratorNext( int id )
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_NEXT );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_NEXT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -534,8 +594,12 @@ Soprano::Node Soprano::Client::ClientConnection::nodeIteratorCurrent( int id )
         return Node();
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_NODE );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_NODE ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Node();
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -564,8 +628,12 @@ Soprano::Statement Soprano::Client::ClientConnection::statementIteratorCurrent(
         return Statement();
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Statement();
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -594,8 +662,12 @@ Soprano::BindingSet Soprano::Client::ClientConnection::queryIteratorCurrent( int
         return BindingSet();
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_BINDINGSET );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_BINDINGSET ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return BindingSet();
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -624,8 +696,12 @@ Soprano::Statement Soprano::Client::ClientConnection::queryIteratorCurrentStatem
         return Statement();
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_STATEMENT );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_CURRENT_STATEMENT ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return Statement();
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -653,8 +729,12 @@ int Soprano::Client::ClientConnection::queryIteratorType( int id )
         return 0;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_QUERY_TYPE );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_QUERY_TYPE ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return 0;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -683,8 +763,12 @@ bool Soprano::Client::ClientConnection::queryIteratorBoolValue( int id )
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_QUERY_BOOL_VALUE );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_QUERY_BOOL_VALUE ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -712,8 +796,12 @@ void Soprano::Client::ClientConnection::iteratorClose( int id )
         return;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_ITERATOR_CLOSE );
-    stream.writeUnsignedInt32( ( quint32 )id );
+    if (!stream.writeUnsignedInt16( COMMAND_ITERATOR_CLOSE ) ||
+        !stream.writeUnsignedInt32( ( quint32 )id ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return;
+    }
 
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
         setError( "Command timed out.", Soprano::Error::ErrorTimeout );
@@ -737,8 +825,12 @@ bool Soprano::Client::ClientConnection::checkProtocolVersion()
         return false;
     SocketStream stream( socket );
 
-    stream.writeUnsignedInt16( COMMAND_SUPPORTS_PROTOCOL_VERSION );
-    stream.writeUnsignedInt32( ( quint32 )PROTOCOL_VERSION );
+    if (!stream.writeUnsignedInt16( COMMAND_SUPPORTS_PROTOCOL_VERSION ) ||
+        !stream.writeUnsignedInt32( ( quint32 )PROTOCOL_VERSION ) ) {
+        setError( "Write error", Soprano::Error::ErrorTimeout );
+        socket->close();
+        return false;
+    }
 
     // wait for a reply, but not forever, in case we are connected to something unknown
     if ( !socket->waitForReadyRead(s_defaultTimeout) ) {
diff --git a/client/socketstream.cpp b/client/socketstream.cpp
index 208efaf..7178580 100644
--- a/client/socketstream.cpp
+++ b/client/socketstream.cpp
@@ -252,15 +252,11 @@ bool Soprano::SocketStream::read( char* data, qint64 size )
         }
         else if ( r == 0 && size > 0 ) {
             // If virtuoso is killed, read returns 0, but select returns ok. This means end of file.
-            // ### TODO: check with Thiago
-            //if ( !m_device->waitForReadyRead( 30000 ) ) {
-            qWarning() << "GOT 0 BYTES -> TIMEOUT";
-                setError( Error::Error( QString( "Timeout when reading after %1 of %2 bytes (%3)." )
-                                        .arg( cnt )
-                                        .arg( size )
-                                        .arg( m_device->lastError().message() ) ) );
-                return false;
-            //}
+            setError( Error::Error( QString( "Timeout when reading after %1 of %2 bytes (%3)." )
+                                    .arg( cnt )
+                                    .arg( size )
+                                    .arg( m_device->lastError().message() ) ) );
+            return false;
         }
 
         cnt += r;
-- 
1.8.0.2

