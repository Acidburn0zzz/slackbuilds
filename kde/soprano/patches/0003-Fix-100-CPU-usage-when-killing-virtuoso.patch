From 418ee0f194564e8734d0f06656316bbbd9623685 Mon Sep 17 00:00:00 2001
From: David Faure <faure@kde.org>
Date: Fri, 6 Jul 2012 21:06:45 +0200
Subject: [PATCH 03/10] Fix 100% CPU usage when killing virtuoso.

read() returned 0 bytes, select() returned "ready", GOTO 10.
Apparently 0 bytes means "end of file", so error immediately when it happens.

Cherry-picked from 92adb74
---
 client/socketstream.cpp | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/client/socketstream.cpp b/client/socketstream.cpp
index 42645ad..208efaf 100644
--- a/client/socketstream.cpp
+++ b/client/socketstream.cpp
@@ -28,7 +28,7 @@
 #include "literalvalue.h"
 #include "locator.h"
 #include "languagetag.h"
-
+#include <qdebug.h>
 
 Soprano::SocketStream::SocketStream( Soprano::Socket* dev )
     : m_device( dev )
@@ -251,13 +251,16 @@ bool Soprano::SocketStream::read( char* data, qint64 size )
             return false;
         }
         else if ( r == 0 && size > 0 ) {
-            if ( !m_device->waitForReadyRead( 30000 ) ) {
+            // If virtuoso is killed, read returns 0, but select returns ok. This means end of file.
+            // ### TODO: check with Thiago
+            //if ( !m_device->waitForReadyRead( 30000 ) ) {
+            qWarning() << "GOT 0 BYTES -> TIMEOUT";
                 setError( Error::Error( QString( "Timeout when reading after %1 of %2 bytes (%3)." )
                                         .arg( cnt )
                                         .arg( size )
                                         .arg( m_device->lastError().message() ) ) );
                 return false;
-            }
+            //}
         }
 
         cnt += r;
-- 
1.8.0.2

