--- branches/KDE/4.5/kdegraphics/libs/libkipi/libkipi/pluginloader.cpp	2010/06/27 18:59:06	1143427
+++ branches/KDE/4.5/kdegraphics/libs/libkipi/libkipi/pluginloader.cpp	2010/11/09 08:30:14	1194513
@@ -168,9 +168,16 @@
 QIcon PluginLoader::Info::icon() const
 {
     if(d->m_service->icon().isEmpty() && d->m_plugin)
-        return QIcon(d->m_plugin->actions()[0]->icon());
+    {
+        if (d->m_plugin->actions()[0])
+            return d->m_plugin->actions()[0]->icon();
+        else
+            return QIcon();
+    }
     else
+    {
         return KIcon(d->m_service->icon());
+    }
 }
 
 Plugin* PluginLoader::Info::plugin() const
@@ -178,7 +185,7 @@
     if ( !d->m_plugin && shouldLoad() )
     {
         QString error;
-        Plugin *plugin = d->m_service->createInstance<Plugin>(PluginLoader::instance()->interface(), QVariantList(), &error);
+        Plugin* plugin = d->m_service->createInstance<Plugin>(PluginLoader::instance()->interface(), QVariantList(), &error);
         if (plugin)
         {
             kDebug( 51001 ) << "KIPI::PluginLoader: Loaded plugin " << plugin->objectName() << endl;
@@ -191,25 +198,25 @@
                               << " with error: "
                               << error;
         }
-        d->m_plugin=plugin;
-        
+        d->m_plugin = plugin;
+
         if ( d->m_plugin ) // Do not emit if we had trouble loading the plugin.
             emit PluginLoader::instance()->plug( const_cast<Info*>(this) );
     }
-    
+
     return d->m_plugin;
 }
 
 void PluginLoader::Info::reload()
 {
     delete d->m_plugin;
-    d->m_plugin=0;
+    d->m_plugin = 0;
 }
 
 void PluginLoader::Info::setPlugin(Plugin* plugin)
 {
     delete d->m_plugin;
-    d->m_plugin=plugin;
+    d->m_plugin = plugin;
 }
 
 bool PluginLoader::Info::shouldLoad() const
@@ -219,7 +226,7 @@
 
 void PluginLoader::Info::setShouldLoad(bool value)
 {
-    d->m_shouldLoad=value;
+    d->m_shouldLoad = value;
 }
 
 //---------------------------------------------------------------------
