diff -up kde-workspace-4.10.90/startkde.cmake.redhat_startkde kde-workspace-4.10.90/startkde.cmake
--- kde-workspace-4.10.90/startkde.cmake.redhat_startkde	2013-06-26 15:16:41.000000000 -0500
+++ kde-workspace-4.10.90/startkde.cmake	2013-06-27 16:24:47.395973982 -0500
@@ -25,12 +25,20 @@ else
   qdbus=qdbus
 fi
 
+# See http://bugzilla.redhat.com/537609 , a naive attempt to drop dep 
+# on xmessage and allow alternatives like zenity.  
+message() {
+  xmessage -geometry 500x100 "$1" > /dev/null 2>/dev/null || \
+    zenity --info --text="$1" > /dev/null 2>/dev/null ||:
+  return $?
+}
+
 # Check if a KDE session already is running and whether it's possible to connect to X
 kcheckrunning
 kcheckrunning_result=$?
 if test $kcheckrunning_result -eq 0 ; then
 	echo "KDE seems to be already running on this display."
-	xmessage -geometry 500x100 "KDE seems to be already running on this display." > /dev/null 2>/dev/null
+        message "KDE seems to be already running on this display." > /dev/null 2>/dev/null
 	exit 1
 elif test $kcheckrunning_result -eq 2 ; then
 	echo "\$DISPLAY is not set or cannot connect to the X server."
@@ -74,11 +82,19 @@ krandrrc [Screen2]
 krandrrc [Screen3]
 kcmfonts General forceFontDPI 0
 kdeglobals Locale Language '' # trigger requesting languages from KLocale
+kdeglobals Locale Country ''
 EOF
+# read the default KSplash theme to use out of kde-settings
+if [ -e /usr/share/kde-settings/kde-profile/default/share/config/ksplashrc ]
+  then eval `grep '^Theme=' /usr/share/kde-settings/kde-profile/default/share/config/ksplashrc`
+       if [ -n "$Theme" ]
+         then sed -i -e "s/Default/$Theme/g" $kdehome/share/config/startupconfigkeys
+       fi
+fi
 kstartupconfig4
 returncode=$?
 if test $returncode -ne 0; then
-    xmessage -geometry 500x100 "kstartupconfig4 does not exist or fails. The error code is $returncode. Check your installation."
+    message "kstartupconfig4 does not exist or fails. The error code is $returncode. Check your installation."
     exit 1
 fi
 [ -r $kdehome/share/config/startupconfig ] && . $kdehome/share/config/startupconfig
@@ -101,7 +117,7 @@ if test -n "$kcminputrc_mouse_cursorthem
     fi
 fi
 
-. krandrstartup
+KRANDRSTARTUP=`which krandrstartup 2>/dev/null` && . $KRANDRSTARTUP
 
 if test "$kcmfonts_general_forcefontdpi" -ne 0; then
     xrdb -quiet -merge -nocpp <<EOF
@@ -152,8 +168,9 @@ fi
 # better use the Autostart folder.
 
 libpath=`kde4-config --path lib | tr : '\n'`
+envpath=/etc/kde/env/
 
-for prefix in `echo "$libpath" | sed -n -e 's,/lib[^/]*/,/env/,p'`; do
+for prefix in `echo "$libpath" | sed -n -e 's,/lib[^/]*/,/env/,p'` $envpath ; do
   for file in "$prefix"*.sh; do
     test -r "$file" && . "$file"
   done
@@ -161,49 +178,12 @@ done
 
 # Set the path for Qt plugins provided by KDE
 QT_PLUGIN_PATH=${QT_PLUGIN_PATH+$QT_PLUGIN_PATH:}`kde4-config --path qtplugins`
-export QT_PLUGIN_PATH
-
-# Activate the kde font directories.
-#
-# There are 4 directories that may be used for supplying fonts for KDE.
-#
-# There are two system directories. These belong to the administrator.
-# There are two user directories, where the user may add her own fonts.
-#
-# The 'override' versions are for fonts that should come first in the list,
-# i.e. if you have a font in your 'override' directory, it will be used in
-# preference to any other.
-#
-# The preference order looks like this:
-# user override, system override, X, user, system
-#
-# Where X is the original font database that was set up before this script
-# runs.
 
-usr_odir=$HOME/.fonts/kde-override
-usr_fdir=$HOME/.fonts
-
-if test -n "$KDEDIRS"; then
-  kdedirs_first=`echo "$KDEDIRS"|sed -e 's/:.*//'`
-  sys_odir=$kdedirs_first/share/fonts/override
-  sys_fdir=$kdedirs_first/share/fonts
-else
-  sys_odir=$KDEDIR/share/fonts/override
-  sys_fdir=$KDEDIR/share/fonts
+# hack in multilib support
+if ! echo ${QT_PLUGIN_PATH} | /bin/grep -q /usr/lib/kde4/plugins ; then
+  QT_PLUGIN_PATH=${QT_PLUGIN_PATH}:/usr/lib/kde4/plugins
 fi
-
-# We run mkfontdir on the user's font dirs (if we have permission) to pick
-# up any new fonts they may have installed. If mkfontdir fails, we still
-# add the user's dirs to the font path, as they might simply have been made
-# read-only by the administrator, for whatever reason.
-
-test -d "$sys_odir" && xset +fp "$sys_odir"
-test -d "$usr_odir" && (mkfontdir "$usr_odir" ; xset +fp "$usr_odir")
-test -d "$usr_fdir" && (mkfontdir "$usr_fdir" ; xset fp+ "$usr_fdir")
-test -d "$sys_fdir" && xset fp+ "$sys_fdir"
-
-# Ask X11 to rebuild its font list.
-xset fp rehash
+export QT_PLUGIN_PATH
 
 # Set a left cursor instead of the standard X11 "X" cursor, since I've heard
 # from some users that they're confused and don't know what to do. This is
@@ -243,7 +223,7 @@ for resource in tmp cache socket; do
     else
         echo 'startkde: Call to lnusertemp failed (temporary directories full?). Check your installation.'  1>&2
         test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-        xmessage -geometry 600x100 "Call to lnusertemp failed (temporary directories full?). Check your installation."
+        message "Call to lnusertemp failed (temporary directories full?). Check your installation."
         exit 1
     fi
 done
@@ -274,7 +254,7 @@ if $qdbus >/dev/null 2>/dev/null; then
 else
     echo 'startkde: Could not start D-Bus. Can you call qdbus?'  1>&2
     test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-    xmessage -geometry 500x100 "Could not start D-Bus. Can you call qdbus?"
+    message "Could not start D-Bus. Can you call qdbus?"
     exit 1
 fi
 
@@ -315,14 +295,12 @@ export KDE_SESSION_UID
 XDG_CURRENT_DESKTOP=KDE
 export XDG_CURRENT_DESKTOP
 
-# We set LD_BIND_NOW to increase the efficiency of kdeinit.
-# kdeinit unsets this variable before loading applications.
-LD_BIND_NOW=true @KDE4_LIBEXEC_INSTALL_DIR@/start_kdeinit_wrapper +kcminit_startup
+@KDE4_LIBEXEC_INSTALL_DIR@/start_kdeinit_wrapper +kcminit_startup
 if test $? -ne 0; then
   # Startup error
   echo 'startkde: Could not start kdeinit4. Check your installation.'  1>&2
   test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-  xmessage -geometry 500x100 "Could not start kdeinit4. Check your installation."
+  message "Could not start kdeinit4. Check your installation."
   exit 1
 fi
 
@@ -346,7 +324,7 @@ if test $? -eq 255; then
   # Startup error
   echo 'startkde: Could not start ksmserver. Check your installation.'  1>&2
   test -n "$ksplash_pid" && kill "$ksplash_pid" 2>/dev/null
-  xmessage -geometry 500x100 "Could not start ksmserver. Check your installation."
+  message "Could not start ksmserver. Check your installation."
 fi
 
 wait_drkonqi=`kreadconfig --file startkderc --group WaitForDrKonqi --key Enabled --default true`
@@ -381,7 +359,8 @@ kde3 dcopserver_shutdown --wait 2>/dev/n
 echo 'startkde: Running shutdown scripts...'  1>&2
 
 # Run scripts found in $KDEDIRS/shutdown
-for prefix in `echo "$libpath" | sed -n -e 's,/lib[^/]*/,/shutdown/,p'`; do
+shutdownpath=/etc/kde/shutdown/
+for prefix in `echo "$libpath" | sed -n -e 's,/lib[^/]*/,/shutdown/,p'` $shutdownpath; do
   for file in `ls "$prefix" 2> /dev/null | egrep -v '(~|\.bak)$'`; do
     test -x "$prefix$file" && "$prefix$file"
   done
