commit 4f4290491b517ce0288aa9ea07c5885c985f6093
Author: Eike Hein <hein@kde.org>
Date:   Wed Aug 14 18:32:24 2013 +0200

    Fix rare race condition crash.
    
    Plus surrounding code cleanup.
    
    BUG:323496

diff --git a/libs/taskmanager/tasksmodel.cpp b/libs/taskmanager/tasksmodel.cpp
index 472cd76..d38cbfa 100644
--- a/libs/taskmanager/tasksmodel.cpp
+++ b/libs/taskmanager/tasksmodel.cpp
@@ -193,24 +193,26 @@ QVariant TasksModel::data(const QModelIndex &index, int role) const
     return QVariant();
 }
 
-int TasksModel::activeTaskId() const
+int TasksModel::activeTaskId(TaskGroup *group) const
 {
-    foreach (AbstractGroupableItem *item, d->rootGroup->members()) {
-        if (item->itemType() == TaskItemType && static_cast<TaskItem *>(item)->task()->isActive()) {
-            return item->id();
-        } else {
-            if (item->itemType() == GroupItemType)
-            {
-                foreach(AbstractGroupableItem *subItem, static_cast<TaskGroup *>(item)->members()) {
-                    if (subItem->itemType() == TaskItemType && static_cast<TaskItem *>(subItem)->task()->isActive()) {
-                        return subItem->id();
-                    }
-                }
+    group = group ? group : d->rootGroup;
+    int id = -1;
+
+    foreach (AbstractGroupableItem *item, group->members()) {
+        if (item->itemType() == TaskItemType) {
+            TaskItem *taskItem = static_cast<TaskItem *>(item);
+
+            if (taskItem && taskItem->task() && taskItem->task()->isActive()) {
+                id = item->id();
+
+                break;
             }
+        } else if (item->itemType() == GroupItemType) {
+            id = activeTaskId(static_cast<TaskGroup *>(item));
         }
     }
 
-    return -1;
+    return id;
 }
 
 QVariant TasksModel::taskIdList(const QModelIndex& parent, bool recursive) const
diff --git a/libs/taskmanager/tasksmodel.h b/libs/taskmanager/tasksmodel.h
index 9c1b3f7..92f9d2e 100644
--- a/libs/taskmanager/tasksmodel.h
+++ b/libs/taskmanager/tasksmodel.h
@@ -33,6 +33,7 @@ namespace TaskManager
 {
 
 class GroupManager;
+class TaskGroup;
 class TasksModelPrivate;
 
 class TASKMANAGER_EXPORT TasksModel : public QAbstractItemModel
@@ -79,7 +80,7 @@ public:
     Q_INVOKABLE int rowCount(const QModelIndex &parent = QModelIndex()) const;
     Q_INVOKABLE int launcherCount() const;
 
-    Q_INVOKABLE int activeTaskId() const;
+    Q_INVOKABLE int activeTaskId(TaskGroup *group = 0) const;
     Q_INVOKABLE QVariant taskIdList(const QModelIndex &parent = QModelIndex(), bool recursive = true) const;
 
 signals:
