commit 7aab4daae187ed4c101ce280728487effd58f348
Author: Weng Xuetian <wengxt@gmail.com>
Date:   Sun May 5 20:05:40 2013 -0400

    fix some undefined data in notication plasmoid's progress
    
    Here we use a function to make extract code simpler, but also
    make sure the real property is in the first level to avoid
    property binding break.
    
    REVIEW: 110065

diff --git a/plasma/generic/applets/notifications/contents/ui/JobDelegate.qml b/plasma/generic/applets/notifications/contents/ui/JobDelegate.qml
index cf60946..97baba5 100644
--- a/plasma/generic/applets/notifications/contents/ui/JobDelegate.qml
+++ b/plasma/generic/applets/notifications/contents/ui/JobDelegate.qml
@@ -30,11 +30,23 @@ PlasmaComponents.ListItem {
     property int toolIconSize: theme.smallMediumIconSize
     property int layoutSpacing: 4
 
+    function getData(data, name, defaultValue) {
+        return data[modelData] ? (data[modelData][name] ? data[modelData][name] : defaultValue) : defaultValue;
+    }
+
+    property string labelName0: getData(jobsSource.data, "labelName0", '')
+    property string label0: getData(jobsSource.data, "label0", '')
+    property string labelName1: getData(jobsSource.data, "labelName1", '')
+    property string label1: getData(jobsSource.data, "label1", '')
+    property string state: getData(jobsSource.data, "state", '')
+    property int eta: getData(jobsSource.data, "eta", 0)
+    property string speed: getData(jobsSource.data, "speed", '')
+
     Column {
         spacing: notificationItem.layoutSpacing
         width: parent.width
         PlasmaComponents.Label {
-            text: jobsSource.data[modelData]["infoMessage"]
+            text: getData(jobsSource.data, "infoMessage", '')
             font.bold: true
             color: theme.textColor
             anchors.horizontalCenter: parent.horizontalCenter
@@ -51,41 +63,45 @@ PlasmaComponents.ListItem {
 
             PlasmaComponents.Label {
                 id: labelName0Text
-                text: i18n("%1:", jobsSource.data[modelData]["labelName0"])
+                text: labelName0 ? i18n("%1:", labelName0) : ''
                 width: Math.max(paintedWidth, labelName1Text.paintedWidth)
                 horizontalAlignment: Text.AlignRight
+                visible: labelName0 != ''
             }
             PlasmaComponents.Label {
-                id: label0
-                text: jobsSource.data[modelData]["label0"]
+                id: label0Text
+                text: label0 ? label0 : ''
                 width: parent.width - labelName0Text.width
                 elide: Text.ElideMiddle
+                visible: label0 != ''
 
                 PlasmaCore.ToolTip {
-                    target: label0
-                    subText: label0.truncated ? jobsSource.data[modelData]["label0"] : ""
+                    target: label0Text
+                    subText: label0Text.truncated ? label0 : ""
                 }
 
             }
             PlasmaComponents.Label {
                 id: labelName1Text
-                text: i18n("%1:", jobsSource.data[modelData]["labelName1"])
+                text: labelName1 ? i18n("%1:", labelName1) : ''
                 width: Math.max(paintedWidth, labelName0Text.paintedWidth)
                 horizontalAlignment: Text.AlignRight
+                visible: labelName1 != ''
             }
             PlasmaComponents.Label {
-                id: label1
-                text: jobsSource.data[modelData]["label1"]
+                id: label1Text
+                text: label1 ? label1 : ''
                 width: parent.width - labelName0Text.width
                 elide: Text.ElideMiddle
+                visible: label1 != ''
 
                 PlasmaCore.ToolTip {
-                    target: label1
-                    subText: label1.truncated ? jobsSource.data[modelData]["label1"] : ""
+                    target: label1Text
+                    subText: label1Text.truncated ? label1 : ""
                 }
             }
             QIconItem {
-                icon: jobsSource.data[modelData]["appIconName"]
+                icon: getData(jobsSource.data, "appIconName", '')
                 width: notificationItem.toolIconSize
                 height: width
                 anchors {
@@ -105,7 +121,7 @@ PlasmaComponents.ListItem {
                     minimumValue: 0
                     maximumValue: 100
                     //percentage doesn't always exist, so doesn't get in the model
-                    value: jobsSource.data[modelData]["percentage"] ? jobsSource.data[modelData]["percentage"] : 0
+                    value: getData(jobsSource.data, "percentage", 0)
 
                     anchors {
                         left: parent.left
@@ -122,11 +138,11 @@ PlasmaComponents.ListItem {
                         id: pauseButton
                         width: notificationItem.toolIconSize
                         height: width
-                        iconSource: jobsSource.data[modelData]["state"] == "suspended" ? "media-playback-start" : "media-playback-pause"
+                        iconSource: state == "suspended" ? "media-playback-start" : "media-playback-pause"
                         flat: false
                         onClicked: {
                             var operationName = "suspend"
-                            if (jobsSource.data[modelData]["state"] == "suspended") {
+                            if (state == "suspended") {
                                 operationName = "resume"
                             }
                             var service = jobsSource.serviceForSource(modelData)
@@ -163,7 +179,7 @@ PlasmaComponents.ListItem {
             }
             PlasmaComponents.Label {
                 id: speedLabel
-                text: jobsSource.data[modelData]["eta"] > 0 ? i18nc("Speed and estimated time to completition", "%1 (%2 remaining)", jobsSource.data[modelData]["speed"], locale.prettyFormatDuration(jobsSource.data[modelData]["eta"])) : jobsSource.data[modelData]["speed"]
+                text: eta > 0 ? i18nc("Speed and estimated time to completition", "%1 (%2 remaining)", speed, locale.prettyFormatDuration(eta)) : speed
             }
         }
 
