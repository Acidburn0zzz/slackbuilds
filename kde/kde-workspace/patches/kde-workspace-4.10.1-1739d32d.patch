commit 1739d32d2d2a9c02d742c0aff4c91c46ab974692
Author: Oliver Henshaw <oliver.henshaw@gmail.com>
Date:   Sat Jan 12 17:30:46 2013 +0000

    Refactor grace time tracking
    
    Set a boolean instead of checking whether timer is active. This is
    required for the following commits.
    
    REVIEW: 108425

diff --git a/ksmserver/screenlocker/ksldapp.cpp b/ksmserver/screenlocker/ksldapp.cpp
index b3eebf5..10f808a 100644
--- a/ksmserver/screenlocker/ksldapp.cpp
+++ b/ksmserver/screenlocker/ksldapp.cpp
@@ -70,6 +70,7 @@ KSldApp::KSldApp(QObject * parent)
     , m_lockedTimer(QElapsedTimer())
     , m_idleId(0)
     , m_lockGrace(0)
+    , m_inGraceTime(false)
     , m_graceTimer(new QTimer(this))
     , m_inhibitCounter(0)
     , m_plasmaEnabled(false)
@@ -130,6 +131,7 @@ void KSldApp::initialize()
     connect(m_lockProcess, SIGNAL(finished(int,QProcess::ExitStatus)), SLOT(lockProcessFinished(int,QProcess::ExitStatus)));
     m_lockedTimer.invalidate();
     m_graceTimer->setSingleShot(true);
+    connect(m_graceTimer, SIGNAL(timeout()), SLOT(endGraceTime()));
     // create our D-Bus interface
     new Interface(this);
 
@@ -315,7 +317,8 @@ void KSldApp::idleTimeout(int identifier)
         // there is at least one process blocking the auto lock of screen locker
         return;
     }
-    if (m_lockGrace) {
+    if (m_lockGrace) {  // short-circuit if grace time is zero
+        m_inGraceTime = true;
         m_graceTimer->start(m_lockGrace);
     }
     lock();
@@ -323,12 +326,17 @@ void KSldApp::idleTimeout(int identifier)
 
 bool KSldApp::isGraceTime() const
 {
-    return m_graceTimer->isActive();
+    return m_inGraceTime;
+}
+
+void KSldApp::endGraceTime()
+{
+    m_inGraceTime = false;
 }
 
 void KSldApp::unlock()
 {
-    if (!m_graceTimer->isActive()) {
+    if (!isGraceTime()) {
         return;
     }
     s_graceTimeKill = true;
diff --git a/ksmserver/screenlocker/ksldapp.h b/ksmserver/screenlocker/ksldapp.h
index 51c0906..3047c00 100644
--- a/ksmserver/screenlocker/ksldapp.h
+++ b/ksmserver/screenlocker/ksldapp.h
@@ -85,6 +85,7 @@ Q_SIGNALS:
 private Q_SLOTS:
     void cleanUp();
     void idleTimeout(int identifier);
+    void endGraceTime();
 
 private:
     void initialize();
@@ -112,7 +113,11 @@ private:
      **/
     int m_lockGrace;
     /**
-     * while this timer is active user activity may remove the lock. Only used after idle timeout.
+     * Controls whether user activity may remove the lock. Only enabled after idle timeout.
+     **/
+    bool m_inGraceTime;
+    /**
+     * Grace time ends when timer expires.
      **/
     QTimer *m_graceTimer;
     int m_inhibitCounter;
