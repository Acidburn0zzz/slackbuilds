diff -up imms-3.1.0-rc10/clients/audacious/audplugin.cc.aud imms-3.1.0-rc10/clients/audacious/audplugin.cc
--- imms-3.1.0-rc10/clients/audacious/audplugin.cc.aud	2010-08-01 18:17:43.000000000 -0300
+++ imms-3.1.0-rc10/clients/audacious/audplugin.cc	2010-08-05 02:41:31.011843774 -0300
@@ -24,8 +24,11 @@
 #include <iostream>
 #include <time.h>
 
+extern "C" {
 #include <audacious/plugin.h>
-#include <audacious/audctrl.h>
+#include <audacious/drct.h>
+#include <libaudcore/audstrings.h>
+}
 
 #include "immsconf.h"
 #include "cplugin.h"
@@ -74,11 +77,11 @@ string imms_get_playlist_item(int at)
         return "";
     char *tmp = 0;
     while (!tmp)
-       tmp = audacious_drct_get_playlist_file(at);
+       tmp = aud_drct_pl_get_file(at);
     string result = tmp;
     free(tmp);
     gchar *realfn = g_filename_from_uri(result.c_str(), NULL, NULL);
-    tmp = aud_filename_to_utf8(realfn ? realfn : result.c_str());
+    tmp = filename_to_utf8(realfn ? realfn : result.c_str());
     result = tmp;
     free(tmp);
     free(realfn);
@@ -87,7 +90,7 @@ string imms_get_playlist_item(int at)
 
 static void player_reset_selection()
 {
-    audacious_drct_playqueue_remove(next_plpos);
+    aud_drct_pq_remove(next_plpos);
     next_plpos = -1;
 }
 
@@ -115,7 +118,7 @@ struct FilterOps
     static void set_next(int next)
     {
         next_plpos = next;
-        audacious_drct_playqueue_add(next_plpos);
+        aud_drct_pq_add(next_plpos);
         select_pending = false;
         just_enqueued = 2;
     }
@@ -129,7 +132,7 @@ struct FilterOps
     }
     static int get_length()
     {
-        return audacious_drct_get_playlist_length();
+        return aud_drct_pl_get_length();
     }
 }; 
 
@@ -179,7 +182,7 @@ static void do_song_change()
 static void check_playlist()
 {
     // update playlist length
-    int new_pl_length = audacious_drct_get_playlist_length();
+    int new_pl_length = aud_drct_pl_get_length();
     if (new_pl_length != pl_length)
     {
         pl_length = new_pl_length;
@@ -190,7 +193,7 @@ static void check_playlist()
 
 static void check_time()
 {
-    int cur_time = audacious_drct_get_output_time();
+    int cur_time = aud_drct_get_time();
 
     ending += song_length - cur_time < 20 * 1000
                             ? ending < 10 : -(ending > 0);
@@ -205,23 +208,23 @@ void do_checks()
         select_pending = false;
         imms->setup(xidle_val);
         imms->playlist_changed(pl_length =
-                audacious_drct_get_playlist_length());
-        if (audacious_drct_is_playing())
+                aud_drct_pl_get_length());
+        if (aud_drct_get_playing())
         {
-            last_plpos = cur_plpos = audacious_drct_get_playlist_pos();
+            last_plpos = cur_plpos = aud_drct_pl_get_pos();
             last_path = cur_path = imms_get_playlist_item(cur_plpos);
             imms->start_song(cur_plpos, cur_path);
         }
         enqueue_next();
     }
 
-    if (!audacious_drct_is_playing())
+    if (!aud_drct_get_playing())
         return;
 
-    cur_plpos = audacious_drct_get_playlist_pos();
+    cur_plpos = aud_drct_pl_get_pos();
     
     // check if xmms is reporting the song length correctly
-    song_length = audacious_drct_get_playlist_time(cur_plpos);
+    song_length = aud_drct_pl_get_time(cur_plpos);
     if (song_length > 1000)
         good_length++;
 
@@ -237,14 +240,14 @@ void do_checks()
         if (last_path != cur_path)
         {
             do_song_change();
-            audacious_drct_playqueue_remove(next_plpos);
+            aud_drct_pq_remove(next_plpos);
             return;
         }
     }
 
     check_time();
 
-    bool newshuffle = audacious_drct_is_shuffle();
+    bool newshuffle = aud_drct_pl_shuffle_is_enabled();
     if (!newshuffle && shuffle)
         player_reset_selection();
     shuffle = newshuffle;
@@ -252,7 +255,7 @@ void do_checks()
     if (!shuffle)
         return;
 
-    int qlength = audacious_drct_get_playqueue_length();
+    int qlength = aud_drct_pq_get_length();
     if (qlength > 1)
         player_reset_selection();
     else if (!qlength)
diff -up imms-3.1.0-rc10/clients/audacious/rules.mk.aud imms-3.1.0-rc10/clients/audacious/rules.mk
--- imms-3.1.0-rc10/clients/audacious/rules.mk.aud	2010-08-01 18:17:43.000000000 -0300
+++ imms-3.1.0-rc10/clients/audacious/rules.mk	2010-08-05 02:40:28.366116783 -0300
@@ -16,8 +16,8 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 #
-AUDACIOUSCPPFLAGS=`pkg-config audclient dbus-glib-1 --cflags` -I../clients/xmms/ -DAUDACIOUS
-AUDACIOUSLDFLAGS=`pkg-config audclient glib dbus-glib-1 --libs` -laudcore 
+AUDACIOUSCPPFLAGS=`pkg-config audacious dbus-glib-1 --cflags` -I../clients/xmms/ -DAUDACIOUS
+AUDACIOUSLDFLAGS=`pkg-config audacious glib dbus-glib-1 --libs`
 
 libaudaciousimms.so: audplugin.o audaciousinterface.o clientstubbase.o libimmscore.a 
 libaudaciousimms-LIBS = $(AUDACIOUSLDFLAGS)
diff -up imms-3.1.0-rc10/clients/bmp/bmpinterface.c.aud imms-3.1.0-rc10/clients/bmp/bmpinterface.c
--- imms-3.1.0-rc10/clients/bmp/bmpinterface.c.aud	2010-08-05 02:40:28.365117042 -0300
+++ imms-3.1.0-rc10/clients/bmp/bmpinterface.c	2010-08-05 02:40:52.277905352 -0300
@@ -24,10 +24,17 @@
 #include <bmp/plugin.h>
 #define PLAYER_PREFIX(x) bmp_##x
 #elif AUDACIOUS
+#include <glib.h>
+#include <audacious/i18n.h>
+
+#include <gdk/gdkkeysyms.h>
+#include <gtk/gtk.h>
 #include <audacious/configdb.h>
-#include <audacious/util.h>
 #include <audacious/plugin.h>
+#include <libaudgui/libaudgui.h>
+#include <libaudgui/libaudgui-gtk.h>
 #define PLAYER_PREFIX(x) aud_##x
+#define PACKAGE PACKAGE_NAME
 #endif
 #include "immsconf.h"
 #include "cplugin.h"
@@ -35,6 +42,7 @@
 
 int use_xidle = 1;
 int poll_tag = 0;
+#define ConfigDb mcs_handle_t
 
 GtkWidget *configure_win = NULL, *about_win = NULL, *xidle_button = NULL;
 
@@ -170,17 +178,21 @@ void configure(void)
 
 void about(void)
 {
-    if (about_win)
-        return;
-
-    about_win =
 #ifdef AUDACIOUS
-        audacious_info_dialog(
+        static GtkWidget *aboutbox = NULL;
+        gchar *tmp;
+    
+        tmp = g_strdup_printf(_(PACKAGE_STRING "\n\n"
 #else
+void about(void)
+        if (about_win)
+           return;
+
+        about_win =
         xmms_show_message(
-#endif
             "About IMMS",
             PACKAGE_STRING "\n\n"
+#endif
             "Intelligent Multimedia Management System" "\n\n"
             "IMMS is an intelligent playlist plug-in for BPM" "\n"
             "that tracks your listening patterns" "\n"
@@ -190,9 +202,18 @@ void about(void)
             "For more information please visit" "\n"
             "http://www.luminal.org/wiki/index.php/IMMS" "\n\n"
             "Written by" "\n"
+#ifdef AUDACIOUS
+            "Michael \"mag\" Grigoriev <mag@luminal.org>"));
+        audgui_simple_message(&aboutbox, GTK_MESSAGE_INFO, _("About IMMS"),
+              tmp);
+
+      g_free(tmp);
+#else
             "Michael \"mag\" Grigoriev <mag@luminal.org>",
             "Dismiss", FALSE, NULL, NULL);
 
     gtk_signal_connect(GTK_OBJECT(about_win), "destroy",
             GTK_SIGNAL_FUNC(gtk_widget_destroyed), &about_win);
+
+#endif
 }
diff -up imms-3.1.0-rc10/configure.ac.aud imms-3.1.0-rc10/configure.ac
--- imms-3.1.0-rc10/configure.ac.aud	2010-08-01 18:17:43.000000000 -0300
+++ imms-3.1.0-rc10/configure.ac	2010-08-05 02:40:28.367116523 -0300
@@ -362,14 +362,17 @@ LIBS="$audacious_LIBS $dbus_glib_LIBS"
 CPPFLAGS="$audacious_CFLAGS $dbus_glib_CFLAGS"
 
 AC_CHECK_HEADERS(audacious/plugin.h,, [with_audacious=no])
-AC_CHECK_HEADERS(audacious/auddrct.h,, [with_audacious=no])
+AC_CHECK_HEADERS(audacious/drct.h,, [with_audacious=no])
 
 if test "$with_audacious" != "no"; then
-    AC_MSG_CHECKING([for audacious_drct_playqueue_add in -laudacious])
-    AC_TRY_LINK([#include <audacious/auddrct.h>
-                 #include <audacious/plugin.h>
-                 SIMPLE_GENERAL_PLUGIN(0, 0);],
-                [audacious_drct_playqueue_add(0)],
+    AC_MSG_CHECKING([for aud_drct_pq_add in -laudacious])
+    AC_TRY_LINK([extern "C" {
+                 #include <audacious/drct.h>
+                  #include <audacious/plugin.h>
+                 #include <audacious/dbus.h>
+                }
+                  SIMPLE_GENERAL_PLUGIN(0, 0);],
+                [aud_drct_pq_add(0)],
                 [AC_MSG_RESULT(yes)],
                 [with_audacious="no"
                  AC_MSG_RESULT(no)]);
