--- src/m64py/SDL/array.py.orig	2012-06-01 19:06:58.000000000 -0300
+++ src/m64py/SDL/array.py	2013-11-15 21:45:58.774541237 -0200
@@ -7,47 +7,7 @@ __docformat__ = 'restructuredtext'
 __version__ = '$Id: $'
 
 from ctypes import *
-
-# Arrange these in order of preference
-_array_names = ('numpy', 'numarray', 'Numeric')
-
-def _import_arrays(array_names, locals):
-    default_array = None
-    for array_name in array_names:
-        try:
-            array = __import__(array_name, globals(), locals, [])
-            typemap = {
-                c_ubyte: array.uint8,
-                c_ushort: array.uint16,
-                c_uint: array.uint32
-            }
-            locals[array_name] = array
-            locals['_%s_typemap' % array_name] = typemap
-            locals['_have_%s' % array_name] = True
-            if not default_array:
-                default_array = array
-                locals['_default_array'] = array
-                locals['_default_typemap'] = typemap
-        except ImportError:
-            locals['_have_%s' % array_name] = False
-    locals['_have_array'] = default_array is not None
-
-# This sets up local names for the arrays.  If numpy, Numeric, and numarray
-# are all available, the following local variables are defined:
-#    numpy,  _numpy_typemap
-#    numarray,  _numarray_typemap
-#    Numeric, _Numeric_typemap
-#
-# The following local variables will be set to True or False:
-#    _have_numpy, _have_numarray, _have_Numeric 
-#
-# If any of the array modules were imported, the following is True:
-#    _have_array
-#
-# And if _have_array is True, the following are defined:
-#    _default_array
-#    _default_typemap
-_import_arrays(_array_names, locals())
+import numpy
 
 class SDL_array:
     def __init__(self, ptr, count, ctype):
