#!/bin/sh
#-- tetex-tex4ht for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ tetex-tex4ht.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008, 2009, 2010 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set YES for native build with gcc >= 4.2
SB_NATIVE=${SB_NATIVE:-NO}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

PNAME=tex4ht
NAME=tetex-tex4ht
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-1.0.2009_06_11_1038}
PVER=${PVER:-20090611-1}
if [ "${SB_NATIVE}" = "YES" ] ;then
  ARCH=${ARCH:-$(uname -m)}
else
  ARCH=${ARCH:-i686}
fi
if [ "${ARCH}" = "x86_64" ] ;then
  SLKTARGET=${SLKTARGET:-x86_64}
else
  SLKTARGET=${SLKTARGET:-i486}
fi
SLKDTARGET=${SLKDTARGET:-slackware}
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/tex/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

# Needs to match texmf package
SB_TEXMF_MAIN=${SB_TEXMF_MAIN:-/usr/share/texmf}

TDOWNDIR=${CWD}/tpf

SRCDIR=${PNAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.gz
SRCARCHIVE2=${PNAME}-lit.zip
TSRCARCHIVES="ProTex.sty AlProTex.sty DraTex.sty AlDraTex.sty"
PSRCARCHIVE=${PNAME}_${PVER}.diff.gz

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://www.cse.ohio-state.edu/~gurari/TeX4ht/fix"
TDL_URL="http://www.cse.ohio-state.edu/~gurari/tpf/"
DEB_MIRROR=${DEB_MIRROR:-ftp://ftp.debian.org}
PDL_URL="${DEB_MIRROR}/debian/pool/main/$(echo ${PNAME} | sed -e 's/\(.\).*/\1/')/${PNAME}/${PSRCARCHIVE}"

# if source is not present, download in source rootdir if possible
for file in ${SRCARCHIVE} ${SRCARCHIVE2} ;do
  test -r ${CWD}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL}/${file} || exit 1
done
mkdir -p ${TDOWNDIR}
for file in ${TSRCARCHIVES} ;do
  test -r ${TDOWNDIR}/${file} || ${DL_PROG} -P ${TDOWNDIR} ${DL_OPTS} ${TDL_URL}/${file} || exit 1
done
test -r ${CWD}/${PSRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${PDL_URL} || exit 1

if [ "${SB_NATIVE}" = "YES" ] ;then
  SLKCFLAGS="-O2 -march=native -mtune=native ${SB_ECFLAGS} -pipe"
else
  case "${ARCH}" in
    i[3-6]86)    SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"
                 ;;
    x86_64)      SLKCFLAGS="-O2 -fPIC"
                 ;;
    s390|*)      SLKCFLAGS="-O2"
                 ;;
  esac
fi
if [ "${ARCH}" = "x86_64" ] ;then
  LIBDIRSUFFIX="64"
  SLKCFLAGS="${SLKCFLAGS} -fPIC"
else
  LIBDIRSUFFIX=""
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
tar -xvf ${CWD}/${SRCARCHIVE} || exit 1
cd ${SRCDIR} || exit 1

mkdir lit
unzip ${CWD}/${SRCARCHIVE2} -d lit
chmod 0644 lit/*.tex

chmod -R u+w,go+r-w,a-s .
find texmf -type f -exec chmod a-x \{\} \;

cp -p ${CWD}/tex4ht-lppl.txt lppl.txt

mkdir -p ${TDOWNDIR}
for file in ${TSRCARCHIVES} ;do
  install -pm0644 ${TDOWNDIR}/${file} lit/
done

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1
if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh || exit 1
fi

( cd src || exit 1
  set -o xtrace
  SLKCFLAGS="${SLKCFLAGS} -DHAVE_STRING_H -DHAVE_DIRENT_H -DHAVE_UNISTD_H \
   -DHAVE_SYS_DIR_H -DKPATHSEA -DENVFILE=\"${SB_TEXMF_MAIN}/tex4ht/base/unix/tex4ht.env\""
  LDFLAGS="-lkpathsea ${LDFLAGS}"
  gcc -o tex4ht ${SLKCFLAGS} tex4ht.c ${LDFLAGS} || exit $?
  gcc -o t4ht ${SLKCFLAGS} t4ht.c ${LDFLAGS} || exit $?
) || exit $?

mkdir -p ${PKG}/usr/bin ${PKG}/usr/share/tex4ht
install -m755 src/tex4ht ${PKG}/usr/bin/ || exit 1
install -m755 src/t4ht ${PKG}/usr/bin/ || exit 1
install -p -m755 bin/ht/unix/* ${PKG}/usr/share/tex4ht/ || exit 1
for script in httex htlatex httexi htcontext htxetex htxelatex; do
  install -p -m755 bin/ht/unix/${script} ${PKG}/usr/bin/ || exit 1
done
install -p -m755 bin/ht/unix/ht ${PKG}/usr/bin/tex4ht-ht || exit 1
install -p -m755 bin/unix/mk4ht ${PKG}/usr/bin/ || exit 1

mkdir -p ${PKG}/${SB_TEXMF_MAIN}/tex4ht
cp -pr texmf/tex4ht/ht-fonts ${PKG}/${SB_TEXMF_MAIN}/tex4ht/ || exit 1
cp -pr texmf/tex4ht/xtpipes ${PKG}/${SB_TEXMF_MAIN}/tex4ht/ || exit 1

mkdir -p ${PKG}/${SB_TEXMF_MAIN}/tex/generic
cp -pr texmf/tex/generic/tex4ht ${PKG}/${SB_TEXMF_MAIN}/tex/generic || exit 1

cp -pr debian/html tutorial

mkdir -p ${PKG}/usr/man/man1
sed \
  -e "s;@SCRIPTSDIR@;/usr/share/tex4ht/;" \
  -e "s;@TEX4HTDIR@;${SB_TEXMF_MAIN}/tex4ht/base/unix;" \
  -e "s;@TEXMFCNF@;${SB_TEXMF_MAIN}/web2c/texmf.cnf;" \
  -e "s;@HTFDIR@;${SB_TEXMF_MAIN}/tex4ht/ht-fonts;" \
  -e "s;@TEXDIR@;${SB_TEXMF_MAIN}/tex/generic/tex4ht;g" \
  src/tex4ht.man > ${PKG}/usr/man/man1/tex4ht.1

if [ -x ${JAVA_HOME}/bin/javac ] ;then
( cd src || exit 1
  # adapted from debian Makefile
  mkdir class
  javac -d class -source 1.5 java/*.java java/xtpipes/*.java java/xtpipes/util/*.java || exit $?
  fastjar -c -f tex4ht.jar -m java/manifest -C class . || exit $?

  # beware of the %% that have to be protected as %%%%
  # lib is hardcoded because the jvm is there whatever the architecture.
  sed \
    -e "s;^i.*/ht-fonts/;i${SB_TEXMF_MAIN}/tex4ht/ht-fonts/;" \
    -e "s;^tpath/tex/;t${SB_TEXMF_MAIN}/;" \
    -e "s;%%~/texmf-dist/;${SB_TEXMF_MAIN}/;" \
    -e 's;^\(\.[^ ]\+\) java;\1 '${JAVA_HOME}'/bin/java;' \
   ../texmf/tex4ht/base/unix/tex4ht.env > tex4ht.env || exit 1

  install -p -m644 tex4ht.jar ${PKG}/usr/share/tex4ht/ || exit 1

  mkdir -p ${PKG}/${SB_TEXMF_MAIN}/tex4ht/base/unix
  cp tex4ht.env ${PKG}/${SB_TEXMF_MAIN}/tex4ht/base/unix/ || exit 1
) || exit $?
fi

find ${PKG} | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  lppl.txt doc tutorial debian/README.kpathsea ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
[ -r ChangeLog ] && head -n 1000 ChangeLog > ${DOCDIR}/ChangeLog
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644
find ${DOCDIR}/ -type f -size 0 -print0 | xargs -0 rm -f

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/texhash ] ;then
  \${CHROOT} /usr/bin/texhash 2> /dev/null || :
elif [ -x usr/share/texmf/bin/texhash ] ;then
  export PATH=\${PATH}:usr/share/texmf/bin
  \${CHROOT} /usr/share/texmf/bin/texhash 2> /dev/null || :
fi

# To remove:
# texhash rehash 2> /dev/null
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/*-lppl.txt ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
