
# HG changeset patch
# User John Lindgren <john.lindgren@tds.net>
# Date 1281477079 14400
# Node ID 1615a2529096f016fba08a535725ef3cd38810e1
# Parent  9445dd8bd480dfc1b6a7de2fe9714d9d269b5adb
qsort() segfaults if sort function is inconsistent.  Closes: AUD-253.

diff -r 9445dd8bd480 -r 1615a2529096 src/audacious/playlist-utils.c
--- a/src/audacious/playlist-utils.c	Tue Aug 10 16:41:37 2010 +0100
+++ b/src/audacious/playlist-utils.c	Tue Aug 10 17:51:19 2010 -0400
@@ -63,11 +63,8 @@
     const gchar * string_a = tuple_get_string (a, field, NULL);
     const gchar * string_b = tuple_get_string (b, field, NULL);
 
-    /* This is technically inconsistent if both string_a == NULL and string_b ==
-     * NULL, but for the sake of removing duplicates we do not want blank fields
-     * to compare as equal. */
     if (string_a == NULL)
-        return -1;
+        return (string_b == NULL) ? 0 : -1;
     if (string_b == NULL)
         return 1;
 
@@ -76,10 +73,10 @@
 
 static gint tuple_compare_int (const Tuple * a, const Tuple * b, gint field)
 {
-    /* technically inconsistent again */
-    if (tuple_get_value_type (a, field, NULL) != TUPLE_INT &&
-     tuple_get_value_type (b, field, NULL) != TUPLE_INT)
-        return -1;
+    if (tuple_get_value_type (a, field, NULL) != TUPLE_INT)
+        return (tuple_get_value_type (b, field, NULL) != TUPLE_INT) ? 0 : -1;
+    if (tuple_get_value_type (b, field, NULL) != TUPLE_INT)
+        return 1;
 
     gint int_a = tuple_get_int (a, field, NULL);
     gint int_b = tuple_get_int (b, field, NULL);
@@ -156,6 +153,7 @@
         playlist_sort_selected_by_tuple (playlist, tuple_comparisons[scheme]);
 }
 
+/* Fix me:  This considers empty fields as duplicates. */
 void playlist_remove_duplicates_by_scheme (gint playlist, gint scheme)
 {
     gint entries = playlist_entry_count (playlist);

