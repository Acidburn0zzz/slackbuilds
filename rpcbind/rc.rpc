#!/bin/sh
# rc.rpc:  start/stop/restart RPC daemons needed to use NFS.
#
# You must run these daemons in order to mount NFS partitions
# (unless you use the mount option '-o nolock', which can
# corrupt files and is not generally recommended unless you
# are mounting the partition(s) as read-only).
#
# To run an NFS server, starting these is mandatory.
#

RETVAL=0

rpc_start() {
  if [ -x /sbin/rpcbind -a -x /sbin/rpc.statd -a -x /sbin/rpc.idmapd ]; then
    if ! ps axc | grep -q rpcbind ; then
      echo "Starting RPC rpcbind:  /sbin/rpcbind"
      /sbin/rpcbind
      RETVAL=$?
    fi
    [ "${RETVAL}" -eq 0 ] || exit ${RETVAL}
    if ! ps axc | grep -q rpc.statd ; then
      echo "Starting RPC NSM (Network Status Monitor):  /sbin/rpc.statd"
      /sbin/rpc.statd
      RETVAL=$?
    fi
    [ "${RETVAL}" -eq 0 ] || exit ${RETVAL}
    if ! ps axc | grep -q rpc.idmapd ; then
      RPCMTAB=$(grep -v '^#' /proc/mounts | awk '{ if ($3 ~ /^rpc_pipefs$/ ) print $2}')
      if [ -z "${RPCMTAB}" ] ;then
        if [ -x /sbin/lsmod -a -x /sbin/modprobe ] ;then
          if ! /sbin/lsmod | grep sunrpc > /dev/null ; then
            /sbin/modprobe sunrpc
          fi
          # Try harder
          RPCMTAB=$(grep -v '^#' /proc/mounts | awk '{ if ($3 ~ /^rpc_pipefs$/ ) print $2}')
          if [ -z "${RPCMTAB}" ] ;then
            /bin/mount -t rpc_pipefs sunrpc /var/lib/nfs/rpc_pipefs > /dev/null 2>&1
          fi
          RPCMTAB=$(grep -v '^#' /proc/mounts | awk '{ if ($3 ~ /^rpc_pipefs$/ ) print $2}')
          if [ -z "${RPCMTAB}" ] ;then
            echo "Error: RPC MTAB does not exist."
            exit 6
          fi
        fi
      fi
      echo "Starting RPC name to UID/GID mapper:  /sbin/rpc.idmapd"
      /sbin/rpc.idmapd
      RETVAL=$?
    fi
  else
    echo "WARNING:  Cannot start RPC daemons needed for NFS.  One or more of"
    echo "          these required daemons is not executable or is not present"
    echo "          on your system:"
    echo
    echo "          /sbin/rpcbind, /sbin/rpc.statd or /sbin/rpc.idmapd"
    echo
    exit 5
  fi
}

rpc_stop() {
  killall rpc.idmapd 2> /dev/null
  sleep 1
  killall rpc.statd 2> /dev/null
  sleep 1
  killall rpcbind 2> /dev/null
  sleep 1
  killall -9 rpc.idmapd 2> /dev/null # make sure :)
  sleep 1
  killall -9 rpc.statd 2> /dev/null # make sure :)
  sleep 1
  killall -9 rpcbind 2> /dev/null # make sure :)
  sleep 1
}

rpc_restart() {
  rpc_stop
  rpc_start
}

case "$1" in
'start')
  rpc_start
  ;;
'stop')
  rpc_stop
  ;;
'restart')
  rpc_restart
  ;;
*)
  echo "usage $0 start|stop|restart"
esac

exit ${RETVAL}
