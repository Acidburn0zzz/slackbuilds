diff -up ntp-4.2.6p5/util/ntp-keygen.c.identlen ntp-4.2.6p5/util/ntp-keygen.c
--- ntp-4.2.6p5/util/ntp-keygen.c.identlen	2011-12-25 00:27:16.000000000 +0100
+++ ntp-4.2.6p5/util/ntp-keygen.c	2012-11-22 18:21:40.888910872 +0100
@@ -117,8 +117,7 @@
 #define MAXFILENAME	256	/* max file name length */
 #define MAXHOSTNAME	256	/* max host name length */
 #ifdef OPENSSL
-#define	PLEN		512	/* default prime modulus size (bits) */
-#define	ILEN		256	/* default identity modulus size (bits) */
+#define	PLEN		1024	/* default prime and identity modulus size (bits) */
 #define	MVMAX		100	/* max MV parameters */
 
 /*
@@ -158,8 +157,7 @@ extern char *optarg;		/* command line ar
 char	*progname;
 volatile int	debug = 0;		/* debug, not de bug */
 #ifdef OPENSSL
-u_int	modulus = PLEN;		/* prime modulus size (bits) */
-u_int	modulus2 = ILEN;	/* identity modulus size (bits) */
+u_int	modulus = PLEN;		/* prime and identity modulus size (bits) */
 #endif
 int	nkeys;			/* MV keys */
 time_t	epoch;			/* Unix epoch (seconds) since 1970 */
@@ -1019,9 +1017,9 @@ gen_iffkey(
 	 * Generate DSA parameters for use as IFF parameters.
 	 */
 	fprintf(stderr, "Generating IFF keys (%d bits)...\n",
-	    modulus2);
+	    modulus);
 	RAND_bytes(seed, sizeof(seed));
-	dsa = DSA_generate_parameters(modulus2, seed, sizeof(seed), NULL,
+	dsa = DSA_generate_parameters(modulus, seed, sizeof(seed), NULL,
 	    NULL, cb, "IFF");
 	fprintf(stderr, "\n");
 	if (dsa == NULL) {
@@ -1197,8 +1195,8 @@ gen_gqkey(
 	 */
 	fprintf(stderr,
 	    "Generating GQ parameters (%d bits)...\n",
-	     modulus2);
-	rsa = RSA_generate_key(modulus2, 3, cb, "GQ");
+	     modulus);
+	rsa = RSA_generate_key(modulus, 3, cb, "GQ");
 	fprintf(stderr, "\n");
 	if (rsa == NULL) {
 		fprintf(stderr, "RSA generate keys fails\n%s\n",
@@ -1430,7 +1428,7 @@ gen_mvkey(
 	n = nkeys;
 	fprintf(stderr,
 	    "Generating MV parameters for %d keys (%d bits)...\n", n,
-	    modulus2 / n);
+	    modulus / n);
 	ctx = BN_CTX_new(); u = BN_new(); v = BN_new(); w = BN_new();
 	b = BN_new(); b1 = BN_new();
 	dsa = DSA_new();
@@ -1440,7 +1438,7 @@ gen_mvkey(
 	for (j = 1; j <= n; j++) {
 		s1[j] = BN_new();
 		while (1) {
-			BN_generate_prime(s1[j], modulus2 / n, 0, NULL,
+			BN_generate_prime(s1[j], modulus / n, 0, NULL,
 			    NULL, NULL, NULL);
 			for (i = 1; i < j; i++) {
 				if (BN_cmp(s1[i], s1[j]) == 0)
@@ -1480,7 +1478,7 @@ gen_mvkey(
 		temp++;
 		j = temp % n + 1;
 		while (1) {
-			BN_generate_prime(u, modulus2 / n, 0, 0, NULL,
+			BN_generate_prime(u, modulus / n, 0, 0, NULL,
 			    NULL, NULL);
 			for (i = 1; i <= n; i++) {
 				if (BN_cmp(u, s1[i]) == 0)
