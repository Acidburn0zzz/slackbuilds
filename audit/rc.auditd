#!/bin/bash
#
# auditd        This starts and stops auditd
#
# chkconfig: 2345 11 88
# description: This starts the Linux Auditing System Daemon, \
#              which collects security related events in a dedicated \
#              audit log. If this daemon is turned off, audit events \
#              will be sent to syslog.
#
# processname: /sbin/auditd
# config: /etc/default/auditd
# config: /etc/audit/auditd.conf
# pidfile: /var/run/auditd.pid
#
# Return values according to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
#

PATH=/sbin:/bin:/usr/bin:/usr/sbin
exec="/sbin/auditd"
execctl="/sbin/auditctl"
prog=$(basename ${exec} | cut -d- -f1 )
lockfile=/var/lock/subsys/${prog}
conffile=/etc/audit/auditd.conf

# Allow anyone to run status
if [ "$1" = "status" ] ; then
  status $prog
  RETVAL=$?
  exit ${RETVAL}
fi

# Check that we are root ... so non-root users stop here
test ${EUID} = 0  ||  exit 4

# Check config
test -f /etc/default/auditd && . /etc/default/auditd

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${exec})

start(){
  test -x ${exec} || exit 5
  test -f ${conffile} || exit 6

  echo -n "Starting ${prog}: "

# Localization for auditd is controlled in /etc/synconfig/auditd
  if [ -z "${AUDITD_LANG}" -o "${AUDITD_LANG}" = "none" -o "${AUDITD_LANG}" = "NONE" ]; then
    unset LANG LC_TIME LC_ALL LC_MESSAGES LC_NUMERIC LC_MONETARY LC_COLLATE
  else
    LANG="${AUDITD_LANG}"
    LC_TIME="${AUDITD_LANG}"
    LC_ALL="${AUDITD_LANG}"
    LC_MESSAGES="${AUDITD_LANG}"
    LC_NUMERIC="${AUDITD_LANG}"
    LC_MONETARY="${AUDITD_LANG}"
    LC_COLLATE="${AUDITD_LANG}"
    export LANG LC_TIME LC_ALL LC_MESSAGES LC_NUMERIC LC_MONETARY LC_COLLATE
  fi
  unset HOME MAIL USER USERNAME
  if [ -z "${PID}" ] ;then 
    ${exec} 2>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    # Load the default rules
    test -f /etc/audit/audit.rules && ${execctl} -R /etc/audit/audit.rules >/dev/null
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop(){
  echo -n "Stopping ${prog}: "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  # Remove watches so shutdown works cleanly
  if test x"${AUDITD_CLEAN_STOP}" != "x" ; then
    if test "$(echo ${AUDITD_CLEAN_STOP} | tr 'NO' 'no')" != "no"
    then
      ${execctl} -D >/dev/null
    fi
  fi
  if test x"${AUDITD_STOP_DISABLE}" != "x" ; then
    if test "$(echo ${AUDITD_STOP_DISABLE} | tr 'NO' 'no')" != "no"
    then
      ${execctl} -e 0 >/dev/null
    fi
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

reload(){
  test -f ${conffile} || exit 6
  echo -n "Reloading configuration: "
  if [ -n "${PID}" ] ;then
    kill ${PID} -HUP
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

rotate(){
  echo -n "Rotating logs: "
  if [ -n "${PID}" ] ;then
    kill ${PID} -USR1
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

resume(){
  echo -n "Resuming logging: "
  if [ -n "${PID}" ] ;then
    kill ${PID} -USR2
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

restart(){
  test -f ${conffile} || exit 6
  stop
  start
}

condrestart(){
  [ -e ${lockfile} ] && restart
  return 0
}


# See how we were called.
case "$1" in
  start|stop|restart|rotate|resume)
    $1
    ;;
  reload|force-reload)
    reload
    ;;
  condrestart|try-restart)
    condrestart
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|rotate|resume}"
    RETVAL=3
esac

exit ${RETVAL}

