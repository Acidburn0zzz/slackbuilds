Index: src/common/socket.c
===================================================================
RCS file: //claws/src/common/socket.c,v
retrieving revision 1.13.2.46
retrieving revision 1.13.2.47
diff -u -r1.13.2.46 -r1.13.2.47
--- src/common/socket.c	16 Feb 2011 07:16:18 -0000	1.13.2.46
+++ src/common/socket.c	30 Aug 2011 16:43:17 -0000	1.13.2.47
@@ -129,19 +129,21 @@
 
 static GList *sock_connect_data_list = NULL;
 
-static gboolean sock_prepare		(GSource	*source,
+static gboolean ssl_sock_prepare	(GSource	*source,
 					 gint		*timeout);
-static gboolean sock_check		(GSource	*source);
-static gboolean sock_dispatch		(GSource	*source,
+static gboolean ssl_sock_check		(GSource	*source);
+static gboolean ssl_sock_dispatch	(GSource	*source,
 					 GSourceFunc	 callback,
 					 gpointer	 user_data);
 
-GSourceFuncs sock_watch_funcs = {
-	sock_prepare,
-	sock_check,
-	sock_dispatch,
+#ifdef USE_GNUTLS
+GSourceFuncs ssl_watch_funcs = {
+	ssl_sock_prepare,
+	ssl_sock_check,
+	ssl_sock_dispatch,
 	NULL
 };
+#endif
 
 static gint sock_connect_with_timeout	(gint			 sock,
 					 const struct sockaddr	*serv_addr,
@@ -457,13 +459,14 @@
 }
 
 
-static gboolean sock_prepare(GSource *source, gint *timeout)
+#ifdef USE_GNUTLS
+static gboolean ssl_sock_prepare(GSource *source, gint *timeout)
 {
 	*timeout = 1;
 	return FALSE;
 }
 
-static gboolean sock_check(GSource *source)
+static gboolean ssl_sock_check(GSource *source)
 {
 	SockInfo *sock = ((SockSource *)source)->sock;
 	struct timeval timeout = {0, 0};
@@ -475,6 +478,10 @@
 
 	condition = sock->condition;
 
+	if ((condition & G_IO_IN) == G_IO_IN &&
+	    gnutls_record_check_pending(sock->ssl) != 0)
+		return TRUE;
+
 	FD_ZERO(&fds);
 	FD_SET(sock->sock, &fds);
 
@@ -486,7 +493,7 @@
 	return FD_ISSET(sock->sock, &fds) != 0;
 }
 
-static gboolean sock_dispatch(GSource *source, GSourceFunc callback,
+static gboolean ssl_sock_dispatch(GSource *source, GSourceFunc callback,
 			      gpointer user_data)
 {
 	SockInfo *sock = ((SockSource *)source)->sock;
@@ -496,6 +503,7 @@
 
 	return sock->callback(sock, sock->condition, sock->data);
 }
+#endif
 
 static gboolean sock_watch_cb(GIOChannel *source, GIOCondition condition,
 			      gpointer data)
@@ -521,7 +529,7 @@
 #ifdef USE_GNUTLS
 	if (sock->ssl)
 	{
-		GSource *source = g_source_new(&sock_watch_funcs,
+		GSource *source = g_source_new(&ssl_watch_funcs,
 					       sizeof(SockSource));
 		((SockSource *) source)->sock = sock;
 		g_source_set_priority(source, G_PRIORITY_DEFAULT);
Index: src/common/ssl.c
===================================================================
RCS file: //claws/src/common/ssl.c,v
retrieving revision 1.9.2.45
retrieving revision 1.9.2.46
diff -u -r1.9.2.45 -r1.9.2.46
--- src/common/ssl.c	30 Aug 2011 06:18:09 -0000	1.9.2.45
+++ src/common/ssl.c	30 Aug 2011 16:43:17 -0000	1.9.2.46
@@ -270,7 +270,7 @@
 	if (session == NULL || r != 0)
 		return FALSE;
   
-	gnutls_transport_set_lowat (session, 1); 
+	gnutls_transport_set_lowat (session, 0); 
 	gnutls_set_default_priority(session);
 	gnutls_protocol_set_priority (session, proto_prio);
 	gnutls_cipher_set_priority (session, cipher_prio);

