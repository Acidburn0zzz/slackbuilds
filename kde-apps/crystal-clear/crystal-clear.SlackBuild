#!/bin/sh
#-- crystal-clear for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ crystal-clear.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008, 2009 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.deviantart.com/deviation/19744866/
# http://www.kde-look.org/content/show.php?content=25668

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

PNAME=CrystalClear
NAME=crystal-clear
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-20050622}
ARCH=noarch
BUILD=${BUILD:-3}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/kde-apps/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Set to YES to enable support for slack-artwork
SB_SLKART=${SB_SLKART:-NO}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${PNAME}
SRCARCHIVE=${SRCDIR}.tar.gz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://linuxcult.com/crystal/icons/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible, or in /tmp
if ! test -r ${SRCARCHIVE}; then
  test -r ${CWD}/${SRCARCHIVE} || wget ${DL_OPTS} ${DL_URL} || exit 1
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}/usr/share/icons

( cd ${PKG}/usr/share/icons
  tar -xzvf ${CWD}/${SRCARCHIVE}
  mv "Crystal Clear" Crystal-Clear || exit 1
  find . -type d -exec chmod 755 {} \;
  find . -type f -exec chmod 644 {} \;
) || exit 1

THEMEDIR=${PKG}/usr/share/icons/Crystal-Clear

#deletes hidden files
rm -f ${THEMEDIR}/??x??/*/.*.png

#fixed shellbang
chmod -x ${THEMEDIR}/index.desktop

# setting Slackware Logo as kmenu
# backup
if [ "${SB_SLKART}" = "YES" ] ;then
  for res in 16 22 32 48 64 ;do
    dir=${THEMEDIR}/${res}x${res}/apps
    mv ${dir}/kmenu.png ${dir}/kmenu_orig.png || exit 1
    # links from slack-artwork package
    ln -s ../../../hicolor/${res}x${res}/apps/slk-default-logo-icon.png \
          ${THEMEDIR}/${res}x${res}/apps/kmenu.png || exit 1
  done
fi

# Removed non-lgpl firefox icons
rm -f ${THEMEDIR}/*/apps/firefox.png || exit 1

for res in 16 32 48 128 ;do
  ln -s browser.png ${THEMEDIR}/${res}x${res}/apps/firefox.png || exit 1
done

#kontact icons
ln -s ../apps/lists.png ${THEMEDIR}/48x48/actions/kontact_summary.png || exit 1
ln -s ../apps/email.png ${THEMEDIR}/48x48/actions/kontact_mail.png || exit 1
ln -s ../apps/kdmconfig.png ${THEMEDIR}/48x48/actions/kontact_contacts.png || exit 1
ln -s ../apps/date.png ${THEMEDIR}/48x48/actions/kontact_date.png || exit 1
ln -s ../apps/lassists.png ${THEMEDIR}/48x48/actions/kontact_todo.png || exit 1
ln -s ../apps/lreminder.png ${THEMEDIR}/48x48/actions/kontact_notes.png || exit 1
ln -s ../apps/ark.png ${THEMEDIR}/48x48/actions/basket.png || exit 1

# setting new kontact icon
# backup
for res in 16 22 32 48 64 128 ;do
  dir=${THEMEDIR}/${res}x${res}/apps
  mv ${dir}/kontact.png ${dir}/kontact_orig.png || exit 1
done

# links from kworldclock.png
for res in 16 22 32 48 64 128 ;do
  ln -s kworldclock.png ${THEMEDIR}/${res}x${res}/apps/kontact.png || exit 1
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --prepend --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
