#!/bin/sh
#
# tvheadend      This shell script takes care of starting and stopping tvheadend.
#
# description:  A TV streaming server
# processname:  tvheadend

exec="/usr/bin/tvheadend"
prog=$(basename ${exec})
configdir="/etc/tvheadend"
lockfile=/var/lock/subsys/${prog}

[ -x "${exec}" ] || exit 0

unset TVHE_USER TVHE_OPTIONS TVHE_PORT TVHE_PIDFILE
[ -e /etc/default/${prog} ] && . /etc/default/${prog}
TVHE_USER=${TVHE_USER:-tvheadend:video}
TVHE_CONFIG=${TVHE_CONFIG:-/etc/tvheadend}
TVHE_PORT=${TVHE_PORT:-9981}
TVHE_PORT2=${TVHE_PORT2:-9982}
TVHE_PIDFILE=${TVHE_PIDFILE:-/var/run/tvheadend.pid}

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${exec})

checkconfig() {
  if [[ "${TVHE_USER}" == "" ]] ; then
    echo "Please edit /etc/default/tvheadend"
    echo "You have to specify a user to run znc as, as we will not run it as root!"
    echo "Modify TVHE_USER to your needs (you can also add a group, after a colon)"
    return 1
  fi
  if ! $(getent passwd | cut -d ':' -f 1 | grep $( echo "${TVHE_USER}" | cut -d ':' -f 1 ) -sq) ; then
    echo "Please edit /etc/default/tvheadend"
    echo "Your user has to exist!"
    return 1
  fi
  TVHE_OUSER=$(echo ${TVHE_USER} | cut -d ':' -f 1)
  if [[ "${TVHE_USER}" == "root" ]] ; then
    echo "Please edit /etc/default/tvheadend"
    echo "Do not use root as user!"
    return 1
  fi
  unset TVHE_GROUP
  echo "${TVHE_USER}" | grep ':' -sq && TVHE_GROUP=$( echo ${TVHE_USER} | cut -d ':' -f 2 )
  if [ -n "${TVHE_GROUP}" ] && ! $(cut -d ':' -f 1 /etc/group | grep "${TVHE_GROUP}" -sq) ; then
    echo "Please edit /etc/default/tvheadend"
    echo "Your group has to exist too!"
    return 1
  fi
  return 0
}

checkconfig || exit 1

if [ -f "${TVHE_PIDFILE}" ] && ! pgrep -U "${TVHE_OUSER}" -f 'tvheadend|!rc.tvheadend' &>/dev/null ;then
  rm -f "${TVHE_PIDFILE}"
fi

start() {
  echo -n "Starting ${prog}: "
  if [[ "${TVHE_OUSER}" == "tvheadend" ]] && [[ -d "${homedir}" ]];then
    chown -R tvheadend.video "${configdir}"
    TVHE_CONFIG="${configdir}"
  fi
  if [ -z "${PID}" ] ;then
    ${exec} -f -u ${TVHE_OUSER} -g ${TVHE_GROUP} -p ${TVHE_PIDFILE} -c ${TVHE_CONFIG} -w ${TVHE_PORT} -e ${TVHE_PORT2} ${TVHE_OPTIONS}
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
}

stop() {
  echo -n "Stopping ${prog}: "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    rm -f ${pidfile}
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
}

restart() {
  stop
  unset PID
  sleep 1
  start
}

status() {
  if [ -n "${PID}" ] ;then
    echo "${prog} is running in pid ${PID}."
  else
    echo "${prog} is not running."
    RETVAL=3
  fi
  return ${RETVAL}
}

# See how we were called.
case "$1" in
  start|stop|status)
    $1
    ;;
  force-reload|restart|reload)
    restart
    ;;
  condrestart)
    if  [ ! -f ${lockfile} ]; then restart ;fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart|reload|force-reload}"
    exit 2
    ;;
esac

exit ${RETVAL}
