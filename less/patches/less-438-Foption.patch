diff -up less-438/forwback.c.Foption less-438/forwback.c
--- less-438/forwback.c.Foption	2010-09-30 22:31:21.000000000 -0300
+++ less-438/forwback.c	2011-01-01 11:56:37.387801097 -0200
@@ -422,3 +422,24 @@ get_back_scroll()
 		return (sc_height - 2);
 	return (10000); /* infinity */
 }
+	
+/*
+ * Get line count of file
+ */
+	public int
+get_line_count()
+{
+	int nlines = 0;
+	POSITION pos;
+	
+	pos = position(TOP);
+	
+	while (pos != NULL_POSITION && nlines <= sc_height)
+	{
+		pos = forw_line(pos);
+		nlines++;
+	}
+	
+	return nlines;
+}
+
diff -up less-438/funcs.h.Foption less-438/funcs.h
--- less-438/funcs.h.Foption	2010-12-29 15:58:33.000000000 -0200
+++ less-438/funcs.h	2011-01-01 11:56:37.387801097 -0200
@@ -136,6 +136,7 @@
 	public void forward ();
 	public void backward ();
 	public int get_back_scroll ();
+	public int get_line_count ();
 	public void del_ifile ();
 	public IFILE next_ifile ();
 	public IFILE prev_ifile ();
diff -up less-438/main.c.Foption less-438/main.c
--- less-438/main.c.Foption	2010-09-30 22:31:21.000000000 -0300
+++ less-438/main.c	2011-01-01 11:58:15.460017250 -0200
@@ -32,6 +32,7 @@ public char *	progname;
 public int	quitting;
 public int	secure;
 public int	dohelp;
+public int	line_count;
 
 #if LOGFILE
 public int	logfile = -1;
@@ -281,6 +282,16 @@ main(argc, argv)
 	{
 		if (edit_first())  /* Edit first valid file in cmd line */
 			quit(QUIT_ERROR);
+		/*
+		 * In case that we have only one file and -F, have to get a line
+		 * count fot init(). If the line count is less then a height of a term,
+		 * the content of the file is printed out and then less quits. Otherwise
+		 * -F can not be used
+		 */
+		if (nifile() == 1 && quit_if_one_screen)
+			line_count = get_line_count();
+		else if (nifile() > 1) /* In case more than one file, -F can not be used */
+			quit_if_one_screen = FALSE;
 	}
 
 	init();
diff -up less-438/screen.c.Foption less-438/screen.c
--- less-438/screen.c.Foption	2010-09-30 22:31:21.000000000 -0300
+++ less-438/screen.c	2011-01-01 11:56:37.386801308 -0200
@@ -204,6 +204,7 @@ public int missing_cap = 0;	/* Some capa
 
 static int attrmode = AT_NORMAL;
 extern int binattr;
+extern int line_count;
 
 #if !MSDOS_COMPILER
 static char *cheaper();
@@ -233,6 +234,7 @@ extern int wscroll;
 extern int screen_trashed;
 extern int tty;
 extern int top_scroll;
+extern int quit_if_one_screen;
 extern int oldbot;
 #if HILITE_SEARCH
 extern int hilite_search;
@@ -1534,7 +1536,9 @@ win32_deinit_term()
 init()
 {
 #if !MSDOS_COMPILER
-	if (!no_init)
+	if (quit_if_one_screen && line_count >= sc_height)
+		quit_if_one_screen = FALSE;
+	if (!no_init && !quit_if_one_screen) 
 		tputs(sc_init, sc_height, putchr);
 	if (!no_keypad)
 		tputs(sc_s_keypad, sc_height, putchr);
@@ -1574,8 +1578,9 @@ deinit()
 #if !MSDOS_COMPILER
 	if (!no_keypad)
 		tputs(sc_e_keypad, sc_height, putchr);
-	if (!no_init)
-		tputs(sc_deinit, sc_height, putchr);
+	if (!no_init && !quit_if_one_screen) 
+		tputs(sc_deinit, sc_height, putchr);	
+	
 #else
 	/* Restore system colors. */
 	SETCOLORS(sy_fg_color, sy_bg_color);
