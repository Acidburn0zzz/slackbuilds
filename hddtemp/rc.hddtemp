#!/bin/sh
#
# hddtemp       This shell script takes care of starting and stopping hddtemp.
#
# description:  hddtemp provides information about hard drives' temperature
# processname:  hddtemp
# config:       /etc/default/hddtemp

exec="/usr/sbin/hddtemp"
prog=$(basename ${exec})
lockfile=/var/lock/subsys/${prog}

[ -x "${exec}" ] || exit 0

# Get config.
HDDTEMP_OPTIONS="--listen=127.0.0.1"
[ -r /etc/default/${prog} ] && . /etc/default/${prog}

# Backwards compatibility.
[ -z "${HDDTEMP_OPTIONS}" -a -n "${HDDTEMPARGS}" ] && \
  HDDTEMP_OPTIONS="${HDDTEMPARGS}"
HDDTEMP_OPTIONS="${HDDTEMP_OPTIONS} ${HDDTEMP_DAEMON_OPTIONS}"

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${exec})

start() {
  echo -n "Starting hard disk temperature monitor daemon (${prog}): "
  ${exec} -d ${HDDTEMP_OPTIONS}
  if [ -z "${PID}" ] ;then 
    ${exec} -d ${HDDTEMP_OPTIONS}
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t[  OK  ]\r"
  else
    echo -e "\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop() {
  echo -n "Stopping hard disk temperature monitor daemon (${prog}): "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t[  OK  ]\r"
  else
    echo -e "\t[FAILED]\r"
  fi
  return ${RETVAL}
}

restart() {
  stop
  unset PID
  start
}

# See how we were called.
case "$1" in
  start|stop|restart)
    $1
    ;;
  reload|force-reload)
    restart
    ;;
  status)
    if [ -f ${lockfile} ]; then
      echo "${prog} is running in pid $(pidof ${prog})."
    else
      echo "${prog} is not running."
    fi
    ;;
  try-restart|condrestart)
    [ ! -f ${lockfile} ] || restart
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|try-restart|reload|force-reload}"
    exit 2
    ;;
esac
