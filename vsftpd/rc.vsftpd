#!/bin/bash
#
### BEGIN INIT INFO
# Provides: vsftpd
# Required-Start: $local_fs $network $named $remote_fs $syslog
# Required-Stop: $local_fs $network $named $remote_fs $syslog
# Short-Description: Very Secure Ftp Daemon
# Description: vsftpd is a Very Secure FTP daemon. It was written completely from
#              scratch
### END INIT INFO

# vsftpd      This shell script takes care of starting and stopping
#             standalone vsftpd.
#
# chkconfig: - 60 50
# description: Vsftpd is a ftp daemon, which is the program \
#              that answers incoming ftp service requests.
# processname: vsftpd
# config: /etc/vsftpd/vsftpd.conf

exec="/usr/sbin/vsftpd"
prog=$(basename ${exec})
lockfile=/var/lock/subsys/${prog}
pidfile=/var/run/${prog}.pid

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${exec})

start() {

  [ -x "${exec}" ] || exit 0
  if [ -d /etc/vsftpd ] ; then
    CONFS=$(ls /etc/vsftpd/*.conf 2>/dev/null)
      [ -z "${CONFS}" ] && exit 6
      PROC_FAILED=0
      for i in ${CONFS}; do
        site=$(basename ${i} .conf)
        echo -n "Starting ${prog} for ${site}: "
        ${exec} ${i}
        RETVAL=$?
        echo
        if [ ${RETVAL} -ne 0 ]; then
          ps -FC vsftpd | grep "${i}" > /dev/null
          RETVAL=$?
          if [ ${PROC_FAILED} -eq 0 ] && [ ${RETVAL} -ne 0 ]; then
            PROC_FAILED=1
          fi
        fi
      done
      if [ ${RETVAL} -eq 0 ] && [ ${PROC_FAILED} -ne 0 ]; then
        RETVAL=1
      fi
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -n "Starting ${prog}: "
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi  
  return ${RETVAL}
}

stop() {
  echo -n "Stopping ${prog}: "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

restart() {
  stop
  unset PID
  start
}

case "$1" in
  start|stop)
    $1
    ;;
  restart|reload)
    restart
    ;;
  condrestart)
    [ -f ${lockfile} ] && restart
    ;;
  status)
    if [ -f ${lockfile} ]; then
      echo "${prog} is running in pid(s) $(/sbin/pidof ${prog})."
    else
      echo "${prog} is not running."
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|condrestart}"
    exit 1
    ;;
esac

exit ${RETVAL}
