From 3eeb83d1470309fab44bea65c669ba27b1818796 Mon Sep 17 00:00:00 2001
From: Stephen Kelly <steveire@gmail.com>
Date: Sun, 20 Oct 2013 20:39:16 +0200
Subject: [PATCH] Don't add invalid content to static lib INTERFACE_LINK_LIBRARIES.

Only valid target names or generator expressions may appear in
the target field of a LINK_ONLY expression.
---
 Source/cmTarget.cxx                                |   15 ++++++++++-----
 Source/cmTargetLinkLibrariesCommand.cxx            |    6 +++++-
 .../target_link_libraries/cmp0022/CMakeLists.txt   |    3 +++
 3 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/Source/cmTarget.cxx b/Source/cmTarget.cxx
index b6182ab..24978d9 100644
--- a/Source/cmTarget.cxx
+++ b/Source/cmTarget.cxx
@@ -985,15 +985,20 @@ void cmTarget::MergeLinkLibraries( cmMakefile& mf,
   i += this->PrevLinkedLibraries.size();
   for( ; i != libs.end(); ++i )
     {
+    const char *lib = i->first.c_str();
     // We call this so that the dependencies get written to the cache
-    this->AddLinkLibrary( mf, selfname, i->first.c_str(), i->second );
+    this->AddLinkLibrary( mf, selfname, lib, i->second );
 
     if (this->GetType() == cmTarget::STATIC_LIBRARY)
       {
-      this->AppendProperty("INTERFACE_LINK_LIBRARIES",
-            ("$<LINK_ONLY:" +
-            this->GetDebugGeneratorExpressions(i->first.c_str(), i->second) +
-            ">").c_str());
+      if (cmGeneratorExpression::IsValidTargetName(lib)
+          || cmGeneratorExpression::Find(lib) != std::string::npos)
+        {
+        this->AppendProperty("INTERFACE_LINK_LIBRARIES",
+              ("$<LINK_ONLY:" +
+              this->GetDebugGeneratorExpressions(lib, i->second)
+              + ">").c_str());
+        }
       }
     }
   this->PrevLinkedLibraries = libs;
diff --git a/Source/cmTargetLinkLibrariesCommand.cxx b/Source/cmTargetLinkLibrariesCommand.cxx
index 0707c62..d3db514 100644
--- a/Source/cmTargetLinkLibrariesCommand.cxx
+++ b/Source/cmTargetLinkLibrariesCommand.cxx
@@ -395,10 +395,14 @@ cmTargetLinkLibrariesCommand::HandleLibrary(const char* lib,
       {
       if (this->Target->GetType() == cmTarget::STATIC_LIBRARY)
         {
-        this->Target->AppendProperty("INTERFACE_LINK_LIBRARIES",
+        if (cmGeneratorExpression::IsValidTargetName(lib)
+            || cmGeneratorExpression::Find(lib) != std::string::npos)
+          {
+          this->Target->AppendProperty("INTERFACE_LINK_LIBRARIES",
                   ("$<LINK_ONLY:" +
                   this->Target->GetDebugGeneratorExpressions(lib, llt) +
                   ">").c_str());
+          }
         }
       // Not a 'public' or 'interface' library. Do not add to interface
       // property.
diff --git a/Tests/CMakeCommands/target_link_libraries/cmp0022/CMakeLists.txt b/Tests/CMakeCommands/target_link_libraries/cmp0022/CMakeLists.txt
index 07d7c43..7a5c621 100644
--- a/Tests/CMakeCommands/target_link_libraries/cmp0022/CMakeLists.txt
+++ b/Tests/CMakeCommands/target_link_libraries/cmp0022/CMakeLists.txt
@@ -21,7 +21,10 @@ add_library(staticlib1 STATIC staticlib1.cpp)
 generate_export_header(staticlib1)
 add_library(staticlib2 STATIC staticlib2.cpp)
 generate_export_header(staticlib2)
+add_library(staticlib3 STATIC staticlib3.cpp)
+generate_export_header(staticlib3)
 target_link_libraries(staticlib1 LINK_PUBLIC staticlib2)
+target_link_libraries(staticlib1 LINK_PRIVATE "-L${CMAKE_CURRENT_BINARY_DIR} -Wl,--start-group -lstaticlib3 -Wl,--end-group")
 
 add_executable(staticlib_exe staticlib_exe.cpp)
 target_link_libraries(staticlib_exe staticlib1)
-- 
1.7.0

