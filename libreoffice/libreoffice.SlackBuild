#!/bin/bash
#-- libreoffice for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.br>
# Suggested usage: $ libreoffice.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008, 2009, 2010, 2011, 2012 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.libreoffice.org

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=libreoffice
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-3.5.2}
SVER="$(echo ${VERSION} | cut -d . -f1)"
SVER2="$(echo ${VERSION} | cut -d . -f1-2)"
SVER3="$(echo ${VERSION} | cut -d _ -f1 | cut -d r -f1)"
unset RCV
echo ${VERSION} | grep -q rc && RCV="-r$(echo ${VERSION} | cut -d r -f2)"
# x86 or x86_64
ARCH=${ARCH:-x86_64}
if [ "${ARCH}" = "x86_64" ] ;then
  PARCH=x86-64
else
  ARCH=x86
  PARCH="x86"
fi
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Do no blame TDF if setting YES in these four :)
# Set to YES to use system gcc libs
SB_GCC=${SB_GCC:-YES}
# Set to YES to use system libxml2
SB_CAIRO=${SB_CAIRO:-YES}
# Set to YES to use system nspr/nss
SB_NSS=${SB_NSS:-YES}
# Set to YES to use system python
SB_PY=${SB_PY:-YES}
# Set to YES to use system libxml2
SB_XML=${SB_XML:-NO}

# If you want to disable java support by removing executable permissions
# form OOo's java loader (this will not affect other apps), set this
# variable to "YES"   Default is "NO"
# According to Fred Emmott, this is *highly* desirable on 64 bit systems
SB_JAVA=${SB_JAVA:-NO}

PYABI=$(python -c 'import sys; sys.stdout.write(sys.version[:3])')

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=LibO_${VERSION}_Linux_${PARCH}_install-rpm_en-US.tar.gz
SSRCARCHIVE=${SRCARCHIVE}.asc

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
TDF_MIRROR=${TDF_MIRROR:-http://download.documentfoundation.org}
DL_URL="${TDF_MIRROR}/${NAME}/stable/${SVER3}/rpm/${PARCH//-/_}"
DL_URLB="${TDF_MIRROR}/${NAME}/testing/${SVER3}${RCV}/rpm/${PARCH//-/_}"

# if source is not present, download in source rootdir if possible
for file in ${SRCARCHIVE} ${SSRCARCHIVE} ;do
  test -r ${CWD}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URL}/${file} || ${DL_PROG} ${DL_OPTS} ${DL_URLB}/${file} || exit 1
done

if [ "${ARCH}" = "x86_64" ] ;then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir ${SRCDIR}
cd ${SRCDIR} || exit 1
tar -xvf ${CWD}/${SRCARCHIVE} || exit 1

( cd */RPMS
  mv desktop-integration/${NAME}*-freedesktop-menus-*.noarch.rpm . || exit 1
  rm -rf desktop-integration
  rm -rf userland
  rm -f *onlineupdate*.rpm
  rm -f jre-*.rpm jdk-*.rpm
  for rpm in *.rpm ; do
    rpm2cpio ${rpm} | ( cd ${PKG} && cpio -imdv --no-absolute-filenames )
  done
) || exit 1

cd ${PKG} || exit 1

find ${PKG} -type d | xargs chmod 0755 2> /dev/null
chmod -R u+rw,go+r-w,a-s ${PKG}/

mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}
if [ -d ${PKG}/opt/${NAME}${SVER2} ] ;then
  mv ${PKG}/opt/${NAME}${SVER2} ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME} || exit 1
else
  mv ${PKG}/opt/${NAME} ${PKG}/usr/lib${LIBDIRSUFFIX}/ || exit 1
fi
rmdir ${PKG}/opt

if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh || exit 1
fi

# Better use external
rm -f ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/fonts/truetype/{DejaVu,Liberation}*.ttf

find ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME} \
  | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs chmod 755 2> /dev/null

if [ "${SB_GCC}" = "YES" ] ; then
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/ure/lib
    rm -f libgcc_s.so.*
    rm -f libstdc++.so.*
  )
fi
if [ "${SB_CAIRO}" = "YES" ] ; then
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/program || exit 1
    rm -f libpixman-*.so.*
    rm -f libcairo.so.*
  )
fi

if [ "${SB_NSS}" = "YES" ] ; then
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/program || exit 1
    rm -f libnspr4.so libnspr4.so libplc4.so libplds4.so
    rm -f libnss3.so libnssckbi.so libnssdbm3.so libnssutil3.so
    rm -f libfreebl3.so libsoftokn3.so libssl3.so libsmime3.so
  )
fi
if [ "${SB_PY}" = "YES" ] ; then
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/program || exit 1
    LPYVER=$(echo python-core-* | cut -d- -f3 )
    LPYABI=$(echo ${LPYVER} | cut -d. -f1-2)
    if [ "${PYABI//.}" -eq "26" ] &&  [ "${PYABI//.}" -lt "30" ] ;then
      ln -sf /usr/bin/python${PYABI} \
        ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/program/python 
      rm -rf python.bin libpython${LPYABI}.so.* python-core-${LPYVER}
      sed -i \
        -e "/^PYUNO_LOADER_PYTHONHOME=/s|\$ORIGIN/python-core-${LPYVER}|/usr|g" \
        -e "/^PYUNO_LOADER_PYTHONPATH=/s|\$ORIGIN/python-core-${LPYVER}/lib|/usr/lib${LIBDIRSUFFIX}/python${PYABI}|g" \
        pythonloader.unorc || exit 1
    fi
  )
fi
if [ "${SB_XML}" = "YES" ] ; then
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/ure/lib
    rm -f libxml2.so.*
  )
  ( cd ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/program
    rm -f libxslt.so.*
  )
fi

rm -f ${PKG}/usr/bin/* || exit 1
mkdir -p ${PKG}/usr/bin
( cd ${PKG}/usr/bin
for file in base calc draw impress math writer ;do
cat > libo${file} <<EOF
#!/bin/sh
exec /usr/lib${LIBDIRSUFFIX}/${NAME}/program/soffice --${file} "\$@"
EOF
done

cat > liboviewdoc <<EOF
#!/bin/sh
exec /usr/lib${LIBDIRSUFFIX}/${NAME}/program/soffice --view "\$@"
EOF

cat > unopkg <<EOF
#!/bin/sh
exec /usr/lib${LIBDIRSUFFIX}/${NAME}/program/unopkg "\$@"
EOF

cat > ${NAME}-printeradmin <<EOF
#!/bin/sh
exec /usr/lib${LIBDIRSUFFIX}/${NAME}/program/spadmin "\$@"
EOF

cat > ${NAME} <<EOF
#!/bin/sh
exec /usr/lib${LIBDIRSUFFIX}/${NAME}/program/soffice "\$@"
EOF

chmod 0755 *

for file in libo{base,calc,draw,impress,math,viewdoc,writer} ;do
  ln -s ${file} ${file/libo/oo} || exit 1
done

ln -s ../lib${LIBDIRSUFFIX}/${NAME}/program/soffice soffice
) || exit 1

for file in \
  ${PKG}/usr/share/mime-info/*.{keys,mime} \
  ${PKG}/usr/share/mime/packages/*.xml
do
  mv ${file} ${file//${SVER2}} 2>/dev/null
done

# Fix desktop files
sed -i \
  -e "/^Name.*=/s|\ ${SVER2}||g" \
  -e "/^Icon=/s|${SVER2}||g" \
  -e "/^Exec=/s|${SVER2}||g" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/*.desktop || exit 1

for file in ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/*.desktop ;do
  echo "StartupNotify=true" >> ${file}
  echo "TryExec=libo$(basename ${file} .desktop)" >> ${file}
done

sed -i -e '/^TryExec=/d' \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/printeradmin.desktop || exit 1
echo "NoDisplay=true" >> ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/startcenter.desktop

rm -f ${PKG}/usr/share/applications/* || exit 1
rm -rf ${PKG}/usr/share/applnk* || exit 1
rm -rf ${PKG}/usr/share/mimelnk || exit 1

SB_DFI(){
desktop-file-install --delete-original \
  --vendor="${NAME}" --mode 0644 \
  --dir ${PKG}/usr/share/applications \
  --remove-category="Application" \
  --remove-category="X-Red-Hat-Base" \
  --remove-category="X-SuSE-Core-Office" $@
}

SB_DFI \
  --remove-category="X-MandrivaLinux-MoreApplications-Databases" \
  --add-mime-type="text/x-csv" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/base.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Spreadsheets" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/calc.desktop || exit 1

SB_DFI \
  --remove-category="-MandrivaLinux-Office-Drawing" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/draw.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Presentations" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/impress.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Other" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/{math,startcenter}.desktop || exit 1

SB_DFI \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/printeradmin.desktop || exit 1

SB_DFI \
  --remove-category="X-MandrivaLinux-Office-Wordprocessors" \
  --add-mime-type="text/rtf" \
  ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/share/xdg/writer.desktop || exit 1

# Fix icons.
rm -rf ${PKG}/usr/share/icons/{gnome,locolor} || exit 1
for res in 16 32 48 128 256 ;do
  dir=${PKG}/usr/share/icons/hicolor/${res}x${res}
  for idir in apps mimetypes ;do
    ( cd ${dir}/${idir} || exit 1
      chmod 0644 *.png
      for icon in ${NAME}*.png ;do
        iconfix=${icon//${SVER2}} 2>/dev/null
        mv ${icon} ${iconfix}
        ln -s ${iconfix} ${iconfix/libreoffice/openoffice}
      done
    ) || exit 1
  done
done

# Disable Java support if desired (see above)
if [ "${SB_JAVA}" = "YES" ]; then
  chmod -x ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/ure/bin/javaldx
fi

mkdir -p ${PKG}/etc/default
install -pm0644 ${CWD}/${NAME}.default \
  ${PKG}/etc/default/${NAME}.new || exit 1

# Add a documentation directory:
mkdir -p ${DOCDIR}
cat ${CWD}/ChangeLog.SB > ${DOCDIR}/ChangeLog.SB
cat ${CWD}/README.xinc > ${DOCDIR}/README.xinc
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAME}/{README,LICENSE,*.{html.odt}} ${DOCDIR}/
ln -s $(echo /usr/doc | sed 's,/$,,;s,/[^/]\+,../,g')lib${LIBDIRSUFFIX}/${NAME}/readmes/README_en-US \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/update-desktop-database ]; then
  \${CHROOT} /usr/bin/update-desktop-database 1> /dev/null 2> /dev/null
fi
if [ -x usr/bin/update-mime-database ]; then
  \${CHROOT} /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi
if [ -x usr/bin/gtk-update-icon-cache ]; then
  \${CHROOT} /usr/bin/touch --no-create /usr/share/icons/hicolor >/dev/null 2>&1
  \${CHROOT} /usr/bin/gtk-update-icon-cache -q /usr/share/icons/hicolor > /dev/null 2>&1
fi

config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name '*.new' -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  find etc/ -name '*.new' -a -size 0 -exec echo rm -f {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
    ${CWD}/README.xinc ${CWD}/*.default ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
    ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/*.* \
    ${SBDIR}/patches
  rmdir ${SBDIR}/patches
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n --prepend ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
