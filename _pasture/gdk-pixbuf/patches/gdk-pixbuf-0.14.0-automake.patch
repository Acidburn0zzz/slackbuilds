--- gdk-pixbuf-0.21.0/gdk-pixbuf/Makefile.am.automake	Mon Nov 18 10:40:07 2002
+++ gdk-pixbuf-0.21.0/gdk-pixbuf/Makefile.am	Mon Nov 18 10:40:07 2002
@@ -18,7 +18,7 @@
 
 libgnomecanvaspixbuf_la_LDFLAGS = -version-info 1:0:0 $(EXTRA_GNOME_LIBS)
 
-libexecdir = $(libdir)/gdk-pixbuf/loaders
+loadersdir = $(libdir)/gdk-pixbuf/loaders
 
 #
 # The PNG plugin.
@@ -118,7 +118,7 @@
 
 if BUILD_DYNAMIC_MODULES
 
-libexec_LTLIBRARIES = 	\
+loaders_LTLIBRARIES = 	\
 	$(PNG_LIB)	\
 	$(JPEG_LIB)	\
 	$(GIF_LIB)	\
@@ -134,7 +134,7 @@
 extra_sources = 
 
 else
-libexec_LTLIBRARIES = 
+loaders_LTLIBRARIES = 
 
 extra_sources = $(libpixbufloader_png_la_SOURCES) 	\
 		$(libpixbufloader_jpeg_la_SOURCES) 	\
@@ -159,7 +159,7 @@
 	-I$(top_builddir)/gdk-pixbuf \
 	$(X11_CFLAGS) $(GLIB_CFLAGS) $(GTK_CFLAGS) $(GNOME_CFLAGS)
 
-AM_CPPFLAGS = "-DPIXBUF_LIBDIR=\"$(libexecdir)\""
+AM_CPPFLAGS = "-DPIXBUF_LIBDIR=\"$(loadersdir)\""
 
 LDADDS = libgdk_pixbuf.la $(GLIB_LIBS) $(GTK_LIBS) $(STATIC_LIB_DEPS)
 
--- gdk-pixbuf-0.21.0/doc/Makefile.am.automake	Fri Oct 26 00:14:34 2001
+++ gdk-pixbuf-0.21.0/doc/Makefile.am	Mon Nov 18 10:40:07 2002
@@ -157,7 +157,6 @@
 	fi)
 #	  echo '-- Installing $(srcdir)/html/index.sgml' ; \
 #	  $(INSTALL_DATA) $(srcdir)/html/index.sgml $(DESTDIR)$(TARGET_DIR); \
-
 #
 # Require gtk-doc when making dist
 #
--- gdk-pixbuf-0.21.0/configure.in.automake	Thu Oct 17 18:19:03 2002
+++ gdk-pixbuf-0.21.0/configure.in	Mon Nov 18 10:44:04 2002
@@ -17,6 +17,7 @@
 AC_SUBST(GDK_PIXBUF_MICRO)
 AC_SUBST(GDK_PIXBUF_VERSION)
 AM_PROG_LIBTOOL
+AM_PROG_AS
 
 AC_PROG_CC
 AC_ISC_POSIX
@@ -63,6 +64,7 @@
 
 AC_SUBST(GNOME_LIBS)
 AC_SUBST(GNOME_CFLAGS)
+AC_SUBST(X11_LIBS)
 
 AC_MSG_CHECKING(whether to build gmodulized gdk-pixbuf)
 
@@ -146,27 +148,47 @@
 
 dnl Test for libtiff
   if test -z "$LIBTIFF"; then
-    AC_CHECK_LIB(tiff, TIFFReadScanline,
-      AC_CHECK_HEADER(tiffio.h,
-        TIFF='tiff'; LIBTIFF='-ltiff',
-        AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***)),
-      AC_CHECK_LIB(tiff, TIFFWriteScanline,
-        AC_CHECK_HEADER(tiffio.h,
-          TIFF='tiff'; LIBTIFF='-ltiff -ljpeg -lz',
-          AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***)),
-        AC_CHECK_LIB(tiff34, TIFFFlushData,
-          AC_CHECK_HEADER(tiffio.h,
-            TIFF='tiff'; LIBTIFF='-ltiff34 -ljpeg -lz',
-            AC_MSG_WARN(*** TIFF loader will not be built (TIFF header files not found) ***)),
-        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***), -ljpeg -lz -lm), -ljpeg -lz -lm), -lm)
+    AC_CHECK_LIB(tiff, TIFFReadScanline,[
+      AC_CHECK_HEADER(tiffio.h,[
+        TIFF='tiff'; LIBTIFF='-ltiff'
+      ],[
+        AC_MSG_WARN([*** TIFF loader will not be built (TIFF header files not found) ***])
+      ])
+    ],[
+      AC_CHECK_LIB(tiff, TIFFWriteScanline,[
+        AC_CHECK_HEADER(tiffio.h,[
+          TIFF='tiff'; LIBTIFF='-ltiff -ljpeg -lz'
+        ],[
+          AC_MSG_WARN([*** TIFF loader will not be built (TIFF header files not found) ***])
+        ])
+      ],[
+        AC_CHECK_LIB(tiff34, TIFFFlushData,[
+          AC_CHECK_HEADER(tiffio.h,[
+            TIFF='tiff'; LIBTIFF='-ltiff34 -ljpeg -lz'
+          ],[
+            AC_MSG_WARN([*** TIFF loader will not be built (TIFF header files not found) ***])
+          ])
+        ],[
+        AC_MSG_WARN([*** TIFF plug-in will not be built (TIFF library not found) ***])
+  ],[
+      -ljpeg -lz -lm
+    ])
+       ],[
+      -ljpeg -lz -lm
+       ])
+       ],[
+      -lm
+       ])
   fi
 
 dnl Test for libjpeg
   if test -z "$LIBJPEG"; then
-    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
-      jpeg_ok=yes,
+    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,[
+      jpeg_ok=yes
+      ],[
       jpeg_ok=no
-      AC_MSG_WARN(*** JPEG loader will not be built (JPEG library not found) ***))
+      AC_MSG_WARN([*** JPEG loader will not be built (JPEG library not found) ***])
+      ])
     if test "$jpeg_ok" = yes; then
       AC_MSG_CHECKING([for jpeglib.h])
       AC_TRY_CPP(
@@ -174,41 +196,47 @@
 #undef PACKAGE
 #undef VERSION
 #include <jpeglib.h>],
-        jpeg_ok=yes,
-        jpeg_ok=no)
-      AC_MSG_RESULT($jpeg_ok)
+        [jpeg_ok=yes],
+        [jpeg_ok=no])
+      AC_MSG_RESULT([$jpeg_ok])
       if test "$jpeg_ok" = yes; then
         LIBJPEG='-ljpeg'
-        AC_CHECK_LIB(jpeg, jpeg_simple_progression,     
-          AC_DEFINE(HAVE_PROGRESSIVE_JPEG),
-          AC_MSG_WARN(JPEG library does not support progressive saving.))
+        AC_CHECK_LIB(jpeg, jpeg_simple_progression,[     
+          AC_DEFINE(HAVE_PROGRESSIVE_JPEG)
+        ],[
+          AC_MSG_WARN([JPEG library does not support progressive saving.])
+        ])
       else
-          AC_MSG_WARN(*** JPEG loader will not be built (JPEG header file not found) ***)
+          AC_MSG_WARN([*** JPEG loader will not be built (JPEG header file not found) ***])
       fi
     fi
   fi
 
 dnl Test for libpng
   if test -z "$LIBPNG"; then
-    AC_CHECK_LIB(png, png_read_info,
-      AC_CHECK_HEADER(png.h,
-        png_ok=yes,
-        png_ok=no),
-      AC_MSG_WARN(*** PNG loader will not be built (PNG library not found) ***), -lz -lm)
+    AC_CHECK_LIB(png, png_read_info,[
+      AC_CHECK_HEADER(png.h,[
+        png_ok=yes
+        ],[
+        png_ok=no
+        ])
+      ],[
+      AC_MSG_WARN([*** PNG loader will not be built (PNG library not found) ***])
+      ],[ -lz -lm])
     if test "$png_ok" = yes; then
       AC_MSG_CHECKING([for png_structp in png.h])
       AC_TRY_COMPILE([#include <png.h>],
         [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
-        png_ok=yes,
-        png_ok=no)
-      AC_MSG_RESULT($png_ok)
+        [png_ok=yes],
+        [png_ok=no])
+      AC_MSG_RESULT([$png_ok])
       if test "$png_ok" = yes; then
         PNG='png'; LIBPNG='-lpng -lz'
       else
-        AC_MSG_WARN(*** PNG loader will not be built (PNG library is too old) ***)
+        AC_MSG_WARN([*** PNG loader will not be built (PNG library is too old) ***])
       fi
     else
-     AC_MSG_WARN(*** PNG loader will not be built (PNG header file not found) ***)
+     AC_MSG_WARN([*** PNG loader will not be built (PNG header file not found) ***])
     fi
   fi
 
