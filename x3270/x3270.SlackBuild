#!/bin/sh
#-- x3270 for Slackware --
# Build script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ x3270.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.geocities.com/SiliconValley/Peaks/7814

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set YES for native build with gcc >= 4.2
SB_NATIVE=${SB_NATIVE:-NO}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=x3270
NAME2=c3270
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-3.3.8p1}
SVER=$(echo ${VERSION} | cut -d. -f1-2)
if [ "${SB_NATIVE}" = "YES" ] ;then
  ARCH=${ARCH:-$(uname -m)}
else
  ARCH=${ARCH:-i686}
fi
SLKTARGET=${SLKTARGET:-i486}
SLKDTARGET=${SLKDTARGET:-slackware}
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-2}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${SVER}
SRCDIR2=${NAME2}-${SVER}
SRCARCHIVE=${NAME}-${VERSION}.tgz
SRCARCHIVE2=${NAME2}-${VERSION}.tgz

DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://x3270.bgp.nu/download"

# if source is not present, download in source rootdir if possible, or in /tmp
for file in ${SRCARCHIVE} ${SRCARCHIVE2} ;do
  if ! test -r ${file}; then
    test -r ${CWD}/${file} || wget ${DL_OPTS} ${DL_URL}/${file} || exit 1
  fi
done

if [ "${SB_NATIVE}" = "YES" ] ;then
  SLKCFLAGS="-O2 -march=native -mtune=native ${SB_ECFLAGS} -pipe"
else
  case "${ARCH}" in
    i[3-6]86)    SLKCFLAGS="-O2 -march=${ARCH} -mtune=i686"
                 ;;
    s390)        SLKCFLAGS="-O2"
                 ;;
    x86_64)      SLKCFLAGS="-O2 -fPIC"
                 ;;
  esac
fi

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
if $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE} || exit 1
fi
cd ${SRCDIR} || exit 1
if $(file -L ${CWD}/${SRCARCHIVE2} | grep -q ": bzip2"); then
  tar -xjvf ${CWD}/${SRCARCHIVE2} || exit 1
elif $(file -L ${CWD}/${SRCARCHIVE2} | grep -q ": gzip"); then
  tar -xzvf ${CWD}/${SRCARCHIVE2} || exit 1
fi

chmod -R u+w,go+r-w,a-s .

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1
zcat ${CWD}/${NAME}-3.3.6-redhat.patch.gz | patch -p1 -E --backup --verbose || exit 1
zcat ${CWD}/${NAME}-3.3-syntax.patch.gz | patch -p1 -E --backup --verbose || exit 1

# use slkcflags for x3270if
sed -i -e 's/ -o x3270if x3270if.c/ \$(CCOPTIONS) -o x3270if x3270if.c/g' Imakefile.in || exit 1
# Fix end of line encodings
sed -i -e 's/\n//' html/Keymap.html html/Build.html

SB_CONFIGURE(){
libtoolize --copy --force || exit 1
autoconf || exit 1
CFLAGS="${SLKCFLAGS}" \
./configure \
  --sysconfdir=/etc/X11 \
  --localstatedir=/var/lib \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --docdir=/usr/doc/${NAME}-${VERSION} \
  --build=${SLKTARGET}-${SLKDTARGET}-linux $@
}

SB_CONFIGURE \
  --prefix=/usr/ \
  --x-includes=/usr/include/X11 \
  --x-libraries=/usr/lib/X11 || exit 1

xmkmf || exit 1
make Makefiles || exit 1
make includes || exit 1
make depend || exit 1
make -j${NJOBS} CCOPTIONS="${SLKCFLAGS}" LOCAL_LDFLAGS="${LDFLAGS}" || exit 1
make install DESTDIR=${PKG} || exit 1

mv ${PKG}/etc/X11/x3270/ibm_hosts ${PKG}/etc/X11/x3270/ibm_hosts.new || exit 1
find ${PKG} -name fonts.dir -exec rm -rf {} \;
if [ -d ${PKG}/usr/lib/X11/fonts/misc ]; then
  mkdir -p ${PKG}/usr/share/fonts
  mv ${PKG}/usr/lib/X11/fonts/misc ${PKG}/usr/share/fonts
  rmdir ${PKG}/usr/lib/X11/fonts/misc 2> /dev/null
  rmdir ${PKG}/usr/lib/X11/fonts 2> /dev/null
  rmdir ${PKG}/usr/lib/X11 2> /dev/null
  rmdir ${PKG}/usr/lib 2> /dev/null
fi

mkdir -p ${PKG}/etc/X11/app-defaults
cat X3270.xad > ${PKG}/etc/X11/app-defaults/X3270 || exit 1

mkdir -p ${PKG}/usr/man/man{1,5}
for file in x3270-script x3270 x3270if ; do
  install -pm644 ${file}.man ${PKG}/usr/man/man1/${file}.1 || exit 1
done
install -pm644 ibm_hosts.man ${PKG}/usr/man/man5/ibm_hosts.5 || exit 1


( cd ${SRCDIR2} || exit 1

  SB_CONFIGURE \
  --prefix=/usr || exit 1
  make -j${NJOBS} || exit 1

  install -m755 c3270 ${PKG}/usr/bin/ || exit 1
  install -pm644 c3270.man ${PKG}/usr/man/man1/c3270.1 || exit 1
) || exit 1

( cd ${PKG}
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p ${PKG}/usr/share/applications
cat > ${PKG}/usr/share/applications/${NAME}.desktop <<EOF
[Desktop Entry]
Name=${NAME}
Type=Application
Comment=3270 terminal emulator
Exec=${NAME}
Icon=${NAME}
StartupNotify=true
Categories=System;TerminalEmulator;
EOF

mkdir -p ${PKG}/usr/share/icons/hicolor/48x48/apps
zcat ${CWD}/${NAME}.png.gz > \
     ${PKG}/usr/share/icons/hicolor/48x48/apps/${NAME}.png || exit 1

rm -f Examples/*~
# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  LICENSE README* Examples html ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
#!/bin/sh
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name *.new -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

cat >> ${PKG}/install/doinst.sh <<EOF
if [ -x /usr/bin/fc-cache ] ;then
  /usr/bin/fc-cache -f
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/${NAME}-*.patch.gz ${CWD}/${NAME}.png.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
  sed -i "/^VERSION=/s/:-.*}/:-$VERSION}/
          /^BUILD=/s/:-.*}/:-$BUILD}/
          /^  ARCH=/s/:-.*}/:-$ARCH}/
          " ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.tgz "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
