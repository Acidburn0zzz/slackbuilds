diff -up ffms-2.17-src/src/core/audiosource.cpp.ffmpeg ffms-2.17-src/src/core/audiosource.cpp
--- ffms-2.17-src/src/core/audiosource.cpp.ffmpeg	2013-03-16 23:33:53.109116605 -0300
+++ ffms-2.17-src/src/core/audiosource.cpp	2013-03-16 23:36:05.309154199 -0300
@@ -23,6 +23,10 @@
 #include <algorithm>
 #include <cassert>
 
+#	if (LIBAVCODEC_VERSION_INT) >= (AV_VERSION_INT(55,0,100))
+#define AVCODEC_MAX_AUDIO_FRAME_SIZE 192000
+#	endif
+
 FFMS_AudioSource::FFMS_AudioSource(const char *SourceFile, FFMS_Index &Index, int Track)
 : Delay(0)
 , MaxCacheBlocks(50)
diff -up ffms-2.17-src/src/core/codectype.cpp.ffmpeg ffms-2.17-src/src/core/codectype.cpp
--- ffms-2.17-src/src/core/codectype.cpp.ffmpeg	2013-03-16 23:37:33.041597698 -0300
+++ ffms-2.17-src/src/core/codectype.cpp	2013-03-16 23:38:47.898764665 -0300
@@ -25,7 +25,7 @@
 
 typedef struct CodecTags {
 	char str[20];
-	CodecID id;
+	AVCodecID id;
 } CodecTags;
 
 static const CodecTags mkv_codec_tags[] = {
@@ -92,7 +92,7 @@ static const CodecTags mkv_codec_tags[]
 };
 
 typedef struct AVCodecTag {
-	enum CodecID id;
+	enum AVCodecID id;
 	unsigned int tag;
 } AVCodecTag;
 
@@ -400,7 +400,7 @@ const char *GetLAVCSampleFormatName(AVSa
 	}
 }
 
-CodecID MatroskaToFFCodecID(char *Codec, void *CodecPrivate, unsigned int FourCC, unsigned int BitsPerSample) {
+AVCodecID MatroskaToFFCodecID(char *Codec, void *CodecPrivate, unsigned int FourCC, unsigned int BitsPerSample) {
 	/* Look up native codecs */
 	for(int i = 0; mkv_codec_tags[i].id != CODEC_ID_NONE; i++){
 		if(!strncmp(mkv_codec_tags[i].str, Codec,
@@ -408,7 +408,7 @@ CodecID MatroskaToFFCodecID(char *Codec,
 
 				// Uncompressed and exotic format fixup
 				// This list is incomplete
-				CodecID CID = mkv_codec_tags[i].id;
+				AVCodecID CID = mkv_codec_tags[i].id;
 				switch (CID) {
 					case CODEC_ID_PCM_S16LE:
 						switch (BitsPerSample) {
diff -up ffms-2.17-src/src/core/codectype.h.ffmpeg ffms-2.17-src/src/core/codectype.h
--- ffms-2.17-src/src/core/codectype.h.ffmpeg	2013-03-16 23:36:32.566388930 -0300
+++ ffms-2.17-src/src/core/codectype.h	2013-03-16 23:37:17.484888118 -0300
@@ -27,5 +27,5 @@ extern "C" {
 #include "ffmscompat.h"
 
 FFMS_TrackType HaaliTrackTypeToFFTrackType(int TT);
-CodecID MatroskaToFFCodecID(char *Codec, void *CodecPrivate, unsigned int FourCC = 0, unsigned int BitsPerSample = 0);
+AVCodecID MatroskaToFFCodecID(char *Codec, void *CodecPrivate, unsigned int FourCC = 0, unsigned int BitsPerSample = 0);
 const char *GetLAVCSampleFormatName(AVSampleFormat s);
diff -up ffms-2.17-src/src/core/indexing.cpp.ffmpeg ffms-2.17-src/src/core/indexing.cpp
--- ffms-2.17-src/src/core/indexing.cpp.ffmpeg	2013-03-16 23:39:07.429633721 -0300
+++ ffms-2.17-src/src/core/indexing.cpp	2013-03-16 23:39:27.194453305 -0300
@@ -61,6 +61,10 @@ void av_sha_final(struct AVSHA* context,
 	#define ARCH 5
 #endif
 
+#	if (LIBAVCODEC_VERSION_INT) >= (AV_VERSION_INT(55,0,100))
+#define AVCODEC_MAX_AUDIO_FRAME_SIZE 192000
+#	endif
+
 extern bool HasHaaliMPEG;
 extern bool HasHaaliOGG;
 
diff -up ffms-2.17-src/src/core/matroskaaudio.cpp.ffmpeg ffms-2.17-src/src/core/matroskaaudio.cpp
--- ffms-2.17-src/src/core/matroskaaudio.cpp.ffmpeg	2013-03-16 23:39:43.685965229 -0300
+++ ffms-2.17-src/src/core/matroskaaudio.cpp	2013-03-16 23:40:20.638149600 -0300
@@ -45,7 +45,7 @@ FFMatroskaAudio::FFMatroskaAudio(const c
 	CodecContext.reset(avcodec_alloc_context3(NULL), DeleteMatroskaCodecContext);
 	assert(CodecContext);
 
-	AVCodec *Codec = avcodec_find_decoder(MatroskaToFFCodecID(TI->CodecID, TI->CodecPrivate, 0, TI->AV.Audio.BitDepth));
+	AVCodec *Codec = avcodec_find_decoder(MatroskaToFFCodecID(TI->AVCodecID, TI->CodecPrivate, 0, TI->AV.Audio.BitDepth));
 	if (!Codec) {
 		mkv_Close(MF);
 		throw FFMS_Exception(FFMS_ERROR_DECODING, FFMS_ERROR_CODEC, "Audio codec not found");
diff -up ffms-2.17-src/src/core/matroskaindexer.cpp.ffmpeg ffms-2.17-src/src/core/matroskaindexer.cpp
--- ffms-2.17-src/src/core/matroskaindexer.cpp.ffmpeg	2013-03-16 23:40:40.416966267 -0300
+++ ffms-2.17-src/src/core/matroskaindexer.cpp	2013-03-16 23:40:49.304086602 -0300
@@ -50,7 +50,7 @@ FFMatroskaIndexer::FFMatroskaIndexer(con
 
 	for (unsigned int i = 0; i < mkv_GetNumTracks(MF); i++) {
 		TrackInfo *TI = mkv_GetTrackInfo(MF, i);
-		Codec[i] = avcodec_find_decoder(MatroskaToFFCodecID(TI->CodecID, TI->CodecPrivate, 0, TI->AV.Audio.BitDepth));
+		Codec[i] = avcodec_find_decoder(MatroskaToFFCodecID(TI->AVCodecID, TI->CodecPrivate, 0, TI->AV.Audio.BitDepth));
 	}
 }
 
diff -up ffms-2.17-src/src/core/matroskavideo.cpp.ffmpeg ffms-2.17-src/src/core/matroskavideo.cpp
--- ffms-2.17-src/src/core/matroskavideo.cpp.ffmpeg	2013-03-16 23:41:35.742264710 -0300
+++ ffms-2.17-src/src/core/matroskavideo.cpp	2013-03-16 23:43:10.683184473 -0300
@@ -71,7 +71,7 @@ FFMatroskaVideo::FFMatroskaVideo(const c
 		CodecContext->thread_count = 1;
 #endif
 
-	Codec = avcodec_find_decoder(MatroskaToFFCodecID(TI->CodecID, TI->CodecPrivate));
+	Codec = avcodec_find_decoder(MatroskaToFFCodecID(TI->AVCodecID, TI->CodecPrivate));
 	if (Codec == NULL)
 		throw FFMS_Exception(FFMS_ERROR_DECODING, FFMS_ERROR_CODEC,
 			"Video codec not found");
diff -up ffms-2.17-src/src/core/utils.cpp.ffmpeg ffms-2.17-src/src/core/utils.cpp
--- ffms-2.17-src/src/core/utils.cpp.ffmpeg	2013-03-16 23:43:32.381595241 -0300
+++ ffms-2.17-src/src/core/utils.cpp	2013-03-16 23:43:45.443832574 -0300
@@ -256,7 +256,7 @@ void InitializeCodecContextFromMatroskaT
 	uint8_t *PrivateDataSrc = static_cast<uint8_t *>(TI->CodecPrivate);
 	size_t PrivateDataSize = TI->CodecPrivateSize;
 	size_t BIHSize = sizeof(FFMS_BITMAPINFOHEADER); // 40 bytes
-	if (!strncmp(TI->CodecID, "V_MS/VFW/FOURCC", 15) && PrivateDataSize >= BIHSize) {
+	if (!strncmp(TI->AVCodecID, "V_MS/VFW/FOURCC", 15) && PrivateDataSize >= BIHSize) {
 		// For some reason UTVideo requires CodecContext->codec_tag (i.e. the FourCC) to be set.
 		// Fine, it can't hurt to set it, so let's go find it.
 		// In a V_MS/VFW/FOURCC track, the codecprivate starts with a BITMAPINFOHEADER. If you treat that struct
