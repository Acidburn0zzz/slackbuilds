--- slip/util/files.py.orig	2010-10-11 07:17:26.000000000 -0300
+++ slip/util/files.py	2011-06-23 13:07:17.117427791 -0300
@@ -24,7 +24,6 @@ __all__ = ["issamefile", "linkfile", "co
            "overwrite_safely"]
 
 import os
-import selinux
 import shutil
 import tempfile
 import errno
@@ -85,7 +84,7 @@ def linkfile(srcpath, dstpath):
         os.rename(_tmpfilename, dstpath)
 
 
-def copyfile(srcpath, dstpath, copy_mode_from_dst=True, run_restorecon=True):
+def copyfile(srcpath, dstpath, copy_mode_from_dst=True):
     """Copy srcpath to dstpath.
 
     Abort operation if e.g. not enough space is available.  Attempt to
@@ -135,12 +134,8 @@ def copyfile(srcpath, dstpath, copy_mode
 
     os.rename(dsttmpfile.name, dstpath)
 
-    if run_restorecon and selinux.is_selinux_enabled() > 0:
-        selinux.restorecon(dstpath)
-
 
-def linkorcopyfile(srcpath, dstpath, copy_mode_from_dst=True,
-    run_restorecon=True):
+def linkorcopyfile(srcpath, dstpath, copy_mode_from_dst=True):
     """First attempt to hardlink srcpath to dstpath, if hardlinking isn't
     possible, attempt copying srcpath to dstpath."""
 
@@ -159,12 +154,12 @@ def linkorcopyfile(srcpath, dstpath, cop
 
             pass
 
-    copyfile(srcpath, dstpath, copy_mode_from_dst, run_restorecon)
+    copyfile(srcpath, dstpath, copy_mode_from_dst)
 
-def overwrite_safely(path, content, preserve_mode=True, preserve_context=True):
+def overwrite_safely(path, content, preserve_mode=True):
     """Safely overwrite a file by creating a temporary file in the same
     directory, writing it, moving it over the original file, eventually
-    preserving file mode and SELinux context."""
+    preserving file mode."""
 
     path = os.path.realpath(path)
     dir_ = os.path.dirname(path)
@@ -176,9 +171,6 @@ def overwrite_safely(path, content, pres
 
     exists = os.path.exists(path)
 
-    if preserve_context and selinux.is_selinux_enabled() <= 0:
-        preserve_context = False
-
     try:
         fd, tmpname = tempfile.mkstemp(prefix=base + os.path.extsep,
                                        dir=dir_)
@@ -186,11 +178,6 @@ def overwrite_safely(path, content, pres
         if exists and preserve_mode:
             shutil.copymode(path, tmpname)
 
-        if exists and preserve_context:
-            ret, ctx = selinux.getfilecon(path)
-            if ret < 0:
-                raise RuntimeError("getfilecon(%r) failed" % path)
-
         f = os.fdopen(fd, "w")
         fd = None
 
@@ -201,12 +188,6 @@ def overwrite_safely(path, content, pres
 
         os.rename(tmpname, path)
 
-        if preserve_context:
-            if exists:
-                selinux.setfilecon(path, ctx)
-            else:
-                selinux.restorecon(path)
-
     finally:
         if f:
             f.close()
