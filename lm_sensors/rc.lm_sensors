#!/bin/sh
#
# chkconfig: 2345 26 74
# description: sensors is used for monitoring motherboard sensor values.
# config: /etc/lm_sensors/lm_sensors
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# See also the lm_sensors homepage at:
#     http://www2.lm-sensors.nu/~lm78/index.html

# It uses a config file /etc/lm_sensors/lm_sensors that contains the modules to
# be loaded/unloaded. That file is sourced into this one.

# The format of that file a shell script that simply defines the modules
# in order as normal shell variables with the special names:
#    MODULE_1, MODULE_2, MODULE_3, etc.

PSENSORS=/usr/bin/sensors

[ -x ${PSENSORS} ] || exit 0

RETVAL=0
prog="lm_sensors"
lockfile=/var/lock/subsys/${prog}

# This functions checks if sensor support is compiled into the kernel, if
# sensors are configured, and loads the config file
check_sensors() {
  if grep -q sysfs /proc/mounts; then
    WITHSYS=1
  else
    WITHSYS=0
  fi

  if [ ${WITHSYS} == "0" ]; then
    # If sensors isn't supported by the kernel, try loading the module...
    [ -e /proc/sys/dev/sensors ] || /sbin/modprobe i2c-proc >/dev/null 2>&1

    # Don't bother if /proc/sensors still doesn't exist, kernel doesn't have
    # support for sensors.
    if ! [ -e /proc/sys/dev/sensors ]; then
      echo -n "Starting ${prog}: kernel does not have sensors support"
      echo -e "\t[FAILED]\r"
      exit 5
    fi

    # If sensors was not already running, unload the module...
    [ -e ${lockfile} ] || /sbin/modprobe -r i2c-proc >/dev/null 2>&1
  fi

  CONFIG=/etc/default/lm_sensors
  if ! [ -r "${CONFIG}" ] || ! grep '^HWMON_MODULES' ${CONFIG} >/dev/null 2>&1; then
    echo -n "Starting ${prog}: not configured, run sensors-detect"
    echo -e "\t[FAILED]\r"
    exit 6
  fi

  # Load config file
  . "${CONFIG}"
}

start() {
  check_sensors

  echo -n "Starting ${prog}: "

  for module in ${BUS_MODULES} ${HWMON_MODULES} ; do
    /sbin/modprobe ${module} >/dev/null 2>&1
  done
  ${PSENSORS} -s

  RETVAL=$?
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop() {
  check_sensors
  
  echo -n "Stopping ${prog}: "

  for module in ${HWMON_MODULES} ${BUS_MODULES} ; do
    /sbin/modprobe -r ${module} >/dev/null 2>&1
  done

  if [ ${WITHSYS} == "0" ]; then
    /sbin/modprobe -r i2c-proc >/dev/null 2>&1
  fi

  RETVAL=$?
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

dostatus() {
  ${PSENSORS}
  RETVAL=$?
  if [ ${RETVAL} -ne 0 ]; then
    RETVAL=3
  fi
  return ${RETVAL}
}

restart() {
  stop
  start
  RETVAL=$?
  return ${RETVAL}
}

condrestart() {
  [ -e ${lockfile} ] && restart
}

# See how we were called.
case "$1" in
  start|stop)
    $1
    ;;
  status)
    dostatus
    ;;
  restart|reload)
    restart
    ;;
  condrestart)
    condrestart
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart}"
    exit 1
    ;;
esac

exit ${RETVAL}
