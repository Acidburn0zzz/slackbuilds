--- evince-2.29.91/cut-n-paste/gimpcellrenderertoggle/gimpcellrenderertoggle.c
+++ evince-2.29.91/cut-n-paste/gimpcellrenderertoggle/gimpcellrenderertoggle.c
@@ -315,7 +315,7 @@ gimp_cell_renderer_toggle_render (GtkCellRenderer      *cell,
     }
   else if ((flags & GTK_CELL_RENDERER_SELECTED) == GTK_CELL_RENDERER_SELECTED)
     {
-      if (GTK_WIDGET_HAS_FOCUS (widget))
+      if (gtk_widget_has_focus (widget))
         state = GTK_STATE_SELECTED;
       else
         state = GTK_STATE_ACTIVE;
--- evince-2.29.91/cut-n-paste/toolbar-editor/egg-editable-toolbar.c
+++ evince-2.29.91/cut-n-paste/toolbar-editor/egg-editable-toolbar.c
@@ -872,7 +872,7 @@ toolbar_visibility_refresh (EggEditableToolbar *etoolbar)
   
   priv->visibility_id = gtk_ui_manager_new_merge_id (priv->manager);
   
-  showing = GTK_WIDGET_VISIBLE (etoolbar);
+  showing = gtk_widget_get_visible (etoolbar);
   
   n_toolbars = egg_toolbars_model_n_toolbars (priv->model);
   for (i = 0; i < n_toolbars; i++)
@@ -954,7 +954,7 @@ toolbar_visibility_refresh (EggEditableToolbar *etoolbar)
       gtk_action_set_visible (GTK_ACTION (action), (egg_toolbars_model_get_flags (priv->model, i) 
 						    & EGG_TB_MODEL_NOT_REMOVABLE) == 0);
       gtk_action_set_sensitive (GTK_ACTION (action), showing);
-      gtk_toggle_action_set_active (action, GTK_WIDGET_VISIBLE
+      gtk_toggle_action_set_active (action, gtk_widget_get_visible
 				    (get_dock_nth (etoolbar, i)));
       
       for (list = priv->visibility_paths; list != NULL; list = g_list_next (list))
--- evince-2.29.91/libmisc/ev-page-action.c
+++ evince-2.29.91/libmisc/ev-page-action.c
@@ -193,7 +193,7 @@ ev_page_action_grab_focus (EvPageAction *page_action)
 
 		proxy = EV_PAGE_ACTION_WIDGET (proxies->data);
 
-		if (GTK_WIDGET_MAPPED (GTK_WIDGET (proxy)))
+		if (gtk_widget_get_mapped (GTK_WIDGET (proxy)))
 			ev_page_action_widget_grab_focus (proxy);
 	}
 }
--- evince-2.29.91/libview/ev-annotation-window.c
+++ evince-2.29.91/libview/ev-annotation-window.c
@@ -249,7 +249,7 @@ ev_annotation_window_set_resize_cursor (GtkWidget          *widget,
 	if (!widget->window)
 		return;
 
-	if (GTK_WIDGET_IS_SENSITIVE (widget)) {
+	if (gtk_widget_is_sensitive (widget)) {
 		GdkDisplay *display = gtk_widget_get_display (widget);
 		GdkCursor  *cursor;
 
@@ -627,7 +627,7 @@ ev_annotation_window_grab_focus (EvAnnotationWindow *window)
 {
 	g_return_if_fail (EV_IS_ANNOTATION_WINDOW (window));
 
-	if (!GTK_WIDGET_HAS_FOCUS (window->text_view)) {
+	if (!gtk_widget_has_focus (window->text_view)) {
 		gtk_widget_grab_focus (GTK_WIDGET (window));
 		send_focus_change (window->text_view, TRUE);
 	}
@@ -638,7 +638,7 @@ ev_annotation_window_ungrab_focus (EvAnnotationWindow *window)
 {
 	g_return_if_fail (EV_IS_ANNOTATION_WINDOW (window));
 
-	if (GTK_WIDGET_HAS_FOCUS (window->text_view)) {
+	if (gtk_widget_has_focus (window->text_view)) {
 		send_focus_change (window->text_view, FALSE);
 	}
 
--- evince-2.29.91/libview/ev-pixbuf-cache.c
+++ evince-2.29.91/libview/ev-pixbuf-cache.c
@@ -479,7 +479,7 @@ ev_pixbuf_cache_clear_job_sizes (EvPixbufCache *pixbuf_cache,
 static void
 get_selection_colors (GtkWidget *widget, GdkColor **text, GdkColor **base)
 {
-    if (GTK_WIDGET_HAS_FOCUS (widget)) {
+    if (gtk_widget_has_focus (widget)) {
 	*text = &widget->style->text [GTK_STATE_SELECTED];
 	*base = &widget->style->base [GTK_STATE_SELECTED];
     } else {
--- evince-2.29.91/libview/ev-view-presentation.c
+++ evince-2.29.91/libview/ev-view-presentation.c
@@ -830,7 +830,7 @@ ev_view_presentation_set_cursor (EvViewPresentation *pview,
 		return;
 
 	widget = GTK_WIDGET (pview);
-	if (!GTK_WIDGET_REALIZED (widget))
+	if (!gtk_widget_get_realized (widget))
 		gtk_widget_realize (widget);
 
 	pview->cursor = view_cursor;
@@ -995,7 +995,7 @@ ev_view_presentation_draw_end_page (EvViewPresentation *pview)
 
 	gtk_paint_layout (widget->style,
 			  widget->window,
-			  GTK_WIDGET_STATE (widget),
+			  gtk_widget_get_state (widget),
 			  FALSE,
 			  &area,
 			  widget,
--- evince-2.29.91/libview/ev-view.c
+++ evince-2.29.91/libview/ev-view.c
@@ -2398,7 +2398,7 @@ ev_view_window_child_move_with_parent (EvView    *view,
 		ev_view_window_child_move (view, child, dest_x, dest_y);
 	}
 
-	if (child->visible && !GTK_WIDGET_VISIBLE (window))
+	if (child->visible && !gtk_widget_get_visible (window))
 		gtk_widget_show (window);
 }
 
@@ -3250,7 +3250,7 @@ ev_view_button_press_event (GtkWidget      *widget,
 	if (!view->document)
 		return FALSE;
 	
-	if (!GTK_WIDGET_HAS_FOCUS (widget)) {
+	if (!gtk_widget_has_focus (widget)) {
 		gtk_widget_grab_focus (widget);
 	}
 
@@ -3762,7 +3762,7 @@ ev_view_key_press_event (GtkWidget   *widget,
 	if (!view->document)
 		return FALSE;
 
-	if (!GTK_WIDGET_HAS_FOCUS (widget)) {
+	if (!gtk_widget_has_focus (widget)) {
 		/* Forward key events to current focused window child */
 		if (view->window_child_focus) {
 			GdkEventKey *new_event;
@@ -4381,7 +4381,7 @@ on_adjustment_value_changed (GtkAdjustment *adjustment,
 	gint x, y;
 	GList *children, *l;
 
-	if (! GTK_WIDGET_REALIZED (view))
+	if (! gtk_widget_get_realized (view))
 		return;
 
 	if (view->hadjustment) {
--- evince-2.29.91/shell/ev-application.c
+++ evince-2.29.91/shell/ev-application.c
@@ -619,7 +619,7 @@ ev_application_open_uri_in_window (EvApplication  *application,
 	   we can restore window size without flickering */
 	ev_window_open_uri (ev_window, uri, dest, mode, search_string);
 
-	if (!GTK_WIDGET_REALIZED (GTK_WIDGET (ev_window)))
+	if (!gtk_widget_get_realized (GTK_WIDGET (ev_window)))
 		gtk_widget_realize (GTK_WIDGET (ev_window));
 
 #ifdef GDK_WINDOWING_X11
@@ -709,7 +709,7 @@ ev_application_open_window (EvApplication *application,
 		gtk_window_set_screen (GTK_WINDOW (new_window), screen);
 	}
 
-	if (!GTK_WIDGET_REALIZED (new_window))
+	if (!gtk_widget_get_realized (new_window))
 		gtk_widget_realize (new_window);
 
 #ifdef GDK_WINDOWING_X11
--- evince-2.29.91/shell/ev-navigation-action-widget.c
+++ evince-2.29.91/shell/ev-navigation-action-widget.c
@@ -98,7 +98,7 @@ ev_navigation_action_widget_set_menu(EvNavigationActionWidget *button, GtkWidget
       if (button->menu == GTK_MENU (menu))
 		return;
 	
-      if (button->menu && GTK_WIDGET_VISIBLE (button->menu))
+      if (button->menu && gtk_widget_get_visible (button->menu))
 	        gtk_menu_shell_deactivate (GTK_MENU_SHELL (button->menu));
 
       if (button->menu) {
@@ -186,7 +186,7 @@ ev_navigation_action_widget_toggled (GtkToggleToolButton *toggle)
     		return;
 
 	if (gtk_toggle_tool_button_get_active (GTK_TOGGLE_TOOL_BUTTON (button)) &&
-	    !GTK_WIDGET_VISIBLE (button->menu)) {
+	    !gtk_widget_get_visible (button->menu)) {
 		      /* we get here only when the menu is activated by a key
 		       * press, so that we can select the first menu item */
 		      popup_menu_under_arrow (button, NULL);
--- evince-2.29.91/shell/ev-sidebar-attachments.c
+++ evince-2.29.91/shell/ev-sidebar-attachments.c
@@ -273,7 +273,7 @@ ev_sidebar_attachments_button_press (EvSidebarAttachments *ev_attachbar,
 				     GdkEventButton       *event,
 				     GtkWidget            *icon_view)
 {
-	if (!GTK_WIDGET_HAS_FOCUS (icon_view)) {
+	if (!gtk_widget_has_focus (icon_view)) {
 		gtk_widget_grab_focus (icon_view);
 	}
 	
--- evince-2.29.91/shell/ev-sidebar-links.c
+++ evince-2.29.91/shell/ev-sidebar-links.c
@@ -542,7 +542,7 @@ ev_sidebar_links_set_current_page (EvSidebarLinks *sidebar_links,
 	GtkTreeIter iter;
 
 	/* Widget is not currently visible */
-	if (!GTK_WIDGET_MAPPED (sidebar_links))
+	if (!gtk_widget_get_mapped (sidebar_links))
 		return;
 	
 	selection = gtk_tree_view_get_selection (GTK_TREE_VIEW (sidebar_links->priv->tree_view));
--- evince-2.29.91/shell/ev-sidebar-thumbnails.c
+++ evince-2.29.91/shell/ev-sidebar-thumbnails.c
@@ -503,14 +503,14 @@ adjustment_changed_cb (EvSidebarThumbnails *sidebar_thumbnails)
 	gint wy2;
 
 	/* Widget is not currently visible */
-	if (!GTK_WIDGET_MAPPED (sidebar_thumbnails))
+	if (!gtk_widget_get_mapped (sidebar_thumbnails))
 		return;
 
 	if (priv->vadjustment->page_size == 0)
 		return;
 	
 	if (priv->tree_view) {
-		if (! GTK_WIDGET_REALIZED (priv->tree_view))
+		if (! gtk_widget_get_realized (priv->tree_view))
 			return;
 
 		gtk_tree_view_convert_tree_to_bin_window_coords (GTK_TREE_VIEW (priv->tree_view),
@@ -526,7 +526,7 @@ adjustment_changed_cb (EvSidebarThumbnails *sidebar_thumbnails)
 					       1, wy2 -1, &path2,
 					       NULL, NULL, NULL);
 	} else if (priv->icon_view) {
-		if (! GTK_WIDGET_REALIZED (priv->icon_view))
+		if (! gtk_widget_get_realized (priv->icon_view))
 			return;
 		if (! gtk_icon_view_get_visible_range (GTK_ICON_VIEW (priv->icon_view), &path, &path2))
 			return;
--- evince-2.29.91/shell/ev-sidebar.c
+++ evince-2.29.91/shell/ev-sidebar.c
@@ -208,7 +208,7 @@ ev_sidebar_menu_position_under (GtkMenu  *menu,
 	GtkWidget *widget;
 
 	g_return_if_fail (GTK_IS_BUTTON (user_data));
-	g_return_if_fail (GTK_WIDGET_NO_WINDOW (user_data));
+	g_return_if_fail (!gtk_widget_get_has_window (user_data));
 
 	widget = GTK_WIDGET (user_data);
 	   
--- evince-2.29.91/shell/ev-window.c
+++ evince-2.29.91/shell/ev-window.c
@@ -4350,13 +4350,13 @@ ev_window_sidebar_visibility_changed_cb
 
 	if (!EV_WINDOW_IS_PRESENTATION (ev_window)) {
 		gtk_toggle_action_set_active (GTK_TOGGLE_ACTION (action),
-					      GTK_WIDGET_VISIBLE (ev_sidebar));
+					      gtk_widget_get_visible (ev_sidebar));
 
 		if (ev_window->priv->metadata)
 			ev_metadata_set_boolean (ev_window->priv->metadata, "sidebar_visibility",
-						 GTK_WIDGET_VISIBLE (ev_sidebar));
+						 gtk_widget_get_visible (ev_sidebar));
 		ev_metadata_set_boolean (ev_window->priv->last_settings, "sidebar_visibility",
-					 GTK_WIDGET_VISIBLE (ev_sidebar));
+					 gtk_widget_get_visible (ev_sidebar));
 	}
 }
 
@@ -4653,7 +4653,7 @@ find_bar_visibility_changed_cb (EggFindBar *find_bar,
 {
 	gboolean visible;
 
-	visible = GTK_WIDGET_VISIBLE (find_bar);
+	visible = gtk_widget_get_visible (find_bar);
 
 	if (ev_window->priv->document &&
 	    EV_IS_DOCUMENT_FIND (ev_window->priv->document)) {
@@ -4963,7 +4963,7 @@ ev_window_key_press_event (GtkWidget   *widget,
 	 */
 	if (priv->view) {
 		g_object_ref (priv->view);
-		if (GTK_WIDGET_IS_SENSITIVE (priv->view))
+		if (gtk_widget_is_sensitive (priv->view))
 			handled = gtk_widget_event (priv->view, (GdkEvent*) event);
 		g_object_unref (priv->view);
 	}
@@ -4974,7 +4974,7 @@ ev_window_key_press_event (GtkWidget   *widget,
 		if (priv->menubar_accel_keyval != 0 &&
 		    event->keyval == priv->menubar_accel_keyval &&
 		    modifier == priv->menubar_accel_modifier) {
-			if (!GTK_WIDGET_VISIBLE (priv->menubar)) {
+			if (!gtk_widget_get_visible (priv->menubar)) {
 				g_signal_connect (priv->menubar, "deactivate",
 						  G_CALLBACK (menubar_deactivate_cb),
 						  ev_window);
