--- mozilla-firetray-0.2.8/components/SConscript.old	2010-08-05 21:05:11.000000000 +0100
+++ mozilla-firetray-0.2.8/components/SConscript	2010-08-05 21:08:11.000000000 +0100
@@ -3,6 +3,31 @@ import sys, os, string
 platform = sys.platform
 
 
+try:
+    FLAGS = os.environ['CXXFLAGS'];
+except:
+    FLAGS = '-O2';
+
+linking_options=' --libs ';
+try:
+    DYNAMIC_LINKING = os.environ['DYNAMIC_LINKING'];
+except:
+    linking_options=' --static '  
+
+print "linking: " + linking_options
+
+
+
+FLAGS += ' -fshort-wchar '
+
+
+
+try:
+    lib_arch = os.environ['LIB_ARCH'];
+except:
+    lib_arch = '';
+
+
 try: 
     gecko_bin = os.environ['GECKO_SDK_BIN'];
     if gecko_bin[-1] != os.sep: gecko_bin += os.sep
@@ -16,8 +41,6 @@ try: 
     gecko_lib = os.environ['GECKO_SDK_LIB'];
     if gecko_lib[-1] != os.sep: gecko_lib += os.sep
 
-    lib_arch = os.environ['LIB_ARCH'];
-
 except:
     try:
         geckosdk = os.environ['GECKO_SDK']
@@ -27,16 +50,11 @@ except:
         gecko_include = geckosdk + 'include'
         gecko_idl = geckosdk + 'idl'
         gecko_lib = geckosdk + 'lib'
-	lib_arch = ''
+
     except:
         print "Please set environment variable GECKO_SDK first (or in alternative the variables GECKO_SDK_BIN, GECKO_SDK_INCLUDE, GECKO_SDK_IDL, GECKO_SDK_LIB)."
         sys.exit(1)
 
-print "GECKO_SDK_BIN: " + gecko_bin
-print "GECKO_SDK_INCLUDE: " + gecko_include
-print "GECKO_SDK_IDL: " + gecko_idl
-print "GECKO_SDK_LIB: " + gecko_lib
-
 # Create two builders to create xpt and header files from idl.
 bxpt = Builder(action = 'xpidl -w -m typelib -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
 bhdr = Builder(action = 'xpidl -w -m header -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
@@ -52,22 +70,10 @@ env.Append(BUILDERS = {'MozXPT' : bxpt, 
 
 # Add additional param for different platforms
 if platform == 'linux2':
-    env.ParseConfig('pkg-config --static --cflags gtk+-2.0') # libnotify
+    env.ParseConfig('pkg-config ' + linking_options + ' --cflags gtk+-2.0') # libnotify
     env.ParseConfig('pkg-config --cflags nspr')
-    env.AppendUnique(
-        CXXFLAGS = ['-include', 'xpcom-config.h', '-Wall', '-O2',
-                    '-fno-rtti', '-fno-exceptions',
-                    '-Wconversion',
-                    '-Wpointer-arith',
-                    '-Wcast-align',
-                    '-Woverloaded-virtual',
-                    '-Wsynth', '-fshort-wchar',
-                    '-Wno-ctor-dtor-privacy',
-                    '-Wno-non-virtual-dtor',
-                    '-Wno-long-long',
-                    '-pedantic',
-                    '-fshort-wchar',
-                    '-pthread', '-pipe'])
+    env.Append( CXXFLAGS = FLAGS )
+ 
 
 # Create headers and xpt files from idl
 xpts = [env.MozXPT('nsITray'), env.MozXPT('nsIMinimize')]
@@ -85,4 +91,4 @@ nptray = env.SharedLibrary(nptray_name, 
 r = env.Install('#dist/components', [nptray, xpts, 'nsMinimize.js']) 
 
 Default([xpts, headers, nptray])
-Return('r') 
+Return('r')
