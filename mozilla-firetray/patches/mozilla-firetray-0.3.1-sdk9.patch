--- components/SConscript.orig	2011-07-05 18:02:01.000000000 -0300
+++ components/SConscript	2012-01-15 15:05:21.424109770 -0200
@@ -46,6 +46,7 @@ except:
         print "Using GECKO_SDK=" + geckosdk
         if geckosdk[-1] != os.sep: geckosdk += os.sep
         gecko_bin = geckosdk + 'bin'
+	gecko_sdk_bin = geckosdk + 'sdk/bin'
         gecko_include = geckosdk + 'include'
         gecko_idl = geckosdk + 'idl'
         gecko_lib = geckosdk + 'lib'
@@ -73,8 +74,9 @@ with open(gecko_include + os.sep + 'mozi
             break
 
 # Create two builders to create xpt and header files from idl.
-bxpt = Builder(action = 'xpidl -w -m typelib -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
-bhdr = Builder(action = 'xpidl -w -m header -Icomponents -I' + gecko_idl + ' -e $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
+bxpt = Builder(action = 'typelib.py -Icomponents -I' + gecko_idl + ' -o $TARGET $SOURCE', suffix = '.xpt', src_suffix = '.idl')
+bhdr = Builder(action = 'header.py -Icomponents -I' + gecko_idl + ' -o $TARGET $SOURCE', suffix = '.h', src_suffix = '.idl')
+
 
 # Create environment object for build
 env = Environment(
@@ -83,6 +85,7 @@ env = Environment(
     LIBS = xpcom_libs,
     ENV = os.environ)
 env.AppendENVPath('PATH', gecko_bin)
+env.AppendENVPath('PATH', gecko_sdk_bin)
 env.Append(BUILDERS = {'MozXPT' : bxpt, 'MozHeader' : bhdr })
 
 env.ParseConfig('pkg-config ' + linking_options + ' --cflags gtk+-2.0') # libnotify
@@ -105,3 +108,4 @@ r = env.Install('#dist/components', [npt
 
 Default([xpts, headers, nptray])
 Return('r')
+
