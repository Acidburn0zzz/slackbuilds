--- crack-attack-1.1.14.orig/crack-attack-fe-ng-00.glade
+++ crack-attack-1.1.14/crack-attack-fe-ng-00.glade
@@ -17,6 +17,7 @@
   <property name="skip_pager_hint">False</property>
   <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <signal name="destroy" handler="gtk_main_quit" last_modification_time="Wed, 31 Oct 2007 23:49:42 GMT"/>
 
   <child>
     <widget class="GtkHBox" id="hbox1">
--- crack-attack-1.1.14.orig/src/gtk-gui/interface.cxx
+++ crack-attack-1.1.14/src/gtk-gui/interface.cxx
@@ -246,7 +246,7 @@
   gtk_box_pack_start (GTK_BOX (hbox8), entPort, FALSE, FALSE, 3);
   gtk_entry_set_text (GTK_ENTRY (entPort), "8080");
 
-  lblServer = gtk_label_new_with_mnemonic ("_Server");
+  lblServer = gtk_label_new_with_mnemonic ("S_erver");
   gtk_widget_set_name (lblServer, "lblServer");
   gtk_widget_show (lblServer);
   gtk_notebook_set_tab_label (GTK_NOTEBOOK (ntbGameMode), gtk_notebook_get_nth_page (GTK_NOTEBOOK (ntbGameMode), 1), lblServer);
@@ -319,7 +319,7 @@
                     (GtkAttachOptions) (0), 0, 0);
   gtk_misc_set_alignment (GTK_MISC (lblResolution), 0, 0.5);
 
-  lblQuality = gtk_label_new_with_mnemonic ("_Quality:");
+  lblQuality = gtk_label_new_with_mnemonic ("Q_uality:");
   gtk_widget_set_name (lblQuality, "lblQuality");
   gtk_widget_show (lblQuality);
   gtk_table_attach (GTK_TABLE (table1), lblQuality, 0, 1, 1, 2,
@@ -377,7 +377,7 @@
   gtk_widget_show (hbox2);
   gtk_box_pack_start (GTK_BOX (vbox2), hbox2, FALSE, TRUE, 3);
 
-  lblPlayerName = gtk_label_new_with_mnemonic ("_Player name:");
+  lblPlayerName = gtk_label_new_with_mnemonic ("P_layer name:");
   gtk_widget_set_name (lblPlayerName, "lblPlayerName");
   gtk_widget_show (lblPlayerName);
   gtk_box_pack_start (GTK_BOX (hbox2), lblPlayerName, FALSE, FALSE, 0);
@@ -491,6 +491,9 @@
   g_signal_connect ((gpointer) btnQuit, "clicked",
                     G_CALLBACK (gtk_main_quit),
                     NULL);
+  g_signal_connect ((gpointer) winCrackAttackSplash, "destroy",
+                    G_CALLBACK (gtk_main_quit),
+                    NULL);
   g_signal_connect ((gpointer) cmbQuality, "changed",
                     G_CALLBACK (on_cmbQuality_changed),
                     NULL);
--- crack-attack-1.1.14.orig/src/Sound.cxx
+++ crack-attack-1.1.14/src/Sound.cxx
@@ -64,6 +64,7 @@
 	// Load chunk files to ChunkMap
 	Mix_Chunk *chunk;
 	string File;
+	int found_sound = 0;
 	for (size_t i = 0; i < sounds.size(); i++) {
 		#ifndef NDEBUG
 		cout << "Loading " << sounds[i];
@@ -80,11 +81,16 @@
 		}
 		// If chunk is NULL there is no WAV available for this sound
 		if (!chunk) cout << "WARNING *** Unable to open " << sounds[i] << endl;
+		else found_sound = 1;
 		chunks[sounds[i]] = chunk;
 		#ifndef NDEBUG
 		cout << endl;
 		#endif
 	}
+	if (!found_sound) { // sound not needed
+		cleanup();
+		has_audio_available = 0;
+	}
 }
 
 void Sound::play( const char *file, int vol )
