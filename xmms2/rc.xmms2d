#!/bin/bash
#
# description: Start up xmms2d
#
# processname: xmms2d
# config: /etc/default/xmms2d

[ "$(id -u)" -eq 0 ] || exit 1

exec="/usr/bin/xmms2-launcher"
exec2="/usr/bin/xmms2d"
exec3="/usr/bin/xmms2"
prog=$(basename ${exec2})
homedir="/var/lib/xmms2"
lockfile=/var/lock/subsys/${prog}

[ -x "${exec}" ] || exit 0

unset XMMS2_USER XMMS2_OPTIONS
[ -e /etc/default/xmms2d ] && . /etc/default/xmms2d
XMMS2_USER=${XMMS2_USER:-xmms2:xmms2}

RETVAL=0

checkconfig() {
  if [[ "${XMMS2_USER}" == "" ]] ; then
    echo "Please edit /etc/default/xmms2d"
    echo "You have to specify a user to run transmission as, as we will not run it as root!"
    echo "Modify XMMS2_USER to your needs (you can also add a group, after a colon)"
    return 1
  fi
  if ! $(getent passwd | cut -d ':' -f 1 | grep $( echo "${XMMS2_USER}" | cut -d ':' -f 1 ) -sq) ; then
    echo "Please edit /etc/default/xmms2d"
    echo "Your user has to exist!"
    return 1
  fi
  XMMS2_OUSER=$(echo ${XMMS2_USER} | cut -d ':' -f 1)
  if [[ "${XMMS2_USER}" == "root" ]] ; then
    echo "Please edit /etc/default/xmms2d"
    echo "Do not use root as user!"
    return 1
  fi
  unset XMMS2_GROUP
  echo "${XMMS2_USER}" | grep ':' -sq && XMMS2_GROUP=$( echo ${XMMS2_USER} | cut -d ':' -f 2 )
  if [ -n "${XMMS2_GROUP}" ] && ! $(cut -d ':' -f 1 /etc/group | grep "${XMMS2_GROUP}" -sq) ; then
    echo "Please edit /etc/default/xmms2d"
    echo "Your group has to exist too!"
    return 1
  fi
  XMMS2_USER_HOME=$(getent passwd | grep ^$( echo "${XMMS2_USER}" | cut -d ':' -f 1 ): | cut -d ':' -f 6)
  return 0
}

checkconfig || exit 1

pidfile="/tmp/xmms2d-${XMMS2_OUSER}.pid"
[[ -f "${pidfile}" ]] && PID=$(cat ${pidfile})

if [ -f "${pidfile}" ] && ! pgrep -U "${XMMS2_OUSER}" -f 'xmms2d|!rc.xmms2d' &>/dev/null ;then
  rm -f "${pidfile}"
fi

start() {
  echo -n "Starting ${prog}: "
  if [[ "${XMMS2_OUSER}" == "xmms2" ]] && [[ -d "${homedir}" ]];then
    chown -R xmms2.xmms2 "${homedir}"
  fi
  if [ -z "${PID}" ] ;then 
    su - "${XMMS2_OUSER}" -s /bin/sh -c "${exec} -P ${pidfile} ${XMMS2_OPTIONS}" &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && touch ${lockfile} ; then
    echo -e "\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop() {
  if [ ${RETVAL} -eq 0 ] ; then
    echo -n "Stopping ${prog}: "
    if [ -n "${PID}" ] ;then
      su - "${XMMS2_OUSER}" -s /bin/sh -c "${exec3} quit" &>/dev/null
      RETVAL=$?
    else
      RETVAL=1
    fi
    if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
      rm -f "${pidfile}"
      echo -e "\t\t\t\t\t[  OK  ]\r"
    else
      echo -e "\t\t\t\t\t[FAILED]\r"
    fi
  fi
  return ${RETVAL}
}

restart() {
  stop
  sleep 1
  unset PID
  start
}

# See how we were called.
case "$1" in
  start|stop)
    $1
    ;;
  force-reload|restart|reload)
    restart
    ;;
  status|fdrstatus)
    if [ -f "${lockfile}" ]; then
      echo "${prog} is running in pid ${PID}."
    else
      echo "${prog} is not running."
    fi
    ;;
  condrestart)
    if  [ ! -f ${lockfile} ]; then restart ;fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart|reload|force-reload}"
    exit 2
    ;;
esac
exit ${RETVAL}
