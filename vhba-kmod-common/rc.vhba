#!/bin/sh
#
# vhba: Loads vhba kernel module
#

MODULE=vhba
CTL_DEVICE=/dev/vhba_ctl
processname=/usr/sbin/cdemud

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${processname})

start() {
  echo -n "Starting ${MODULE}: "
  # Load module
  #echo -n $"Inserting kernel module ($MODULE): "
  /sbin/modprobe ${MODULE} >/dev/null 2>&1
  RETVAL=$?
  if [ ${RETVAL} -ne 0 ]; then
    echo -e "\t\t\t\t\t\t[FAILED]\r"
    return ${RETVAL}
  fi

  # Wait until control device is created...
  if [ -n "${CTL_DEVICE}" ]; then
    #echo -n $"Waiting for ${CTL_DEVICE} to be created: "
    until [ -c "${CTL_DEVICE}" ]; do
      echo -n ""
    done
  fi

  RETVAL=$?
  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi

  return ${RETVAL}
}

stop() {
  echo -n "Stopping ${MODULE}: "

  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    sleep 1
  fi

  # Unload module
  #echo -n $"    Removing kernel module ($MODULE): "
  /sbin/modprobe -r ${MODULE} >/dev/null 2>&1
  RETVAL=$?
  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t\t[FAILED]\r"
  fi

  return ${RETVAL}
}

restart() {
  stop
  RETVAL=$?
  if [ ${RETVAL} -eq 0 ]; then
    sleep 3
    start
    RETVAL=$?
  fi
  return ${RETVAL}
}

# See how we were called.
case "$1" in
  start|restart)
    $1
    ;;
  stop)
    stop
    ;;
  status)
    if lsmod | grep -q "${MODULE}[^_-]" ;then
      echo "${MODULE} is loaded."
    else
      echo "${MODULE} is not loaded."
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
    exit 1
    ;;
esac

exit ${RETVAL}
