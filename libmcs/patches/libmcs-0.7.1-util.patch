diff -Nur libmcs-0.7.1-orig/src/libmcs/mcs_util.c libmcs-0.7.1/src/libmcs/mcs_util.c
--- libmcs-0.7.1-orig/src/libmcs/mcs_util.c	2008-04-21 00:05:48.000000000 +0200
+++ libmcs-0.7.1/src/libmcs/mcs_util.c	2009-12-24 18:26:15.000000000 +0100
@@ -56,7 +56,7 @@
  *
  * \param str The string to duplicate.
  * \param len The maximum allowed length of the string.
- * \return The length of the string or len, whichever is smaller.
+ * \return The pointer to a copy of the string. Free this with free().
  */
 char *
 mcs_strndup(const char *str, size_t len)
@@ -68,7 +68,7 @@
 		return NULL;
 
 	memcpy(out, str, nlen);
-	out[len] = '\0';
+	out[nlen] = '\0';
 
 	return out;
 }
@@ -146,16 +146,22 @@
 {
 	size_t dsize = strlen(dest);
 	size_t len = strlen(src);
-	size_t res = dsize + len;
+	size_t res;
 
 	dest += dsize;
 	count -= dsize;
 
-	if (len >= count)
-		len = count - 1;
-
+	if (len >= count) {
+        if (count>0) {
+            len = count - 1;
+        }
+        else {
+            len = 0;
+        }
+    }
 	memcpy(dest, src, len);
 	dest[len] = 0;
+    res = dsize + len;
 
 	return res;
 }
@@ -172,15 +178,16 @@
  */
 size_t mcs_strlcpy(char *dest, const char *src, size_t size)
 {
-	size_t ret = strlen(src);
+	size_t srclen = strlen(src);
+    size_t retlen = 0;
 
 	if (size != 0)
 	{
-		size_t len = (ret >= size) ? size - 1 : ret;
-		memcpy(dest, src, len);
-		dest[len] = '\0';
+		retlen = (srclen >= size) ? size - 1 : srclen;
+		memcpy(dest, src, retlen);
+		dest[retlen] = '\0';
 	}
 
-	return ret;
+	return retlen;
 }
 
