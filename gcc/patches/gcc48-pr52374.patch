From d5290fe04e674045d02a16ef51591b4bbebb4b8a Mon Sep 17 00:00:00 2001
From: jason <jason@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Sat, 23 Mar 2013 00:48:59 +0000
Subject: [PATCH] 	PR c++/52374
 	* pt.c (tsubst_qualified_id): Use current_nonlambda_class_type.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-4_8-branch@196993 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/cp/pt.c                                       |    2 +-
 gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this13.C |   20 ++++++++++++++++++++
 3 files changed, 24 insertions(+), 1 deletions(-)
 create mode 100644 gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this13.C

diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index 77c060c..868b401 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -12033,7 +12033,7 @@ tsubst_qualified_id (tree qualified_id, tree args,
   else if (TYPE_P (scope))
     {
       expr = (adjust_result_of_qualified_name_lookup
-	      (expr, scope, current_class_type));
+	      (expr, scope, current_nonlambda_class_type ()));
       expr = (finish_qualified_id_expr
 	      (scope, expr, done, address_p && PTRMEM_OK_P (qualified_id),
 	       QUALIFIED_NAME_IS_TEMPLATE (qualified_id),
diff --git a/gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this13.C b/gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this13.C
new file mode 100644
index 0000000..090d0a1
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this13.C
@@ -0,0 +1,20 @@
+// PR c++/52374
+// { dg-do compile { target c++11 } }
+
+struct B
+{
+  int get() const { return 42; }
+};
+
+template<typename X>
+struct D
+  : public X
+{
+  int get() const { return [this]() -> int { return X::get(); }(); }
+};
+
+int main()
+{
+  D<B> d;
+  d.get();
+}
-- 
1.7.1

