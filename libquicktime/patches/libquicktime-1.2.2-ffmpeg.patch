--- plugins/ffmpeg/lqt_ffmpeg.c	2011/03/11 16:24:09	1.99
+++ plugins/ffmpeg/lqt_ffmpeg.c	2011/05/05 22:50:06	1.100
@@ -41,6 +41,18 @@
 
 int ffmpeg_num_audio_codecs = -1;
 int ffmpeg_num_video_codecs = -1;
+
+#if LIBAVCODEC_VERSION_MAJOR >= 53
+#define CodecType AVMediaType
+#define CODEC_TYPE_UNKNOWN    AVMEDIA_TYPE_UNKNOWN
+#define CODEC_TYPE_VIDEO      AVMEDIA_TYPE_VIDEO
+#define CODEC_TYPE_AUDIO      AVMEDIA_TYPE_AUDIO
+#define CODEC_TYPE_DATA       AVMEDIA_TYPE_DATA
+#define CODEC_TYPE_SUBTITLE   AVMEDIA_TYPE_SUBTITLE
+#define CODEC_TYPE_ATTACHMENT AVMEDIA_TYPE_ATTACHMENT
+#define CODEC_TYPE_NB         AVMEDIA_TYPE_NB
+#endif
+
   
 #define ENCODE_PARAM_AUDIO \
   { \
--- plugins/ffmpeg/params.c	2011/01/07 14:40:46	1.15
+++ plugins/ffmpeg/params.c	2011/05/11 15:13:39	1.16
@@ -205,8 +205,6 @@
   PARAM_FLOAT("ff_p_masking",p_masking);
   PARAM_FLOAT("ff_dark_masking",dark_masking);
   PARAM_ENUM("ff_prediction_method",prediction_method,prediction_method);
-  PARAM_INT("ff_mb_qmin",mb_qmin);
-  PARAM_INT("ff_mb_qmax",mb_qmax);
   PARAM_ENUM("ff_me_cmp",me_cmp,compare_func);
   PARAM_CMP_CHROMA("ff_me_cmp_chroma",me_cmp);
   PARAM_ENUM("ff_me_sub_cmp",me_sub_cmp,compare_func);
--- plugins/ffmpeg/params.h	2011/04/29 09:11:46	1.16
+++ plugins/ffmpeg/params.h	2011/05/11 15:13:39	1.17
@@ -402,28 +402,6 @@
     .stringlist_options = (char*[]){ TRS("Left"), TRS("Plane"), TRS("Median"), (char*)0 }, \
   }
 
-/** Quantizer */
-#define PARAM_MB_QMIN \
-  { \
-    .name =        "ff_mb_qmin", \
-    .real_name =   TRS("Minimum MB quantizer"), \
-    .type =        LQT_PARAMETER_INT, \
-    .val_default = { .val_int = 2 },\
-    .val_min =     { .val_int = 0 },\
-    .val_max =     { .val_int = 31 },\
-  }
-
-/** Quantizer */
-#define PARAM_MB_QMAX \
-  { \
-    .name =        "ff_mb_qmax", \
-    .real_name =   TRS("Maximum MB quantizer"), \
-    .type =        LQT_PARAMETER_INT, \
-    .val_default = { .val_int = 31 }, \
-    .val_min =     { .val_int = 0 }, \
-    .val_max =     { .val_int = 31 }, \
-  }
-
 #define COMPARE_FUNCS (char*[]){ TRS("SAD"), TRS("SSE"), TRS("SATD"), TRS("DCT"), TRS("PSNR"), \
                                  TRS("BIT"), TRS("RD"), TRS("ZERO"), TRS("VSAD"), TRS("VSSE"), \
                                  TRS("NSSE"), \
