From 3cc43f63a0b049c5702765c3c3e2aacf3ec8fd5a Mon Sep 17 00:00:00 2001
From: Calum Lind <calumlind+deluge@gmail.com>
Date: Sun, 9 Jun 2013 02:30:26 +0100
Subject: [PATCH 5/5] Fix #2338 : Spelling mistake with occurred

---
 deluge/core/core.py                        |  2 +-
 deluge/plugins/blocklist/blocklist/core.py | 20 ++++++++++----------
 deluge/ui/tracker_icons.py                 |  6 +++---
 deluge/ui/web/json_api.py                  |  6 +++---
 4 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/deluge/core/core.py b/deluge/core/core.py
index dd7648d..1ca6f92 100644
--- a/deluge/core/core.py
+++ b/deluge/core/core.py
@@ -277,7 +277,7 @@ def on_download_fail(failure):
                 result.addCallbacks(on_download_success, on_download_fail)
             else:
                 # Log the error and pass the failure onto the client
-                log.error("Error occured downloading torrent from %s", url)
+                log.error("Error occurred downloading torrent from %s", url)
                 log.error("Reason: %s", failure.getErrorMessage())
                 result = failure
             return result
diff --git a/deluge/plugins/blocklist/blocklist/core.py b/deluge/plugins/blocklist/blocklist/core.py
index 0908ad8..12cee45 100644
--- a/deluge/plugins/blocklist/blocklist/core.py
+++ b/deluge/plugins/blocklist/blocklist/core.py
@@ -163,7 +163,7 @@ def check_import(self, force=False):
     def get_config(self):
         """
         Returns the config dictionary
-        
+
         :returns: the config dictionary
         :rtype: dict
         """
@@ -184,7 +184,7 @@ def set_config(self, config):
     def get_status(self):
         """
         Returns the status of the plugin
-        
+
         :returns: the status dict of the plugin
         :rtype: dict
         """
@@ -262,7 +262,7 @@ def on_retrieve_data(data, current_length, total_length):
     def on_download_complete(self, blocklist):
         """
         Runs any download clean up functions
-        
+
         :param blocklist: path of blocklist
         :type blocklist: string
         :returns: a Deferred which fires when clean up is done
@@ -275,8 +275,8 @@ def on_download_complete(self, blocklist):
     def on_download_error(self, f):
         """
         Recovers from download error
-        
-        :param f: failure that occured
+
+        :param f: failure that occurred
         :type f: Failure
         :returns: a Deferred if recovery was possible
                   else the original failure
@@ -311,7 +311,7 @@ def on_download_error(self, f):
     def import_list(self, blocklist):
         """
         Imports the downloaded blocklist into the session
-        
+
         :param blocklist: path of blocklist
         :type blocklist: string
         :returns: a Deferred that fires when the blocklist has been imported
@@ -335,7 +335,7 @@ def on_finish_read(result):
         self.is_importing = True
         self.num_blocked = 0
         self.blocklist = self.core.session.get_ip_filter()
-        
+
         if not blocklist:
             blocklist = self.filename
 
@@ -353,7 +353,7 @@ def on_finish_read(result):
     def on_import_complete(self, blocklist):
         """
         Runs any import clean up functions
-        
+
         :param blocklist: path of blocklist
         :type blocklist: string
         :returns: a Deferred that fires when clean up is done
@@ -376,8 +376,8 @@ def on_import_complete(self, blocklist):
     def on_import_error(self, f):
         """
         Recovers from import error
-        
-        :param f: failure that occured
+
+        :param f: failure that occurred
         :type f: Failure
         :returns: a Deferred if recovery was possible
                   else the original failure
diff --git a/deluge/ui/tracker_icons.py b/deluge/ui/tracker_icons.py
index c317320..02aa505 100644
--- a/deluge/ui/tracker_icons.py
+++ b/deluge/ui/tracker_icons.py
@@ -244,7 +244,7 @@ def on_download_page_fail(self, f, host):
         """
         Recovers from download error
 
-        :param f: the failure that occured
+        :param f: the failure that occurred
         :type f: Failure
         :param host: the name of the host whose page failed to download
         :type host: string
@@ -311,7 +311,7 @@ def on_parse_fail(self, f):
         """
         Recovers from a parse error
 
-        :param f: the failure that occured
+        :param f: the failure that occurred
         :type f: Failure
         :returns: a Deferred if recovery was possible
                   else the original failure
@@ -383,7 +383,7 @@ def on_download_icon_fail(self, f, host, icons=[]):
         """
         Recovers from a download error
 
-        :param f: the failure that occured
+        :param f: the failure that occurred
         :type f: Failure
         :param host: the host the icon failed to download for
         :type host: string
diff --git a/deluge/ui/web/json_api.py b/deluge/ui/web/json_api.py
index 8877032..a70d174 100644
--- a/deluge/ui/web/json_api.py
+++ b/deluge/ui/web/json_api.py
@@ -242,7 +242,7 @@ def _on_rpc_request_finished(self, result, response, request):
 
     def _on_rpc_request_failed(self, reason, response, request):
         """
-        Handles any failures that occured while making an rpc call.
+        Handles any failures that occurred while making an rpc call.
         """
         request.setResponseCode(http.INTERNAL_SERVER_ERROR)
         return ""
@@ -658,7 +658,7 @@ def on_download_fail(result):
                                                       allow_compression=False)
                 result.addCallbacks(on_download_success, on_download_fail)
             else:
-                log.error("Error occured downloading torrent from %s", url)
+                log.error("Error occurred downloading torrent from %s", url)
                 log.error("Reason: %s", result.getErrorMessage())
             return result
 
@@ -871,7 +871,7 @@ def on_connect_failed(reason):
             d.addCallback(on_connect, c)
             d.addErrback(on_connect_failed)
         except:
-            main_deferred.callback((False, "An error occured"))
+            main_deferred.callback((False, "An error occurred"))
         return main_deferred
 
     @export
-- 
1.8.3.1

