From 18eb885983b7f094ca4a2c0e95547a06f61ba7f0 Mon Sep 17 00:00:00 2001
From: John Garland <johnnybg+deluge@gmail.com>
Date: Sun, 16 Sep 2012 17:12:16 +1000
Subject: [PATCH 1/2] Don't use deprecated twisted imports (fixes #2164)

Aliases have been removed in twisted 12.2.0.
---
 deluge/ui/tracker_icons.py | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/deluge/ui/tracker_icons.py b/deluge/ui/tracker_icons.py
index 91a02e4..a9d5528 100644
--- a/deluge/ui/tracker_icons.py
+++ b/deluge/ui/tracker_icons.py
@@ -39,7 +39,12 @@
 from tempfile import mkstemp
 
 from twisted.internet import defer, threads
-from twisted.web import error
+from twisted.web.error import PageRedirect
+try:
+    from twisted.web.resource import NoResource, ForbiddenResource
+except ImportError:
+    # twisted 8
+    from twisted.web.error import NoResource, ForbiddenResource
 
 from deluge.component import Component
 from deluge.configmanager import get_config_dir
@@ -235,7 +240,7 @@ def on_download_page_fail(self, f, host):
         error_msg = f.getErrorMessage()
         log.debug("Error downloading page: %s", error_msg)
         d = f
-        if f.check(error.PageRedirect):
+        if f.check(PageRedirect):
             # Handle redirect errors
             location = urljoin(self.host_to_url(host), error_msg.split(" to ")[1])
             self.redirects[host] = url_to_host(location)
@@ -375,14 +380,14 @@ def on_download_icon_fail(self, f, host, icons=[]):
         error_msg = f.getErrorMessage()
         log.debug("Error downloading icon: %s", error_msg)
         d = f
-        if f.check(error.PageRedirect):
+        if f.check(PageRedirect):
             # Handle redirect errors
             location = urljoin(self.host_to_url(host), error_msg.split(" to ")[1])
             d = self.download_icon([(location, extension_to_mimetype(location.rpartition('.')[2]))] + icons, host)
             if not icons:
                 d.addCallbacks(self.on_download_icon_complete, self.on_download_icon_fail,
                                callbackArgs=(host,), errbackArgs=(host,))
-        elif f.check(error.NoResource, error.ForbiddenResource) and icons:
+        elif f.check(NoResource, ForbiddenResource) and icons:
             d = self.download_icon(icons, host)
         elif f.check(NoIconsError, HTMLParseError):
             # No icons, try favicon.ico as an act of desperation
-- 
1.8.0

