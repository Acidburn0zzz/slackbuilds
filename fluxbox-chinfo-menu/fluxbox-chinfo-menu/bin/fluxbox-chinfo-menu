#!/bin/sh
#
#-- fluxbox-chinfo-menu 1.0 --
# Menu script by Phantom X <megaphantomx@bol.com.br>
# Suggested usage: $ fluxbox-chinfo-menu -a
#--
# Copyright 2010 Phantom X, Goiania, Brazil.
# Portions of code based on perl script by Arnaud Ab√©lard <arny@arny.org>
# Backgrounds menu code adapted from fluxbox-generate_menu by:
# Dung N. Lam <dnlam@users.sourceforge.net> and Han Boetes <han@mijncomputer.nl>
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

tmp=$(mktemp -d)

trap cleanup EXIT
cleanup() {
  set +e
  [ -z "${tmp}" -o ! -d "${tmp}" ] || rm -rf "${tmp}"
}

set -e

FB_USERDIR="${HOME}/.fluxbox"
FB_CHINFO_FILES="/usr/share/fluxbox-chinfo-menu"
FB_CHINFO_XDG="${FB_CHINFO_FILES}/fluxbox-chinfo-xdg-menu"
FB_CHINFO_CONFIG="${FB_CHINFO_FILES}/fluxbox-chinfo-menuconfig"
FB_CHINFO_USERCONFIG="${FB_USERDIR}/chinfo-menuconfig"
FB_MAINMENUNAME="menu"
FB_SUBMENU1NAME="submenu1"
FB_SUBMENU2NAME="submenu2"
FB_SUBMENU3NAME="submenu3"
FB_USERMENUNAME="usermenu"
FB_BGMENUNAME="bgmenu"
FB_MAINMENU="${FB_USERDIR}/${FB_MAINMENUNAME}"
FB_SUBMENU1="${FB_USERDIR}/${FB_SUBMENU1NAME}"
FB_SUBMENU2="${FB_USERDIR}/${FB_SUBMENU2NAME}"
FB_SUBMENU3="${FB_USERDIR}/${FB_SUBMENU3NAME}"
FB_USERMENU="${FB_USERDIR}/${FB_USERMENUNAME}"
FB_BGMENU="${FB_USERDIR}/${FB_BGMENUNAME}"
FB_BACKGROUND_DIRS="${FB_USERDIR}/backgrounds/:/usr/share/fluxbox/backgrounds/"

unset FB_MENUTITLE FB_TERM FB_FILE FB_BROWSER FB_MAIL

case "${LANG}" in
  pt_BR*)
    source "${FB_CHINFO_FILES}/fluxbox-chinfo-pt_BR"
    ;;
  pt*)
    source "${FB_CHINFO_FILES}/fluxbox-chinfo-pt"
    ;;
  *)
    source "${FB_CHINFO_FILES}/fluxbox-chinfo-en"
    ;;
esac

if [ -r "${FB_CHINFO_USERCONFIG}" ] ;then
  source "${FB_CHINFO_USERCONFIG}"
else
  cp -f "${FB_CHINFO_CONFIG}" "${FB_CHINFO_USERCONFIG}"
  source "${FB_CHINFO_USERCONFIG}"
fi

txt() {
  cat <<EOF
Uso : $0 <option>
<option> are:
  -a|--all         Generate all menus.
  -b|--bgmenu      Generate only background menu
  -m|--mainmenu    Generate only main menu.
  -s|--submenu     Generate only sub menus.
  -h|--help        This text.

Run without any parameters to only create ${FB_CHINFO_USERCONFIG}.
EOF
}

submenuclean(){
  sed -i -r -e 's: (%F|%f|%i|%m|"%c"|%u|%U|-o|-caption)::g' $1
}

submenu(){
  # KDE xdg menu
  if [ "${FB_SUBMENU1NAME}" != "none" ] && [ -d /etc/kde/xdg/menus ] ;then
    [ -f "${FB_SUBMENU1}" ] && mv -f "${FB_SUBMENU1}" "${FB_SUBMENU1}.old"
    echo "${FBI_GENING} ${FB_SUBMENU1}..."
    export XDG_CONFIG_DIRS=/etc/kde/xdg:/etc/xdg
    if [ -f /etc/kde/xdg/menus/kde4-applications.menu ] ;then
      export XDG_MENU_PREFIX="kde4-"
    elif [ -f /etc/kde/xdg/menus/kde3-applications.menu ] ;then
      export XDG_MENU_PREFIX="kde3-"
    elif [ -f /etc/kde/xdg/menus/applications.menu ] ;then
      unset XDG_MENU_PREFIX
    fi
    /usr/bin/python "${FB_CHINFO_XDG}" > "${tmp}/${FB_SUBMENU1NAME}" || exit 1
    submenuclean "${tmp}/${FB_SUBMENU1NAME}"
    cp -f "${tmp}/${FB_SUBMENU1NAME}" "${FB_SUBMENU1}"
    unset XDG_CONFIG_DIRS
  fi

  # GNOME xdg menu
  if [ "${FB_SUBMENU2NAME}" != "none" ] && [ -d /etc/gnome/xdg/menus ] ;then
    [ -f "${FB_SUBMENU2}" ] && cp -f "${FB_SUBMENU2}" "${FB_SUBMENU2}.old"
    echo "${FBI_GENING} ${FB_SUBMENU2}..."
    export XDG_CONFIG_DIRS=/etc/gnome/xdg:/etc/xdg
    [ -f /etc/gnome/xdg/menus/gnome-applications.menu ] && export XDG_MENU_PREFIX="gnome-"
    /usr/bin/python "${FB_CHINFO_XDG}" > "${tmp}/${FB_SUBMENU2NAME}" || exit 1
    unset XDG_CONFIG_DIRS
    submenuclean "${tmp}/${FB_SUBMENU2NAME}"
    cp -f "${tmp}/${FB_SUBMENU2NAME}" "${FB_SUBMENU2}"
  fi

  # LXDE xdg menu
  if [ "${FB_SUBMENU2NAME}" != "none" ] && [ -f /etc/xdg/menus/lxde-applications.menu ] ;then
    [ -f "${FB_SUBMENU3}" ] && cp -f "${FB_SUBMENU3}" "${FB_SUBMENU3}.old"
    echo "${FBI_GENING} ${FB_SUBMENU3}..."
    export XDG_CONFIG_DIRS="/etc/xdg"
    export XDG_MENU_PREFIX="lxde-"
    /usr/bin/python "${FB_CHINFO_XDG}" > "${tmp}/${FB_SUBMENU3NAME}" || exit 1
    unset XDG_CONFIG_DIRS
    submenuclean "${tmp}/${FB_SUBMENU3NAME}"
    cp -f "${tmp}/${FB_SUBMENU3NAME}" "${FB_SUBMENU3}"
  fi
}

# Tests if command exists and are executable
find_exec(){
  COMMAND=$(which $(echo $3 | cut -d" " -f1) 2>/dev/null) || :
  if [ "${COMMAND}" ] && [ -x "${COMMAND}" ] ;then
    echo "$1[exec] ($2) {$3}" >> "${FB_MAINMENU_TMP}"
  fi
}

# Tests if wm command exists and are executable
find_wm(){
  COMMAND=$(which $(echo $3 | cut -d" " -f1) 2>/dev/null) || :
  if [ "${COMMAND}" ] && [ -x "${COMMAND}" ] ;then
    echo "$1[restart] ($2) {$3}" >> "${FB_MAINMENU_TMP}"
  fi
}

addbackground(){
  picturename=$(basename "$1")
  echo "			[exec] (${picturename%.???}) {fbsetbg -a \"$1\" }" >> "${FB_BGMENU_TMP}"
}

bgmenu(){
  [ "${FB_BGMENU}" = "none" ] && return 1
  [ -f "${FB_BGMENU}" ] && mv -f "${FB_BGMENU}" "${FB_BGMENU}.old"
  echo "${FBI_GENING} ${FB_BGMENU}..."
  FB_BGMENU_TMP="${tmp}/${FB_BGMENUNAME}"
  IFS=: # set delimetor for find
  NUMBER_OF_BACKGROUNDS=$(find ${FB_BACKGROUND_DIRS} -follow -type f \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.xpm' -o -iname '*.bmp' -o -name '*.gif' -o -iname '*.tiff' \) 2> /dev/null|wc -l)
  if [ "${NUMBER_OF_BACKGROUNDS}" -gt 0 ]; then
    echo "	[submenu] (${FBI_BGMENU}) {${FBI_BGMENUTITLE}}" >> "${FB_BGMENU_TMP}"
    echo "		[exec] (${FBI_RANDOMBG}) {fbsetbg -r ${USERFLUXDIR}/backgrounds}" >> "${FB_BGMENU_TMP}"
    if [ "${NUMBER_OF_BACKGROUNDS}" -gt 30 ]; then
      menucounter=1 ; counter=1
      if [ "$(echo -n ${menucounter} | wc -c)" -eq 1 ] ;then
        rmenucounter=0${menucounter}
        [ "${menucounter}" -eq 1 ] && rmenucounter=" 0${menucounter}"
      else
        rmenucounter=${menucounter}
      fi
      echo "		[submenu] (${FBI_BGMENU}${rmenucounter}) {${FBI_BGMENUTITLE}}" >> "${FB_BGMENU_TMP}"
      find ${FB_BACKGROUND_DIRS} -follow -type f \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.xpm' -o -iname '*.bmp' -o -name '*.gif' -o -iname '*.tiff' \) 2> /dev/null | sort | while read i; do
        counter=$(expr $counter + 1)
        if [ ${counter} -eq 30 ]; then
          counter=1
          menucounter=$(expr ${menucounter} + 1)
          if [ "$(echo -n ${menucounter} | wc -c)" -eq 1 ] ;then
            rmenucounter=0${menucounter}
            [ "${menucounter}" -eq 1 ] && rmenucounter=" 0${menucounter}"
          else
            rmenucounter=${menucounter}
          fi
          echo '		[end]' >> "${FB_BGMENU_TMP}"
          echo "		[submenu] (${BACKGROUNDMENU}${rmenucounter}) {${FBI_BGMENUTITLE}}" >> "${FB_BGMENU_TMP}"
        fi
        addbackground "$i"
      done
      echo '		[end]' >> "${FB_BGMENU_TMP}"
    else
      find ${FB_BACKGROUND_DIRS} -follow -type f \( -iname '*.png' -o -iname '*.jpg' -o -iname '*.xpm' -o -iname '*.bmp' -o -name '*.gif' -o -iname '*.tiff' \) 2> /dev/null | sort | while read i; do
        addbackground "$i"
      done
    fi
    echo '	[end]' >> "${FB_BGMENU_TMP}"
    cp -f "${FB_BGMENU_TMP}" "${FB_BGMENU}"
  else
    echo "${FBI_BGWARN}:
    ${FB_BACKGROUND_DIRS}" >&2
  fi
}

mainmenu(){
  [ -f "${FB_MAINMENU}" ] && cp -f "${FB_MAINMENU}" "${FB_MAINMENU}.old"
  echo "${FBI_GENING} ${FB_MAINMENU}..."

  FB_MAINMENU_TMP="${tmp}/${FB_MAINMENUNAME}"

  echo "[begin] (${FB_MENUTITLE})" > "${FB_MAINMENU_TMP}"
  [ "${FB_TERM}" ] && find_exec "" "${FBI_TERM}" "${FB_TERM}"
  [ "${FB_FILE}" ] && find_exec "" "${FBI_FILE}" "${FB_FILE}"
  [ "${FB_BROWSER}" ] && find_exec "" "${FBI_BROWSER}" "${FB_BROWSER}"
  [ "${FB_MAIL}" ] && find_exec "" "${FBI_MAIL}" "${FB_MAIL}"
  echo '[separator]' >> "${FB_MAINMENU_TMP}"
  [ -f "${FB_SUBMENU1}" ] && echo "	[include] (${FB_SUBMENU1})" >> "${FB_MAINMENU_TMP}"
  [ -f "${FB_SUBMENU2}" ] && echo "	[include] (${FB_SUBMENU2})" >> "${FB_MAINMENU_TMP}"
  [ -f "${FB_SUBMENU3}" ] && echo "	[include] (${FB_SUBMENU3})" >> "${FB_MAINMENU_TMP}"
  [ -f "${FB_USERMENU}" ] && echo "	[include] (${FB_USERMENU})" >> "${FB_MAINMENU_TMP}"

  if [ -f "${FB_SUBMENU1}" ] || [ -f "${FB_SUBMENU2}" ] || [ -f "${FB_SUBMENU3}" ] || "${FB_USERMENU}"  ;then
    echo "[separator]" >> "${FB_MAINMENU_TMP}"
  fi
  cat >> "${FB_MAINMENU_TMP}" <<EOF
[submenu] (${FBI_SETTINGSMENU})
	[config] (${FBI_CONFIGURE})
	[submenu] (${FBI_SYSTEMSTYLES}) {${FBI_STYLEMENUTITLE}}
		[stylesdir] (/usr/share/fluxbox/styles)
	[end]
	[submenu] (${FBI_USERSTYLES}) {${FBI_STYLEMENUTITLE}}
		[stylesdir] (~/.fluxbox/styles)
	[end]
EOF

 [ -f "${FB_BGMENU}" ] && echo "	[include] (${FB_BGMENU})" >> "${FB_MAINMENU_TMP}"
  echo "	[workspaces] (${FBI_WORKSPACEMENU})" >> "${FB_MAINMENU_TMP}"
  echo "	[submenu] (${FBI_TOOLS})" >> "${FB_MAINMENU_TMP}"
  find_exec "		" "Fluxconf" "fluxconf"
  find_exec "		" "Fluxkeys" "fluxkeys"
  find_exec "		" "Fluxmenu" "fluxmenu"
  find_exec "		" "${FBI_GTKSTYLE}" "lxappearance"
  if which "zenity" &>/dev/null ;then
    find_exec "		" "${FBI_WINDOWNAME}" "zenity --info --text=\"\$(xprop WM_CLASS|cut -d \\\" -f 2)\" --title=\"${FBI_WINDOWNAME}\""
    find_exec "		" "${FBI_WINDOWINFO}" "zenity --info --text=\"\$(xwininfo)\" --title=\"${FBI_WINDOWINFO}\""
  elif which "Xdialog" &>/dev/null ;then
    find_exec "		" "${FBI_WINDOWNAME}" "Xdialog --title \"${FBI_WINDOWNAME}\" --infobox \"\$(xprop WM_CLASS|cut -d \\\" -f 2)\" 5 20 0"
    find_exec "		" "${FBI_WINDOWINFO}" "Xdialog --title \"${FBI_WINDOWINFO}\" --infobox \"\$(xwininfo)\" 40 100 0"
  elif which "xmessage" &>/dev/null ;then
    find_exec "		" "${FBI_WINDOWNAME}" "xprop WM_CLASS|cut -d \\\" -f 2 | xmessage -file - -center"
    find_exec "		" "${FBI_WINDOWINFO}" "xwininfo | xmessage -file - -center"
  fi
  find_exec "		" "${FBI_SCREENSHOT}" "import \${TMP}/fluxbox-screenshot-$(whoami).png && display -resize 50% \${TMP}/fluxbox-screenshot-$(whoami).png"
   cat >> "${FB_MAINMENU_TMP}" <<EOF
		[submenu] (${FBI_REGEN_MENU})
			[exec] (${FBI_REGEN_AMENU}) {fluxbox-chinfo-menu -a}
			[exec] (${FBI_REGEN_MMENU}) {fluxbox-chinfo-menu -m}
			[exec] (${FBI_REGEN_SMENU}) {fluxbox-chinfo-menu -s}
			[exec] (${FBI_REGEN_BMENU}) {fluxbox-chinfo-menu -b}
		[end]
	[end]
	[submenu] (${FBI_WINDOWMANAGERS})
EOF

  for wm in beryl blackbox compiz enlightenment evilwm fvwm fvwm2 icewm ion metacity mwm openbox pekwm sawfish twm waimea wmaker wmii ; do
    find_wm "		" "${wm}" "start${wm}"
  done
  for wm in e16 kde lxde metisse xfce4; do
    find_wm "		" "${wm}" "start${wm}"
  done
  find_wm "		" "gnome" "gnome-session"

cat >> "${FB_MAINMENU_TMP}" <<EOF
	[end]
	[commanddialog] (${FBI_FLUXBOXCOMMAND})
	[separator]
	[reconfig] (${FBI_RELOADITEM})
	[restart] (${FBI_RESTARTITEM})
[end]
[separator]
EOF

  find_exec "" "${FBI_RUNCOMM}" "fbrun -title '${FBI_RUNCOMM}' ${FB_FBRUNOPTIONS}"
  echo "[separator]" >> "${FB_MAINMENU_TMP}"
  if which "kfind" &>/dev/null || which "khelpcenter" &>/dev/null \
    || which "gnome-search-tool" &>/dev/null || which "yelp" &>/dev/null ;then
    echo "	[submenu] (${FBI_HELPSEARCH})" >> "${FB_MAINMENU_TMP}"
    find_exec "		" "[KDE] ${FBI_SEARCH}" "kfind"
    find_exec "		" "[KDE] ${FBI_HELP}" "khelpcenter"
    find_exec "		" "[GNOME] ${FBI_SEARCH}" "gnome-search-tool"
    find_exec "		" "[GNOME] ${FBI_HELP}" "yelp"
    echo "	[end]" >> "${FB_MAINMENU_TMP}"
    echo "[separator]" >> "${FB_MAINMENU_TMP}"
  fi
  find_exec "" "${FBI_DISPLAYCOMMAND}" "fluxboxdm-helper --new"
  echo "[separator]" >> "${FB_MAINMENU_TMP}"
  
  find_exec "" "${FBI_LOCKSCREEN} [xlock]" "xlock"
  find_exec "" "${FBI_LOCKSCREEN} [xscreensaver]" "xscreensaver-command -lock"
  echo "[separator]" >> "${FB_MAINMENU_TMP}"
  echo "[exit] (${FBI_EXITITEM})" >> "${FB_MAINMENU_TMP}"
  echo "[separator]" >> "${FB_MAINMENU_TMP}"
  find_exec  "" "${FBI_REBOOTITEM}" "fluxboxdm-helper --fluxbox --reboot"
  find_exec  "" "${FBI_SHUTDITEM}" "fluxboxdm-helper --fluxbox --shutdown"
  echo "[end]" >> "${FB_MAINMENU_TMP}"
  cp -f "${FB_MAINMENU_TMP}" "${FB_MAINMENU}"
}

case "$1" in
  -a|--all)
    submenu
    bgmenu
    mainmenu
    ;;
  -b|--bgmenu)
    bgmenu
    ;;
  -m|--mainmenu)
    mainmenu
    ;;
  -s|--submenu)
    submenu
    ;;
  -h|*)
    txt
    ;;
esac
