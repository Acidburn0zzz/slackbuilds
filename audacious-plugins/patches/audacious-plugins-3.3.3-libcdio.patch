diff -Nurb --strip-trailing-cr /tmp/tmp.fBexl7rSmA/audacious-plugins-old/src/cdaudio-ng/cdaudio-ng.c audacious-plugins/src/cdaudio-ng/cdaudio-ng.c
--- /tmp/tmp.fBexl7rSmA/audacious-plugins-old/src/cdaudio-ng/cdaudio-ng.c	2012-12-22 11:05:05.000000000 +0100
+++ audacious-plugins/src/cdaudio-ng/cdaudio-ng.c	2013-01-10 11:05:04.604560967 +0100
@@ -26,11 +26,16 @@
 #include <cdio/cdio.h>
 #include <cdio/cdtext.h>
 #include <cdio/track.h>
-#include <cdio/cdda.h>
 #include <cdio/audio.h>
 #include <cdio/sector.h>
 #include <cdio/cd_types.h>
 
+#if LIBCDIO_VERSION_NUM >= 90
+#include <cdio/paranoia/cdda.h>
+#else
+#include <cdio/cdda.h>
+#endif
+
 /* libcdio's header files #define these */
 #undef PACKAGE
 #undef PACKAGE_BUGREPORT
@@ -269,9 +274,9 @@
                                  const char * performer, const char * name,
                                  const char * genre)
 {
-    g_strlcpy (t->performer, performer, DEF_STRING_LEN);
-    g_strlcpy (t->name, name, DEF_STRING_LEN);
-    g_strlcpy (t->genre, genre, DEF_STRING_LEN);
+    g_strlcpy (t->performer, performer ? performer : "", DEF_STRING_LEN);
+    g_strlcpy (t->name, name ? name : "", DEF_STRING_LEN);
+    g_strlcpy (t->genre, genre ? genre : "", DEF_STRING_LEN);
 }
 
 /* thread safe (mutex may be locked) */
@@ -622,23 +627,32 @@
     }
 
     /* get trackinfo[0] cdtext information (the disc) */
+    cdtext_t *pcdtext = NULL;
     if (aud_get_bool ("CDDA", "use_cdtext"))
     {
         AUDDBG ("getting cd-text information for disc\n");
-        cdtext_t *pcdtext = cdio_get_cdtext (pcdrom_drive->p_cdio, 0);
+#if LIBCDIO_VERSION_NUM >= 90
+        pcdtext = cdio_get_cdtext (pcdrom_drive->p_cdio);
+        if (pcdtext == NULL)
+#else
+        pcdtext = cdio_get_cdtext (pcdrom_drive->p_cdio, 0);
         if (pcdtext == NULL || pcdtext->field[CDTEXT_TITLE] == NULL)
+#endif
         {
             AUDDBG ("no cd-text available for disc\n");
         }
         else
         {
             cdaudio_set_strinfo (&trackinfo[0],
-                                 pcdtext->field[CDTEXT_PERFORMER] ? pcdtext->
-                                 field[CDTEXT_PERFORMER] : "",
-                                 pcdtext->field[CDTEXT_TITLE] ? pcdtext->
-                                 field[CDTEXT_TITLE] : "",
-                                 pcdtext->field[CDTEXT_GENRE] ? pcdtext->
-                                 field[CDTEXT_GENRE] : "");
+#if LIBCDIO_VERSION_NUM >= 90
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_PERFORMER, 0),
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_TITLE, 0),
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_GENRE, 0));
+#else
+                                 pcdtext->field[CDTEXT_PERFORMER],
+                                 pcdtext->field[CDTEXT_TITLE],
+                                 pcdtext->field[CDTEXT_GENRE]);
+#endif
         }
     }
 
@@ -646,7 +660,7 @@
     bool_t cdtext_was_available = FALSE;
     for (trackno = firsttrackno; trackno <= lasttrackno; trackno++)
     {
-        cdtext_t *pcdtext = NULL;
+#if LIBCDIO_VERSION_NUM < 90
         if (aud_get_bool ("CDDA", "use_cdtext"))
         {
             AUDDBG ("getting cd-text information for track %d\n", trackno);
@@ -657,16 +671,20 @@
                 pcdtext = NULL;
             }
         }
+#endif
 
         if (pcdtext != NULL)
         {
             cdaudio_set_strinfo (&trackinfo[trackno],
-                                 pcdtext->field[CDTEXT_PERFORMER] ? pcdtext->
-                                 field[CDTEXT_PERFORMER] : "",
-                                 pcdtext->field[CDTEXT_TITLE] ? pcdtext->
-                                 field[CDTEXT_TITLE] : "",
-                                 pcdtext->field[CDTEXT_GENRE] ? pcdtext->
-                                 field[CDTEXT_GENRE] : "");
+#if LIBCDIO_VERSION_NUM >= 90
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_PERFORMER, trackno),
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_TITLE, trackno),
+                                 cdtext_get(pcdtext, CDTEXT_FIELD_GENRE, trackno));
+#else
+                                 pcdtext->field[CDTEXT_PERFORMER],
+                                 pcdtext->field[CDTEXT_TITLE],
+                                 pcdtext->field[CDTEXT_GENRE]);
+#endif
             cdtext_was_available = TRUE;
         }
         else

