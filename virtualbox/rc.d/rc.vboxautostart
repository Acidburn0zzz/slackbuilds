#!/bin/bash
# init script for VirtualBox
#
# chkconfig: 2345 04 04
# description: VirtualBox autostart service.

[ "$(id -u)" -eq 0 ] || exit 1

unset INSTALL_DIR
[ -e /etc/vbox/vbox.cfg ] && . /etc/vbox/vbox.cfg
unset VBOXAUTOSTART_DB VBOXAUTOSTART_CONFIG 
[ -e /etc/default/virtualbox ] && . /etc/default/virtualbox

if [ -z "${INSTALL_DIR}" ]; then
  echo "VirtualBox is not installed properly" && exit 1
fi

[ "$(id -u)" -eq 0 ] || exit 1

exec="${INSTALL_DIR}/VBoxAutostart"
prog=$(basename ${exec})
lockfile=/var/lock/subsys/${prog}

[ -x "${exec}" ] || exit 0

RETVAL=0

killproc() {
  killall $1
  rm -f $PIDFILE
}
start_daemon() {
  usr="$1"
  shift
  /bin/su - $usr -c "$*"
}

vboxdrvrunning() {
  lsmod | grep -q "$1[^_-]"
}

start() {
  [ -z "${VBOXAUTOSTART_DB}" ] && exit 0
  [ -z "${VBOXAUTOSTART_CONFIG}" ] && exit 0
  echo -n "Starting VirtualBox VMs configured for autostart"
  vboxdrvrunning || {
    echo "VirtualBox kernel module not loaded!"
    RETVAL=1
  }
  PARAMS="--background --start --config ${VBOXAUTOSTART_CONFIG}"

  # prevent inheriting this setting to VBoxSVC
  unset VBOX_RELEASE_LOG_DEST

  if [ ${RETVAL} -eq 0 ] ;then
    for user in $(ls ${VBOXAUTOSTART_DB}/*.start) ;do
      start_daemon $(basename ${user} | sed -ne "s/\(.*\).start/\1/p") ${exec} ${PARAMS} > /dev/null 2>&1
    done
    RETVAL=$?
  fi

  if [ ${RETVAL} -eq 0 ] ; then
    echo -e "\t\t[  OK  ]\r"
  else
    echo -e "\t\t[FAILED]\r"
  fi

  return ${RETVAL}
}

stop() {
  [ -z "${VBOXAUTOSTART_DB}" ] && exit 0
  [ -z "${VBOXAUTOSTART_CONFIG}" ] && exit 0

  exit 0

  #echo -n "Stopping VirtualBox VMs configured for autostop"
  #vboxdrvrunning || {
  #  echo "VirtualBox kernel module not loaded!"
  #  RETVAL=1
  #}
  #PARAMS="--stop"
  #[ -n "${VBOXAUTOSTART_CONFIG}" ] && PARAMS="${PARAMS} -c ${VBOXAUTOSTART_CONFIG}"

  # prevent inheriting this setting to VBoxSVC
  #unset VBOX_RELEASE_LOG_DEST

  #if [ ${RETVAL} -eq 0 ] ;then
  #  for user in $(ls ${VBOXAUTOSTART_DB}/*.stop) ;do
  #    start_daemon $(basename ${user} | sed -ne "s/\(.*\).stop/\1/p") ${exec} ${PARAMS} > /dev/null 2>&1
  #  done
  #  RETVAL=$?
  #fi

  #if [ ${RETVAL} -eq 0 ] ; then
  #  echo -e "\t\t\t[  OK  ]\r"
  #else
  #  echo -e "\t\t\t[FAILED]\r"
  #fi
  #
  #return ${RETVAL}
}

case "$1" in
  start|stop)
    $1
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;
esac
exit ${RETVAL}
