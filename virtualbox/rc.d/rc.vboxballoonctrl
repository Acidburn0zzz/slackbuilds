#!/bin/sh
#
# vboxballoonctrl      This shell script takes care of starting and stopping vboxballoonctrl.
#
# description:  VirtualBox balloon control daemon
# processname:  VBoxBalloonCtrl

[ "$(id -u)" -eq 0 ] || exit 1

exec="/usr/bin/VBoxBalloonCtrl"
prog=$(basename ${exec})
lockfile=/var/lock/subsys/vboxballoonctrl

[ -x "${exec}" ] || exit 0

unset VBOXBALLOONCTRL_USER VBOXBALLOONCTRL_OPTIONS
[ -e /etc/default/vboxballoonctrl ] && . /etc/default/vboxballoonctrl

RETVAL=0

PID=$(/sbin/pidof -o %PPID ${exec})

vboxdrvrunning() {
  lsmod | grep -q "vboxdrv[^_-]"
}

check_single_user() {
  if [ -n "$2" ]; then
     echo "VBOXBALLOONCTRL_USER must not contain multiple users!"
     exit 1
  fi
}

start() {
  [ -z "${VBOXBALLOONCTRL_USER}" ] && exit 0
  check_single_user ${VBOXBALLOONCTRL_USER}
  vboxdrvrunning || {
    echo "VirtualBox kernel module not loaded!"
    exit 0
  }
  echo -n "Starting ${prog}: "
  if [ -z "${PID}" ] ;then
    unset VBOX_RELEASE_LOG_DEST
    su - "${VBOXBALLOONCTRL_USER}" -c "${exec} --background ${VBOXBALLOONCTRL_OPTIONS}" &>/dev/null
    sleep .1
  else
    RETVAL=1
  fi
  PID=$(/sbin/pidof -o %PPID ${exec})
  [ -z "${PID}" ] && RETVAL=1
  if [ ${RETVAL} -eq 0 ] && echo ${PID} > ${lockfile} ; then
    echo -e "\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

stop() {
  echo -n "Stopping ${prog}: "
  if [ -n "${PID}" ] ;then
    kill ${PID} &>/dev/null
    RETVAL=$?
  else
    RETVAL=1
  fi
  if [ ${RETVAL} -eq 0 ] && rm -f ${lockfile} ; then
    echo -e "\t\t\t\t\t[  OK  ]\r"
  else
    echo -e "\t\t\t\t\t[FAILED]\r"
  fi
  return ${RETVAL}
}

restart() {
  stop
  unset PID
  start
}

# See how we were called.
case "$1" in
  start|stop)
    $1
    ;;
  force-reload|restart|reload)
    restart
    ;;
  status)
    if [ -f ${lockfile} ]; then
      echo "${prog} is running in pid ${PID}."
    else
      echo "${prog} is not running."
    fi
    ;;
  condrestart)
    if  [ ! -f ${lockfile} ]; then restart ;fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart|reload|force-reload}"
    exit 2
    ;;
esac

exit ${RETVAL}
