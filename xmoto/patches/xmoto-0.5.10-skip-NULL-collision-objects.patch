--- xmoto-0.5.10.orig_prep/src/Collision.cpp	2011-10-11 13:18:35.000000000 -0700
+++ xmoto-0.5.10.orig_prep/src/Collision.cpp	2013-05-04 08:18:37.234561882 -0700
@@ -888,58 +888,64 @@ 
     m_widthDivisor  = (float)(m_gridWidth)  / (m_max.x - m_min.x);
     m_heightDivisor = (float)(m_gridHeight) / (m_max.y - m_min.y);
 
     m_pGrid = new GridCell[m_gridWidth * m_gridHeight];    
   }
 
   template <class T> struct ColElement<T>* ElementHandler<T>::addElement(T* id)
   {
     struct ColElement<T>* pNewElem = new struct ColElement<T>;
     pNewElem->id = id;
     m_ColElements.push_back(pNewElem);
 
     _addColElementInCells(pNewElem);
     return pNewElem;      
   }
 
   template <class T> void
   ElementHandler<T>::removeElement(T* id)
   {
     struct ColElement<T>* pColElem = _getAndRemoveColElement(id);
-    _removeColElementFromCells(pColElem);
 
-    delete pColElem;
+    if (pColElem != 0) {
+      _removeColElementFromCells(pColElem);
+      delete pColElem;
+    }
   }
 
   template <class T> void
   ElementHandler<T>::moveElement(T* id)
   {
     struct ColElement<T>* pColElem = _getColElement(id);
-    _removeColElementFromCells(pColElem);
-    _addColElementInCells(pColElem);
+    if (pColElem != 0) {
+      _removeColElementFromCells(pColElem);
+      _addColElementInCells(pColElem);
+    }
   }
 
   template <class T> void
   ElementHandler<T>::moveElement(struct ColElement<T>* pColElem)
   {
-    _removeColElementFromCells(pColElem);
-    _addColElementInCells(pColElem);
+    if (pColElem != 0) {
+      _removeColElementFromCells(pColElem);
+      _addColElementInCells(pColElem);
+    }
   }
 
 
 
   inline int my_floor(float x) {
     int ix = (int)x;
     return (ix >= 0) ? ix : ix-1;
   }
 
 
 
   template <class T> std::vector<T*>&
   ElementHandler<T>::getElementsNearPosition(AABB& BBox)
   {
     m_returnedElements.clear();
     Vector2f BMin = BBox.getBMin();
     Vector2f BMax = BBox.getBMax();
 
     /* grid coordonates */
     int nMinCX = my_floor(((BMin.x - m_min.x - CD_EPSILON) * m_widthDivisor));
